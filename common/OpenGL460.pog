
// OpenGL 4.6 core
// and the ARB_bindless_texture extension


type GLuint64EXT = uint64;
type GLintptr = int64;
type GLint64 = int64;
type GLuint64 = uint64;
type GLsizeiptr = int64;

type __GLsync;
type GLsync = __GLsync*;

type GLenum = uint32;
type GLboolean = uint8;
type GLbitfield = uint32;
type GLvoid = void;
type GLbyte = int8;
type GLubyte = uint8;
type GLshort = int16;
type GLushort = uint16;
type GLint = int32;
type GLuint = uint32;
type GLclampx = int32;
type GLsizei = int32;
type GLfloat = float32;
type GLclampf = float32;
type GLdouble = float64;
type GLclampd = float64;
type GLeglClientBufferEXT = void*;
type GLeglImageOES = void*;
type GLchar = char;
type GLcharARB = char;

type GLDEBUGPROC = void(GLenum source, GLenum _type, GLuint id, GLenum severity, GLsizei length, /*const*/ GLchar* message, /*const*/ void* userParam);



type proc_glVertexAttribL1ui64vARB                                 = void    (GLuint index, /*const*/ GLuint64EXT* v);
type proc_glVertexAttribL1ui64ARB                                  = void    (GLuint index, GLuint64EXT x);
type proc_glIsImageHandleResidentARB                               = GLboolean   (GLuint64 handle);
type proc_glIsTextureHandleResidentARB                             = GLboolean   (GLuint64 handle);
type proc_glProgramUniformHandleui64ARB                            = void    (GLuint program, GLint location, GLuint64 value);
type proc_glUniformHandleui64vARB                                  = void    (GLint location, GLsizei count, /*const*/ GLuint64* value);
type proc_glGetTextureSamplerHandleARB                             = GLuint64   (GLuint texture, GLuint sampler);
type proc_glGetTextureHandleARB                                    = GLuint64   (GLuint texture);
type proc_glPolygonOffsetClamp                                     = void    (GLfloat factor, GLfloat units, GLfloat clamp);
type proc_glMultiDrawArraysIndirectCount                           = void    (GLenum mode, /*const*/ void* indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
type proc_glSpecializeShader                                       = void    (GLuint shader, /*const*/ GLchar* pEntryPoint, GLuint numSpecializationConstants, /*const*/ GLuint* pConstantIndex, /*const*/ GLuint* pConstantValue);
type proc_glTextureBarrier                                         = void    ();
type proc_glReadnPixels                                            = void    (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum _type, GLsizei bufSize, void* data);
type proc_glGetnUniformuiv                                         = void    (GLuint program, GLint location, GLsizei bufSize, GLuint* params);
type proc_glGetnUniformfv                                          = void    (GLuint program, GLint location, GLsizei bufSize, GLfloat* params);
type proc_glGetnCompressedTexImage                                 = void    (GLenum target, GLint lod, GLsizei bufSize, void* pixels);
type proc_glGetCompressedTextureSubImage                           = void    (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize, void* pixels);
type proc_glMemoryBarrierByRegion                                  = void    (GLbitfield barriers);
type proc_glGetQueryBufferObjectuiv                                = void    (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
type proc_glGetQueryBufferObjectui64v                              = void    (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
type proc_glCreateSamplers                                         = void    (GLsizei n, GLuint* samplers);
type proc_glGetVertexArrayIndexed64iv                              = void    (GLuint vaobj, GLuint index, GLenum pname, GLint64* param);
type proc_glGetVertexArrayIndexediv                                = void    (GLuint vaobj, GLuint index, GLenum pname, GLint* param);
type proc_glGetVertexArrayiv                                       = void    (GLuint vaobj, GLenum pname, GLint* param);
type proc_glVertexArrayBindingDivisor                              = void    (GLuint vaobj, GLuint bindingindex, GLuint divisor);
type proc_glVertexArrayAttribIFormat                               = void    (GLuint vaobj, GLuint attribindex, GLint size, GLenum _type, GLuint relativeoffset);
type proc_glVertexArrayElementBuffer                               = void    (GLuint vaobj, GLuint buffer);
type proc_glEnableVertexArrayAttrib                                = void    (GLuint vaobj, GLuint index);
type proc_glDisableVertexArrayAttrib                               = void    (GLuint vaobj, GLuint index);
type proc_glGetTextureParameteriv                                  = void    (GLuint texture, GLenum pname, GLint* params);
type proc_glGetnUniformdv                                          = void    (GLuint program, GLint location, GLsizei bufSize, GLdouble* params);
type proc_glGetTextureParameterIuiv                                = void    (GLuint texture, GLenum pname, GLuint* params);
type proc_glGetTextureLevelParameterfv                             = void    (GLuint texture, GLint level, GLenum pname, GLfloat* params);
type proc_glGetTextureImage                                        = void    (GLuint texture, GLint level, GLenum format, GLenum _type, GLsizei bufSize, void* pixels);
type proc_glBindTextureUnit                                        = void    (GLuint unit, GLuint texture);
type proc_glGenerateTextureMipmap                                  = void    (GLuint texture);
type proc_glTextureParameterIuiv                                   = void    (GLuint texture, GLenum pname, /*const*/ GLuint* params);
type proc_glTextureParameterfv                                     = void    (GLuint texture, GLenum pname, /*const*/ GLfloat* param);
type proc_glCopyTextureSubImage3D                                  = void    (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
type proc_glCopyTextureSubImage1D                                  = void    (GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
type proc_glCompressedTextureSubImage3D                            = void    (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, /*const*/ void* data);
type proc_glCompressedTextureSubImage2D                            = void    (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, /*const*/ void* data);
type proc_glTextureSubImage3D                                      = void    (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum _type, /*const*/ void* pixels);
type proc_glTextureParameterIiv                                    = void    (GLuint texture, GLenum pname, /*const*/ GLint* params);
type proc_glTextureSubImage2D                                      = void    (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum _type, /*const*/ void* pixels);
type proc_glTextureSubImage1D                                      = void    (GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum _type, /*const*/ void* pixels);
type proc_glTextureStorage2DMultisample                            = void    (GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
type proc_glTextureStorage3D                                       = void    (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
type proc_glTextureStorage2D                                       = void    (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
type proc_glTextureStorage1D                                       = void    (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width);
type proc_glTextureBuffer                                          = void    (GLuint texture, GLenum internalformat, GLuint buffer);
type proc_glCreateTextures                                         = void    (GLenum target, GLsizei n, GLuint* textures);
type proc_glCreateRenderbuffers                                    = void    (GLsizei n, GLuint* renderbuffers);
type proc_glClearNamedFramebufferfi                                = void    (GLuint framebuffer, GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
type proc_glClearNamedFramebufferuiv                               = void    (GLuint framebuffer, GLenum buffer, GLint drawbuffer, /*const*/ GLuint* value);
type proc_glInvalidateNamedFramebufferSubData                      = void    (GLuint framebuffer, GLsizei numAttachments, /*const*/ GLenum* attachments, GLint x, GLint y, GLsizei width, GLsizei height);
type proc_glInvalidateNamedFramebufferData                         = void    (GLuint framebuffer, GLsizei numAttachments, /*const*/ GLenum* attachments);
type proc_glNamedFramebufferReadBuffer                             = void    (GLuint framebuffer, GLenum src);
type proc_glNamedFramebufferTexture                                = void    (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
type proc_glNamedFramebufferRenderbuffer                           = void    (GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
type proc_glCreateFramebuffers                                     = void    (GLsizei n, GLuint* framebuffers);
type proc_glGetNamedBufferParameteri64v                            = void    (GLuint buffer, GLenum pname, GLint64* params);
type proc_glMapNamedBuffer                                         = void*   (GLuint buffer, GLenum access);
type proc_glClearNamedBufferSubData                                = void    (GLuint buffer, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum _type, /*const*/ void* data);
type proc_glClearNamedBufferData                                   = void    (GLuint buffer, GLenum internalformat, GLenum format, GLenum _type, /*const*/ void* data);
type proc_glCopyNamedBufferSubData                                 = void    (GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
type proc_glNamedBufferSubData                                     = void    (GLuint buffer, GLintptr offset, GLsizeiptr size, /*const*/ void* data);
type proc_glNamedBufferData                                        = void    (GLuint buffer, GLsizeiptr size, /*const*/ void* data, GLenum usage);
type proc_glNamedBufferStorage                                     = void    (GLuint buffer, GLsizeiptr size, /*const*/ void* data, GLbitfield flags);
type proc_glGetTransformFeedbacki_v                                = void    (GLuint xfb, GLenum pname, GLuint index, GLint* param);
type proc_glTransformFeedbackBufferRange                           = void    (GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
type proc_glVertexArrayAttribLFormat                               = void    (GLuint vaobj, GLuint attribindex, GLint size, GLenum _type, GLuint relativeoffset);
type proc_glBindImageTextures                                      = void    (GLuint first, GLsizei count, /*const*/ GLuint* textures);
type proc_glBindSamplers                                           = void    (GLuint first, GLsizei count, /*const*/ GLuint* samplers);
type proc_glBindTextures                                           = void    (GLuint first, GLsizei count, /*const*/ GLuint* textures);
type proc_glClearTexImage                                          = void    (GLuint texture, GLint level, GLenum format, GLenum _type, /*const*/ void* data);
type proc_glGetPointerv                                            = void    (GLenum pname, void** params);
type proc_glGetnUniformiv                                          = void    (GLuint program, GLint location, GLsizei bufSize, GLint* params);
type proc_glGetObjectPtrLabel                                      = void    (/*const*/ void* ptr, GLsizei bufSize, GLsizei* length, GLchar* label);
type proc_glGetQueryBufferObjecti64v                               = void    (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
type proc_glGetTransformFeedbacki64_v                              = void    (GLuint xfb, GLenum pname, GLuint index, GLint64* param);
type proc_glObjectPtrLabel                                         = void    (/*const*/ void* ptr, GLsizei length, /*const*/ GLchar* label);
type proc_glPushDebugGroup                                         = void    (GLenum source, GLuint id, GLsizei length, /*const*/ GLchar* message);
type proc_glDebugMessageControl                                    = void    (GLenum source, GLenum _type, GLenum severity, GLsizei count, /*const*/ GLuint* ids, GLboolean enabled);
type proc_glVertexAttribBinding                                    = void    (GLuint attribindex, GLuint bindingindex);
type proc_glVertexAttribLFormat                                    = void    (GLuint attribindex, GLint size, GLenum _type, GLuint relativeoffset);
type proc_glVertexAttribIFormat                                    = void    (GLuint attribindex, GLint size, GLenum _type, GLuint relativeoffset);
type proc_glVertexAttribFormat                                     = void    (GLuint attribindex, GLint size, GLenum _type, GLboolean normalized, GLuint relativeoffset);
type proc_glTexStorage2DMultisample                                = void    (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
type proc_glShaderStorageBlockBinding                              = void    (GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);
type proc_glGetProgramResourceLocationIndex                        = GLint   (GLuint program, GLenum programInterface, /*const*/ GLchar* name);
type proc_glGetProgramResourceName                                 = void    (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei* length, GLchar* name);
type proc_glGetProgramResourceIndex                                = GLuint   (GLuint program, GLenum programInterface, /*const*/ GLchar* name);
type proc_glMultiDrawElementsIndirect                              = void    (GLenum mode, GLenum _type, /*const*/ void* indirect, GLsizei drawcount, GLsizei stride);
type proc_glInvalidateSubFramebuffer                               = void    (GLenum target, GLsizei numAttachments, /*const*/ GLenum* attachments, GLint x, GLint y, GLsizei width, GLsizei height);
type proc_glInvalidateBufferSubData                                = void    (GLuint buffer, GLintptr offset, GLsizeiptr length);
type proc_glInvalidateTexImage                                     = void    (GLuint texture, GLint level);
type proc_glInvalidateTexSubImage                                  = void    (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);
type proc_glGetFramebufferParameteriv                              = void    (GLenum target, GLenum pname, GLint* params);
type proc_glFramebufferParameteri                                  = void    (GLenum target, GLenum pname, GLint param);
type proc_glNamedRenderbufferStorage                               = void    (GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
type proc_glDispatchComputeIndirect                                = void    (GLintptr indirect);
type proc_glDispatchCompute                                        = void    (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
type proc_glDrawTransformFeedbackStreamInstanced                   = void    (GLenum mode, GLuint id, GLuint stream, GLsizei instancecount);
type proc_glTexStorage2D                                           = void    (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
type proc_glTexStorage1D                                           = void    (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
type proc_glVertexBindingDivisor                                   = void    (GLuint bindingindex, GLuint divisor);
type proc_glBindImageTexture                                       = void    (GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);
type proc_glGetInternalformativ                                    = void    (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint* params);
type proc_glDrawElementsInstancedBaseInstance                      = void    (GLenum mode, GLsizei count, GLenum _type, /*const*/ void* indices, GLsizei instancecount, GLuint baseinstance);
type proc_glBufferStorage                                          = void    (GLenum target, GLsizeiptr size, /*const*/ void* data, GLbitfield flags);
type proc_glDrawArraysInstancedBaseInstance                        = void    (GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);
type proc_glDepthRangeArrayv                                       = void    (GLuint first, GLsizei count, /*const*/ GLdouble* v);
type proc_glNamedFramebufferParameteri                             = void    (GLuint framebuffer, GLenum pname, GLint param);
type proc_glScissorIndexedv                                        = void    (GLuint index, /*const*/ GLint* v);
type proc_glViewportIndexedf                                       = void    (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
type proc_glVertexAttribLPointer                                   = void    (GLuint index, GLint size, GLenum _type, GLsizei stride, /*const*/ void* pointer);
type proc_glVertexAttribL4dv                                       = void    (GLuint index, /*const*/ GLdouble* v);
type proc_glVertexAttribL3dv                                       = void    (GLuint index, /*const*/ GLdouble* v);
type proc_glVertexAttribL2dv                                       = void    (GLuint index, /*const*/ GLdouble* v);
type proc_glCreateTransformFeedbacks                               = void    (GLsizei n, GLuint* ids);
type proc_glTexBufferRange                                         = void    (GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
type proc_glVertexAttribL4d                                        = void    (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
type proc_glVertexAttribL2d                                        = void    (GLuint index, GLdouble x, GLdouble y);
type proc_glGetProgramPipelineInfoLog                              = void    (GLuint pipeline, GLsizei bufSize, GLsizei* length, GLchar* infoLog);
type proc_glValidateProgramPipeline                                = void    (GLuint pipeline);
type proc_glProgramUniformMatrix4x3dv                              = void    (GLuint program, GLint location, GLsizei count, GLboolean transpose, /*const*/ GLdouble* value);
type proc_glProgramUniformMatrix3x4fv                              = void    (GLuint program, GLint location, GLsizei count, GLboolean transpose, /*const*/ GLfloat* value);
type proc_glProgramUniformMatrix4x2fv                              = void    (GLuint program, GLint location, GLsizei count, GLboolean transpose, /*const*/ GLfloat* value);
type proc_glProgramUniformMatrix2x4fv                              = void    (GLuint program, GLint location, GLsizei count, GLboolean transpose, /*const*/ GLfloat* value);
type proc_glPopDebugGroup                                          = void    ();
type proc_glProgramUniformMatrix3x2fv                              = void    (GLuint program, GLint location, GLsizei count, GLboolean transpose, /*const*/ GLfloat* value);
type proc_glProgramUniformMatrix4dv                                = void    (GLuint program, GLint location, GLsizei count, GLboolean transpose, /*const*/ GLdouble* value);
type proc_glTextureParameterf                                      = void    (GLuint texture, GLenum pname, GLfloat param);
type proc_glProgramUniformMatrix3dv                                = void    (GLuint program, GLint location, GLsizei count, GLboolean transpose, /*const*/ GLdouble* value);
type proc_glProgramUniformMatrix4fv                                = void    (GLuint program, GLint location, GLsizei count, GLboolean transpose, /*const*/ GLfloat* value);
type proc_glProgramUniformMatrix3fv                                = void    (GLuint program, GLint location, GLsizei count, GLboolean transpose, /*const*/ GLfloat* value);
type proc_glProgramUniformMatrix2fv                                = void    (GLuint program, GLint location, GLsizei count, GLboolean transpose, /*const*/ GLfloat* value);
type proc_glProgramUniform4dv                                      = void    (GLuint program, GLint location, GLsizei count, /*const*/ GLdouble* value);
type proc_glProgramUniform4d                                       = void    (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);
type proc_glProgramUniform4f                                       = void    (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
type proc_glProgramUniform4i                                       = void    (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
type proc_glProgramUniform3dv                                      = void    (GLuint program, GLint location, GLsizei count, /*const*/ GLdouble* value);
type proc_glProgramUniform3d                                       = void    (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);
type proc_glProgramUniformMatrix3x4dv                              = void    (GLuint program, GLint location, GLsizei count, GLboolean transpose, /*const*/ GLdouble* value);
type proc_glProgramUniform3fv                                      = void    (GLuint program, GLint location, GLsizei count, /*const*/ GLfloat* value);
type proc_glProgramUniform3f                                       = void    (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
type proc_glProgramUniform2ui                                      = void    (GLuint program, GLint location, GLuint v0, GLuint v1);
type proc_glProgramUniform2dv                                      = void    (GLuint program, GLint location, GLsizei count, /*const*/ GLdouble* value);
type proc_glMapNamedBufferRange                                    = void*   (GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);
type proc_glProgramUniform2d                                       = void    (GLuint program, GLint location, GLdouble v0, GLdouble v1);
type proc_glProgramUniform2f                                       = void    (GLuint program, GLint location, GLfloat v0, GLfloat v1);
type proc_glVertexArrayVertexBuffer                                = void    (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
type proc_glProgramUniform2i                                       = void    (GLuint program, GLint location, GLint v0, GLint v1);
type proc_glProgramUniform1uiv                                     = void    (GLuint program, GLint location, GLsizei count, /*const*/ GLuint* value);
type proc_glProgramUniform1d                                       = void    (GLuint program, GLint location, GLdouble v0);
type proc_glProgramUniform1fv                                      = void    (GLuint program, GLint location, GLsizei count, /*const*/ GLfloat* value);
type proc_glProgramUniform1f                                       = void    (GLuint program, GLint location, GLfloat v0);
type proc_glProgramUniform1iv                                      = void    (GLuint program, GLint location, GLsizei count, /*const*/ GLint* value);
type proc_glGenProgramPipelines                                    = void    (GLsizei n, GLuint* pipelines);
type proc_glBindVertexBuffers                                      = void    (GLuint first, GLsizei count, /*const*/ GLuint* buffers, /*const*/ GLintptr* offsets, /*const*/ GLsizei* strides);
type proc_glActiveShaderProgram                                    = void    (GLuint pipeline, GLuint program);
type proc_glProgramBinary                                          = void    (GLuint program, GLenum binaryFormat, /*const*/ void* binary, GLsizei length);
type proc_glGetProgramBinary                                       = void    (GLuint program, GLsizei bufSize, GLsizei* length, GLenum* binaryFormat, void* binary);
type proc_glDebugMessageCallback                                   = void    (GLDEBUGPROC callback, /*const*/ void* userParam);
type proc_glClearBufferSubData                                     = void    (GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum _type, /*const*/ void* data);
type proc_glClearDepthf                                            = void    (GLfloat d);
type proc_glDepthRangef                                            = void    (GLfloat n, GLfloat f);
type proc_glShaderBinary                                           = void    (GLsizei count, /*const*/ GLuint* shaders, GLenum binaryformat, /*const*/ void* binary, GLsizei length);
type proc_glGetQueryIndexediv                                      = void    (GLenum target, GLuint index, GLenum pname, GLint* params);
type proc_glEndQueryIndexed                                        = void    (GLenum target, GLuint index);
type proc_glBeginQueryIndexed                                      = void    (GLenum target, GLuint index, GLuint id);
type proc_glDrawTransformFeedbackStream                            = void    (GLenum mode, GLuint id, GLuint stream);
type proc_glBindProgramPipeline                                    = void    (GLuint pipeline);
type proc_glResumeTransformFeedback                                = void    ();
type proc_glGenTransformFeedbacks                                  = void    (GLsizei n, GLuint* ids);
type proc_glBindTransformFeedback                                  = void    (GLenum target, GLuint id);
type proc_glGetNamedBufferPointerv                                 = void    (GLuint buffer, GLenum pname, void** params);
type proc_glGetInternalformati64v                                  = void    (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64* params);
type proc_glPatchParameterfv                                       = void    (GLenum pname, /*const*/ GLfloat* values);
type proc_glScissorIndexed                                         = void    (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
type proc_glPatchParameteri                                        = void    (GLenum pname, GLint value);
type proc_glGetProgramStageiv                                      = void    (GLuint program, GLenum shadertype, GLenum pname, GLint* values);
type proc_glMemoryBarrier                                          = void    (GLbitfield barriers);
type proc_glGetUniformSubroutineuiv                                = void    (GLenum shadertype, GLint location, GLuint* params);
type proc_glProgramUniform4iv                                      = void    (GLuint program, GLint location, GLsizei count, /*const*/ GLint* value);
type proc_glGetActiveSubroutineUniformName                         = void    (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei* length, GLchar* name);
type proc_glGetActiveSubroutineUniformiv                           = void    (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint* values);
type proc_glProgramUniform1ui                                      = void    (GLuint program, GLint location, GLuint v0);
type proc_glGetSubroutineIndex                                     = GLuint   (GLuint program, GLenum shadertype, /*const*/ GLchar* name);
type proc_glGetSubroutineUniformLocation                           = GLint   (GLuint program, GLenum shadertype, /*const*/ GLchar* name);
type proc_glGetUniformdv                                           = void    (GLuint program, GLint location, GLdouble* params);
type proc_glUniformMatrix3x4dv                                     = void    (GLint location, GLsizei count, GLboolean transpose, /*const*/ GLdouble* value);
type proc_glUniformMatrix3x2dv                                     = void    (GLint location, GLsizei count, GLboolean transpose, /*const*/ GLdouble* value);
type proc_glProgramUniformHandleui64vARB                           = void    (GLuint program, GLint location, GLsizei count, /*const*/ GLuint64* values);
type proc_glNamedFramebufferTextureLayer                           = void    (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
type proc_glUniform4dv                                             = void    (GLint location, GLsizei count, /*const*/ GLdouble* value);
type proc_glUniform3dv                                             = void    (GLint location, GLsizei count, /*const*/ GLdouble* value);
type proc_glUniform2dv                                             = void    (GLint location, GLsizei count, /*const*/ GLdouble* value);
type proc_glUniform1dv                                             = void    (GLint location, GLsizei count, /*const*/ GLdouble* value);
type proc_glUniform4d                                              = void    (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
type proc_glUniform3d                                              = void    (GLint location, GLdouble x, GLdouble y, GLdouble z);
type proc_glDrawArraysIndirect                                     = void    (GLenum mode, /*const*/ void* indirect);
type proc_glBlendFuncSeparatei                                     = void    (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
type proc_glBlendFunci                                             = void    (GLuint buf, GLenum src, GLenum dst);
type proc_glBlendEquationSeparatei                                 = void    (GLuint buf, GLenum modeRGB, GLenum modeAlpha);
type proc_glGetObjectLabel                                         = void    (GLenum identifier, GLuint name, GLsizei bufSize, GLsizei* length, GLchar* label);
type proc_glBlendEquationi                                         = void    (GLuint buf, GLenum mode);
type proc_glVertexAttribP4uiv                                      = void    (GLuint index, GLenum _type, GLboolean normalized, /*const*/ GLuint* value);
type proc_glVertexAttribP3uiv                                      = void    (GLuint index, GLenum _type, GLboolean normalized, /*const*/ GLuint* value);
type proc_glVertexAttribP2uiv                                      = void    (GLuint index, GLenum _type, GLboolean normalized, /*const*/ GLuint* value);
type proc_glVertexAttribP2ui                                       = void    (GLuint index, GLenum _type, GLboolean normalized, GLuint value);
type proc_glProgramUniform4uiv                                     = void    (GLuint program, GLint location, GLsizei count, /*const*/ GLuint* value);
type proc_glVertexAttribP1uiv                                      = void    (GLuint index, GLenum _type, GLboolean normalized, /*const*/ GLuint* value);
type proc_glGetQueryObjectui64v                                    = void    (GLuint id, GLenum pname, GLuint64* params);
type proc_glIsTransformFeedback                                    = GLboolean   (GLuint id);
type proc_glGetSamplerParameterfv                                  = void    (GLuint sampler, GLenum pname, GLfloat* params);
type proc_glIsProgramPipeline                                      = GLboolean   (GLuint pipeline);
type proc_glSamplerParameterIuiv                                   = void    (GLuint sampler, GLenum pname, /*const*/ GLuint* param);
type proc_glSamplerParameterfv                                     = void    (GLuint sampler, GLenum pname, /*const*/ GLfloat* param);
type proc_glDebugMessageInsert                                     = void    (GLenum source, GLenum _type, GLuint id, GLenum severity, GLsizei length, /*const*/ GLchar* buf);
type proc_glSamplerParameteriv                                     = void    (GLuint sampler, GLenum pname, /*const*/ GLint* param);
type proc_glSamplerParameteri                                      = void    (GLuint sampler, GLenum pname, GLint param);
type proc_glBindSampler                                            = void    (GLuint unit, GLuint sampler);
type proc_glSamplerParameterf                                      = void    (GLuint sampler, GLenum pname, GLfloat param);
type proc_glIsSampler                                              = GLboolean   (GLuint sampler);
type proc_glGenSamplers                                            = void    (GLsizei count, GLuint* samplers);
type proc_glGetNamedFramebufferParameteriv                         = void    (GLuint framebuffer, GLenum pname, GLint* param);
type proc_glCreateBuffers                                          = void    (GLsizei n, GLuint* buffers);
type proc_glBindFragDataLocationIndexed                            = void    (GLuint program, GLuint colorNumber, GLuint index, /*const*/ GLchar* name);
type proc_glGetMultisamplefv                                       = void    (GLenum pname, GLuint index, GLfloat* val);
type proc_glGetTextureParameterfv                                  = void    (GLuint texture, GLenum pname, GLfloat* params);
type proc_glTexImage3DMultisample                                  = void    (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
type proc_glFramebufferTexture                                     = void    (GLenum target, GLenum attachment, GLuint texture, GLint level);
type proc_glGetBufferParameteri64v                                 = void    (GLenum target, GLenum pname, GLint64* params);
type proc_glCreateVertexArrays                                     = void    (GLsizei n, GLuint* arrays);
type proc_glGetInteger64i_v                                        = void    (GLenum target, GLuint index, GLint64* data);
type proc_glUniformMatrix2dv                                       = void    (GLint location, GLsizei count, GLboolean transpose, /*const*/ GLdouble* value);
type proc_glWaitSync                                               = void    (GLsync sync, GLbitfield flags, GLuint64 timeout);
type proc_glIsSync                                                 = GLboolean   (GLsync sync);
type proc_glFenceSync                                              = GLsync   (GLenum condition, GLbitfield flags);
type proc_glMultiDrawElementsBaseVertex                            = void    (GLenum mode, /*const*/ GLsizei* count, GLenum _type, /*const*/ void*/*const*/* indices, GLsizei drawcount, /*const*/ GLint* basevertex);
type proc_glProgramUniform4ui                                      = void    (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
type proc_glDrawElementsInstancedBaseVertex                        = void    (GLenum mode, GLsizei count, GLenum _type, /*const*/ void* indices, GLsizei instancecount, GLint basevertex);
type proc_glGetActiveUniformBlockName                              = void    (GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei* length, GLchar* uniformBlockName);
type proc_glFlushMappedNamedBufferRange                            = void    (GLuint buffer, GLintptr offset, GLsizeiptr length);
type proc_glGetUniformBlockIndex                                   = GLuint   (GLuint program, /*const*/ GLchar* uniformBlockName);
type proc_glGetActiveUniformName                                   = void    (GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei* length, GLchar* uniformName);
type proc_glGetProgramResourceiv                                   = void    (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, /*const*/ GLenum* props, GLsizei bufSize, GLsizei* length, GLint* params);
type proc_glGetUniformIndices                                      = void    (GLuint program, GLsizei uniformCount, /*const*/ GLchar*/*const*/* uniformNames, GLuint* uniformIndices);
type proc_glTexBuffer                                              = void    (GLenum target, GLenum internalformat, GLuint buffer);
type proc_glUniformMatrix4dv                                       = void    (GLint location, GLsizei count, GLboolean transpose, /*const*/ GLdouble* value);
type proc_glIsVertexArray                                          = GLboolean   (GLuint array);
type proc_glBindVertexArray                                        = void    (GLuint array);
type proc_glFlushMappedBufferRange                                 = void    (GLenum target, GLintptr offset, GLsizeiptr length);
type proc_glProgramUniform2fv                                      = void    (GLuint program, GLint location, GLsizei count, /*const*/ GLfloat* value);
type proc_glMapBufferRange                                         = void*   (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
type proc_glCreateQueries                                          = void    (GLenum target, GLsizei n, GLuint* ids);
type proc_glGetNamedRenderbufferParameteriv                        = void    (GLuint renderbuffer, GLenum pname, GLint* params);
type proc_glGetActiveUniformsiv                                    = void    (GLuint program, GLsizei uniformCount, /*const*/ GLuint* uniformIndices, GLenum pname, GLint* params);
type proc_glFramebufferTextureLayer                                = void    (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
type proc_glGetFramebufferAttachmentParameteriv                    = void    (GLenum target, GLenum attachment, GLenum pname, GLint* params);
type proc_glFramebufferTexture3D                                   = void    (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
type proc_glFramebufferTexture1D                                   = void    (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
type proc_glGetProgramInterfaceiv                                  = void    (GLuint program, GLenum programInterface, GLenum pname, GLint* params);
type proc_glGetProgramPipelineiv                                   = void    (GLuint pipeline, GLenum pname, GLint* params);
type proc_glGenFramebuffers                                        = void    (GLsizei n, GLuint* framebuffers);
type proc_glBindFramebuffer                                        = void    (GLenum target, GLuint framebuffer);
type proc_glProgramUniform3i                                       = void    (GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
type proc_glGetQueryObjecti64v                                     = void    (GLuint id, GLenum pname, GLint64* params);
type proc_glGetInteger64v                                          = void    (GLenum pname, GLint64* data);
type proc_glIsFramebuffer                                          = GLboolean   (GLuint framebuffer);
type proc_glUniformMatrix4x3dv                                     = void    (GLint location, GLsizei count, GLboolean transpose, /*const*/ GLdouble* value);
type proc_glGetRenderbufferParameteriv                             = void    (GLenum target, GLenum pname, GLint* params);
type proc_glUniform1d                                              = void    (GLint location, GLdouble x);
type proc_glBindRenderbuffer                                       = void    (GLenum target, GLuint renderbuffer);
type proc_glMakeTextureHandleResidentARB                           = void    (GLuint64 handle);
type proc_glIsRenderbuffer                                         = GLboolean   (GLuint renderbuffer);
type proc_glGetStringi                                             = /*const*/ GLubyte*   (GLenum name, GLuint index);
type proc_glClearBufferfi                                          = void    (GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
type proc_glClearBufferfv                                          = void    (GLenum buffer, GLint drawbuffer, /*const*/ GLfloat* value);
type proc_glCreateShaderProgramv                                   = GLuint   (GLenum _type, GLsizei count, /*const*/ GLchar*/*const*/* strings);
type proc_glGetTexParameterIiv                                     = void    (GLenum target, GLenum pname, GLint* params);
type proc_glGetSamplerParameterIuiv                                = void    (GLuint sampler, GLenum pname, GLuint* params);
type proc_glTexParameterIiv                                        = void    (GLenum target, GLenum pname, /*const*/ GLint* params);
type proc_glUniform4uiv                                            = void    (GLint location, GLsizei count, /*const*/ GLuint* value);
type proc_glVertexAttribL3d                                        = void    (GLuint index, GLdouble x, GLdouble y, GLdouble z);
type proc_glUniform3ui                                             = void    (GLint location, GLuint v0, GLuint v1, GLuint v2);
type proc_glBindBuffersBase                                        = void    (GLenum target, GLuint first, GLsizei count, /*const*/ GLuint* buffers);
type proc_glDrawTransformFeedback                                  = void    (GLenum mode, GLuint id);
type proc_glUniform1ui                                             = void    (GLint location, GLuint v0);
type proc_glGetFragDataLocation                                    = GLint   (GLuint program, /*const*/ GLchar* name);
type proc_glBindFragDataLocation                                   = void    (GLuint program, GLuint color, /*const*/ GLchar* name);
type proc_glClearNamedFramebufferiv                                = void    (GLuint framebuffer, GLenum buffer, GLint drawbuffer, /*const*/ GLint* value);
type proc_glVertexAttribI4iv                                       = void    (GLuint index, /*const*/ GLint* v);
type proc_glVertexAttribI2iv                                       = void    (GLuint index, /*const*/ GLint* v);
type proc_glNamedFramebufferDrawBuffers                            = void    (GLuint framebuffer, GLsizei n, /*const*/ GLenum* bufs);
type proc_glGetShaderPrecisionFormat                               = void    (GLenum shadertype, GLenum precisiontype, GLint* range, GLint* precision);
type proc_glVertexAttribI1iv                                       = void    (GLuint index, /*const*/ GLint* v);
type proc_glVertexAttribI4ui                                       = void    (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
type proc_glVertexArrayVertexBuffers                               = void    (GLuint vaobj, GLuint first, GLsizei count, /*const*/ GLuint* buffers, /*const*/ GLintptr* offsets, /*const*/ GLsizei* strides);
type proc_glVertexAttribI2ui                                       = void    (GLuint index, GLuint x, GLuint y);
type proc_glVertexAttribI1ui                                       = void    (GLuint index, GLuint x);
type proc_glUnmapNamedBuffer                                       = GLboolean   (GLuint buffer);
type proc_glProgramUniform3iv                                      = void    (GLuint program, GLint location, GLsizei count, /*const*/ GLint* value);
type proc_glVertexAttribI4i                                        = void    (GLuint index, GLint x, GLint y, GLint z, GLint w);
type proc_glVertexAttribI4bv                                       = void    (GLuint index, /*const*/ GLbyte* v);
type proc_glVertexAttribI2i                                        = void    (GLuint index, GLint x, GLint y);
type proc_glVertexAttribI1i                                        = void    (GLuint index, GLint x);
type proc_glGetVertexAttribIiv                                     = void    (GLuint index, GLenum pname, GLint* params);
type proc_glProgramUniform2uiv                                     = void    (GLuint program, GLint location, GLsizei count, /*const*/ GLuint* value);
type proc_glVertexAttribIPointer                                   = void    (GLuint index, GLint size, GLenum _type, GLsizei stride, /*const*/ void* pointer);
type proc_glBeginConditionalRender                                 = void    (GLuint id, GLenum mode);
type proc_glClampColor                                             = void    (GLenum target, GLenum clamp);
type proc_glGetNamedBufferSubData                                  = void    (GLuint buffer, GLintptr offset, GLsizeiptr size, void* data);
type proc_glBindBufferBase                                         = void    (GLenum target, GLuint index, GLuint buffer);
type proc_glBindBufferRange                                        = void    (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
type proc_glGetVertexAttribLui64vARB                               = void    (GLuint index, GLenum pname, GLuint64EXT* params);
type proc_glCompressedTextureSubImage1D                            = void    (GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, /*const*/ void* data);
type proc_glBeginTransformFeedback                                 = void    (GLenum primitiveMode);
type proc_glTextureBufferRange                                     = void    (GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
type proc_glIsEnabledi                                             = GLboolean   (GLenum target, GLuint index);
type proc_glGetIntegeri_v                                          = void    (GLenum target, GLuint index, GLint* data);
type proc_glNamedRenderbufferStorageMultisample                    = void    (GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
type proc_glProgramUniform4fv                                      = void    (GLuint program, GLint location, GLsizei count, /*const*/ GLfloat* value);
type proc_glColorMaski                                             = void    (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
type proc_glUniformMatrix4x3fv                                     = void    (GLint location, GLsizei count, GLboolean transpose, /*const*/ GLfloat* value);
type proc_glUniformMatrix3x4fv                                     = void    (GLint location, GLsizei count, GLboolean transpose, /*const*/ GLfloat* value);
type proc_glGetGraphicsResetStatus                                 = GLenum   ();
type proc_glUniformMatrix2x4fv                                     = void    (GLint location, GLsizei count, GLboolean transpose, /*const*/ GLfloat* value);
type proc_glUniformMatrix3x2fv                                     = void    (GLint location, GLsizei count, GLboolean transpose, /*const*/ GLfloat* value);
type proc_glUniformMatrix2x3fv                                     = void    (GLint location, GLsizei count, GLboolean transpose, /*const*/ GLfloat* value);
type proc_glVertexAttribP4ui                                       = void    (GLuint index, GLenum _type, GLboolean normalized, GLuint value);
type proc_glVertexAttrib4ubv                                       = void    (GLuint index, /*const*/ GLubyte* v);
type proc_glProgramUniform1dv                                      = void    (GLuint program, GLint location, GLsizei count, /*const*/ GLdouble* value);
type proc_glVertexAttrib4sv                                        = void    (GLuint index, /*const*/ GLshort* v);
type proc_glGetTransformFeedbackiv                                 = void    (GLuint xfb, GLenum pname, GLint* param);
type proc_glVertexAttrib4fv                                        = void    (GLuint index, /*const*/ GLfloat* v);
type proc_glVertexAttrib4Nusv                                      = void    (GLuint index, /*const*/ GLushort* v);
type proc_glBindVertexBuffer                                       = void    (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
type proc_glVertexAttrib4Nuiv                                      = void    (GLuint index, /*const*/ GLuint* v);
type proc_glVertexAttrib4Nubv                                      = void    (GLuint index, /*const*/ GLubyte* v);
type proc_glProvokingVertex                                        = void    (GLenum mode);
type proc_glVertexAttrib4Nsv                                       = void    (GLuint index, /*const*/ GLshort* v);
type proc_glGetTextureParameterIiv                                 = void    (GLuint texture, GLenum pname, GLint* params);
type proc_glVertexAttrib3f                                         = void    (GLuint index, GLfloat x, GLfloat y, GLfloat z);
type proc_glClearNamedFramebufferfv                                = void    (GLuint framebuffer, GLenum buffer, GLint drawbuffer, /*const*/ GLfloat* value);
type proc_glVertexAttribI1uiv                                      = void    (GLuint index, /*const*/ GLuint* v);
type proc_glVertexAttrib3dv                                        = void    (GLuint index, /*const*/ GLdouble* v);
type proc_glMakeImageHandleResidentARB                             = void    (GLuint64 handle, GLenum access);
type proc_glVertexAttrib3d                                         = void    (GLuint index, GLdouble x, GLdouble y, GLdouble z);
type proc_glVertexAttrib2sv                                        = void    (GLuint index, /*const*/ GLshort* v);
type proc_glTextureParameteriv                                     = void    (GLuint texture, GLenum pname, /*const*/ GLint* param);
type proc_glClearTexSubImage                                       = void    (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum _type, /*const*/ void* data);
type proc_glUseProgramStages                                       = void    (GLuint pipeline, GLbitfield stages, GLuint program);
type proc_glVertexAttrib2fv                                        = void    (GLuint index, /*const*/ GLfloat* v);
type proc_glVertexAttrib2dv                                        = void    (GLuint index, /*const*/ GLdouble* v);
type proc_glVertexAttrib2d                                         = void    (GLuint index, GLdouble x, GLdouble y);
type proc_glVertexAttrib2f                                         = void    (GLuint index, GLfloat x, GLfloat y);
type proc_glVertexAttrib1s                                         = void    (GLuint index, GLshort x);
type proc_glVertexAttrib1fv                                        = void    (GLuint index, /*const*/ GLfloat* v);
type proc_glVertexAttrib1f                                         = void    (GLuint index, GLfloat x);
type proc_glVertexAttrib1dv                                        = void    (GLuint index, /*const*/ GLdouble* v);
type proc_glClearBufferuiv                                         = void    (GLenum buffer, GLint drawbuffer, /*const*/ GLuint* value);
type proc_glUniformMatrix3fv                                       = void    (GLint location, GLsizei count, GLboolean transpose, /*const*/ GLfloat* value);
type proc_glDeleteRenderbuffers                                    = void    (GLsizei n, /*const*/ GLuint* renderbuffers);
type proc_glUniformMatrix2fv                                       = void    (GLint location, GLsizei count, GLboolean transpose, /*const*/ GLfloat* value);
type proc_glNamedFramebufferDrawBuffer                             = void    (GLuint framebuffer, GLenum buf);
type proc_glUniform2d                                              = void    (GLint location, GLdouble x, GLdouble y);
type proc_glUniform4iv                                             = void    (GLint location, GLsizei count, /*const*/ GLint* value);
type proc_glUniform1iv                                             = void    (GLint location, GLsizei count, /*const*/ GLint* value);
type proc_glGetImageHandleARB                                      = GLuint64   (GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);
type proc_glUniform4fv                                             = void    (GLint location, GLsizei count, /*const*/ GLfloat* value);
type proc_glUniform2fv                                             = void    (GLint location, GLsizei count, /*const*/ GLfloat* value);
type proc_glProgramUniform3ui                                      = void    (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
type proc_glUniform3i                                              = void    (GLint location, GLint v0, GLint v1, GLint v2);
type proc_glUniform2i                                              = void    (GLint location, GLint v0, GLint v1);
type proc_glUniform4f                                              = void    (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
type proc_glUniform3f                                              = void    (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
type proc_glUniform1f                                              = void    (GLint location, GLfloat v0);
type proc_glUniformMatrix2x3dv                                     = void    (GLint location, GLsizei count, GLboolean transpose, /*const*/ GLdouble* value);
type proc_glUseProgram                                             = void    (GLuint program);
type proc_glShaderSource                                           = void    (GLuint shader, GLsizei count, /*const*/ GLchar*/*const*/* string, /*const*/ GLint* length);
type proc_glCopyImageSubData                                       = void    (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
type proc_glLinkProgram                                            = void    (GLuint program);
type proc_glIsShader                                               = GLboolean   (GLuint shader);
type proc_glUniformMatrix3dv                                       = void    (GLint location, GLsizei count, GLboolean transpose, /*const*/ GLdouble* value);
type proc_glGetVertexAttribPointerv                                = void    (GLuint index, GLenum pname, void** pointer);
type proc_glGetVertexAttribiv                                      = void    (GLuint index, GLenum pname, GLint* params);
type proc_glGetVertexAttribfv                                      = void    (GLuint index, GLenum pname, GLfloat* params);
type proc_glUniformBlockBinding                                    = void    (GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
type proc_glGetUniformLocation                                     = GLint   (GLuint program, /*const*/ GLchar* name);
type proc_glGetShaderiv                                            = void    (GLuint shader, GLenum pname, GLint* params);
type proc_glGetProgramInfoLog                                      = void    (GLuint program, GLsizei bufSize, GLsizei* length, GLchar* infoLog);
type proc_glProgramUniformMatrix2x3fv                              = void    (GLuint program, GLint location, GLsizei count, GLboolean transpose, /*const*/ GLfloat* value);
type proc_glGetAttribLocation                                      = GLint   (GLuint program, /*const*/ GLchar* name);
type proc_glBlitNamedFramebuffer                                   = void    (GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
type proc_glGetAttachedShaders                                     = void    (GLuint program, GLsizei maxCount, GLsizei* count, GLuint* shaders);
type proc_glGetActiveUniform                                       = void    (GLuint program, GLuint index, GLsizei bufSize, GLsizei* length, GLint* size, GLenum* _type, GLchar* name);
type proc_glGetActiveAttrib                                        = void    (GLuint program, GLuint index, GLsizei bufSize, GLsizei* length, GLint* size, GLenum* _type, GLchar* name);
type proc_glVertexAttrib4iv                                        = void    (GLuint index, /*const*/ GLint* v);
type proc_glDisableVertexAttribArray                               = void    (GLuint index);
type proc_glDeleteShader                                           = void    (GLuint shader);
type proc_glProgramUniform3uiv                                     = void    (GLuint program, GLint location, GLsizei count, /*const*/ GLuint* value);
type proc_glDeleteProgram                                          = void    (GLuint program);
type proc_glGetBooleani_v                                          = void    (GLenum target, GLuint index, GLboolean* data);
type proc_glCompileShader                                          = void    (GLuint shader);
type proc_glStencilFuncSeparate                                    = void    (GLenum face, GLenum func, GLint ref, GLuint mask);
type proc_glStencilOpSeparate                                      = void    (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
type proc_glRenderbufferStorageMultisample                         = void    (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
type proc_glDrawBuffers                                            = void    (GLsizei n, /*const*/ GLenum* bufs);
type proc_glGetBufferParameteriv                                   = void    (GLenum target, GLenum pname, GLint* params);
type proc_glVertexAttribDivisor                                    = void    (GLuint index, GLuint divisor);
type proc_glUnmapBuffer                                            = GLboolean   (GLenum target);
type proc_glGetCompressedTextureImage                              = void    (GLuint texture, GLint level, GLsizei bufSize, void* pixels);
type proc_glDepthRangeIndexed                                      = void    (GLuint index, GLdouble n, GLdouble f);
type proc_glVertexAttrib4dv                                        = void    (GLuint index, /*const*/ GLdouble* v);
type proc_glMapBuffer                                              = void*   (GLenum target, GLenum access);
type proc_glUniformMatrix2x4dv                                     = void    (GLint location, GLsizei count, GLboolean transpose, /*const*/ GLdouble* value);
type proc_glBufferSubData                                          = void    (GLenum target, GLintptr offset, GLsizeiptr size, /*const*/ void* data);
type proc_glGetQueryObjectuiv                                      = void    (GLuint id, GLenum pname, GLuint* params);
type proc_glGetQueryObjectiv                                       = void    (GLuint id, GLenum pname, GLint* params);
type proc_glTextureView                                            = void    (GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
type proc_glIsQuery                                                = GLboolean   (GLuint id);
type proc_glDeleteQueries                                          = void    (GLsizei n, /*const*/ GLuint* ids);
type proc_glGenQueries                                             = void    (GLsizei n, GLuint* ids);
type proc_glBlendEquation                                          = void    (GLenum mode);
type proc_glVertexAttrib3sv                                        = void    (GLuint index, /*const*/ GLshort* v);
type proc_glVertexAttribI3ui                                       = void    (GLuint index, GLuint x, GLuint y, GLuint z);
type proc_glGetNamedBufferParameteriv                              = void    (GLuint buffer, GLenum pname, GLint* params);
type proc_glGenBuffers                                             = void    (GLsizei n, GLuint* buffers);
type proc_glCheckNamedFramebufferStatus                            = GLenum   (GLuint framebuffer, GLenum target);
type proc_glGetDebugMessageLog                                     = GLuint   (GLuint count, GLsizei bufSize, GLenum* sources, GLenum* types, GLuint* ids, GLenum* severities, GLsizei* lengths, GLchar* messageLog);
type proc_glCheckFramebufferStatus                                 = GLenum   (GLenum target);
type proc_glUniform4i                                              = void    (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
type proc_glPointParameteriv                                       = void    (GLenum pname, /*const*/ GLint* params);
type proc_glVertexAttrib2s                                         = void    (GLuint index, GLshort x, GLshort y);
type proc_glFinish                                                 = void    ();
type proc_glPointParameteri                                        = void    (GLenum pname, GLint param);
type proc_glMultiDrawArrays                                        = void    (GLenum mode, /*const*/ GLint* first, /*const*/ GLsizei* count, GLsizei drawcount);
type proc_glFramebufferRenderbuffer                                = void    (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
type proc_glGetTextureSubImage                                     = void    (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum _type, GLsizei bufSize, void* pixels);
type proc_glGetVertexAttribLdv                                     = void    (GLuint index, GLenum pname, GLdouble* params);
type proc_glGetFragDataIndex                                       = GLint   (GLuint program, /*const*/ GLchar* name);
type proc_glGetQueryiv                                             = void    (GLenum target, GLenum pname, GLint* params);
type proc_glGetUniformfv                                           = void    (GLuint program, GLint location, GLfloat* params);
type proc_glVertexAttrib4usv                                       = void    (GLuint index, /*const*/ GLushort* v);
type proc_glDeleteSync                                             = void    (GLsync sync);
type proc_glVertexAttribL1d                                        = void    (GLuint index, GLdouble x);
type proc_glProgramUniformMatrix2x3dv                              = void    (GLuint program, GLint location, GLsizei count, GLboolean transpose, /*const*/ GLdouble* value);
type proc_glGetCompressedTexImage                                  = void    (GLenum target, GLint level, void* img);
type proc_glCompressedTexSubImage2D                                = void    (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, /*const*/ void* data);
type proc_glGetTextureLevelParameteriv                             = void    (GLuint texture, GLint level, GLenum pname, GLint* params);
type proc_glUniform4ui                                             = void    (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
type proc_glVertexAttribI4usv                                      = void    (GLuint index, /*const*/ GLushort* v);
type proc_glCompressedTexImage2D                                   = void    (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, /*const*/ void* data);
type proc_glCompressedTexImage3D                                   = void    (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, /*const*/ void* data);
type proc_glSampleCoverage                                         = void    (GLfloat value, GLboolean invert);
type proc_glGetProgramResourceLocation                             = GLint   (GLuint program, GLenum programInterface, /*const*/ GLchar* name);
type proc_glActiveTexture                                          = void    (GLenum texture);
type proc_glProgramUniformMatrix4x2dv                              = void    (GLuint program, GLint location, GLsizei count, GLboolean transpose, /*const*/ GLdouble* value);
type proc_glCopyTexSubImage3D                                      = void    (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
type proc_glCompressedTexImage1D                                   = void    (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, /*const*/ void* data);
type proc_glTexSubImage3D                                          = void    (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum _type, /*const*/ void* pixels);
type proc_glUniformMatrix4fv                                       = void    (GLint location, GLsizei count, GLboolean transpose, /*const*/ GLfloat* value);
type proc_glObjectLabel                                            = void    (GLenum identifier, GLuint name, GLsizei length, /*const*/ GLchar* label);
type proc_glGetString                                              = /*const*/ GLubyte*   (GLenum name);
type proc_glUniformMatrix4x2dv                                     = void    (GLint location, GLsizei count, GLboolean transpose, /*const*/ GLdouble* value);
type proc_glRenderbufferStorage                                    = void    (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
type proc_glIsTexture                                              = GLboolean   (GLuint texture);
type proc_glGetNamedFramebufferAttachmentParameteriv               = void    (GLuint framebuffer, GLenum attachment, GLenum pname, GLint* params);
type proc_glGetActiveAtomicCounterBufferiv                         = void    (GLuint program, GLuint bufferIndex, GLenum pname, GLint* params);
type proc_glGenTextures                                            = void    (GLsizei n, GLuint* textures);
type proc_glVertexAttribP3ui                                       = void    (GLuint index, GLenum _type, GLboolean normalized, GLuint value);
type proc_glTexSubImage1D                                          = void    (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum _type, /*const*/ void* pixels);
type proc_glTexStorage3D                                           = void    (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
type proc_glClientWaitSync                                         = GLenum   (GLsync sync, GLbitfield flags, GLuint64 timeout);
type proc_glCopyTexSubImage2D                                      = void    (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
type proc_glCopyTexSubImage1D                                      = void    (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
type proc_glMultiDrawElementsIndirectCount                         = void    (GLenum mode, GLenum _type, /*const*/ void* indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
type proc_glCopyTexImage1D                                         = void    (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
type proc_glPolygonOffset                                          = void    (GLfloat factor, GLfloat units);
type proc_glTexImage2DMultisample                                  = void    (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
type proc_glDrawElements                                           = void    (GLenum mode, GLsizei count, GLenum _type, /*const*/ void* indices);
type proc_glEndConditionalRender                                   = void    ();
type proc_glGetTransformFeedbackVarying                            = void    (GLuint program, GLuint index, GLsizei bufSize, GLsizei* length, GLsizei* size, GLenum* _type, GLchar* name);
type proc_glTexParameteriv                                         = void    (GLenum target, GLenum pname, /*const*/ GLint* params);
type proc_glDeleteFramebuffers                                     = void    (GLsizei n, /*const*/ GLuint* framebuffers);
type proc_glBlendEquationSeparate                                  = void    (GLenum modeRGB, GLenum modeAlpha);
type proc_glDeleteTextures                                         = void    (GLsizei n, /*const*/ GLuint* textures);
type proc_glGetProgramiv                                           = void    (GLuint program, GLenum pname, GLint* params);
type proc_glUniform1uiv                                            = void    (GLint location, GLsizei count, /*const*/ GLuint* value);
type proc_glCopyTexImage2D                                         = void    (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
type proc_glGetTexLevelParameterfv                                 = void    (GLenum target, GLint level, GLenum pname, GLfloat* params);
type proc_glSampleMaski                                            = void    (GLuint maskNumber, GLbitfield mask);
type proc_glBindTexture                                            = void    (GLenum target, GLuint texture);
type proc_glGetActiveUniformBlockiv                                = void    (GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint* params);
type proc_glMinSampleShading                                       = void    (GLfloat value);
type proc_glGetUniformuiv                                          = void    (GLuint program, GLint location, GLuint* params);
type proc_glVertexAttrib4Nbv                                       = void    (GLuint index, /*const*/ GLbyte* v);
type proc_glCopyTextureSubImage2D                                  = void    (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
type proc_glProgramUniformMatrix2x4dv                              = void    (GLuint program, GLint location, GLsizei count, GLboolean transpose, /*const*/ GLdouble* value);
type proc_glTexImage3D                                             = void    (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum _type, /*const*/ void* pixels);
type proc_glQueryCounter                                           = void    (GLuint id, GLenum target);
type proc_glVertexAttrib4f                                         = void    (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
type proc_glUniform2ui                                             = void    (GLint location, GLuint v0, GLuint v1);
type proc_glGetTexImage                                            = void    (GLenum target, GLint level, GLenum format, GLenum _type, void* pixels);
type proc_glGetTexParameterIuiv                                    = void    (GLenum target, GLenum pname, GLuint* params);
type proc_glInvalidateBufferData                                   = void    (GLuint buffer);
type proc_glVertexAttrib4bv                                        = void    (GLuint index, /*const*/ GLbyte* v);
type proc_glUniform2uiv                                            = void    (GLint location, GLsizei count, /*const*/ GLuint* value);
type proc_glGetShaderSource                                        = void    (GLuint shader, GLsizei bufSize, GLsizei* length, GLchar* source);
type proc_glIsBuffer                                               = GLboolean   (GLuint buffer);
type proc_glPauseTransformFeedback                                 = void    ();
type proc_glGetBufferPointerv                                      = void    (GLenum target, GLenum pname, void** params);
type proc_glPolygonMode                                            = void    (GLenum face, GLenum mode);
type proc_glGetnTexImage                                           = void    (GLenum target, GLint level, GLenum format, GLenum _type, GLsizei bufSize, void* pixels);
type proc_glBindAttribLocation                                     = void    (GLuint program, GLuint index, /*const*/ GLchar* name);
type proc_glGetQueryBufferObjectiv                                 = void    (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
type proc_glDeleteSamplers                                         = void    (GLsizei count, /*const*/ GLuint* samplers);
type proc_glUniform2f                                              = void    (GLint location, GLfloat v0, GLfloat v1);
type proc_glPixelStoref                                            = void    (GLenum pname, GLfloat param);
type proc_glLogicOp                                                = void    (GLenum opcode);
type proc_glCreateShader                                           = GLuint   (GLenum _type);
type proc_glMakeTextureHandleNonResidentARB                        = void    (GLuint64 handle);
type proc_glDrawTransformFeedbackInstanced                         = void    (GLenum mode, GLuint id, GLsizei instancecount);
type proc_glTexSubImage2D                                          = void    (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum _type, /*const*/ void* pixels);
type proc_glGetFloati_v                                            = void    (GLenum target, GLuint index, GLfloat* data);
type proc_glClearDepth                                             = void    (GLdouble depth);
type proc_glGetBufferSubData                                       = void    (GLenum target, GLintptr offset, GLsizeiptr size, void* data);
type proc_glReleaseShaderCompiler                                  = void    ();
type proc_glVertexAttrib4uiv                                       = void    (GLuint index, /*const*/ GLuint* v);
type proc_glTransformFeedbackBufferBase                            = void    (GLuint xfb, GLuint index, GLuint buffer);
type proc_glCopyBufferSubData                                      = void    (GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
type proc_glFramebufferTexture2D                                   = void    (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
type proc_glScissorArrayv                                          = void    (GLuint first, GLsizei count, /*const*/ GLint* v);
type proc_glPointParameterf                                        = void    (GLenum pname, GLfloat param);
type proc_glDisablei                                               = void    (GLenum target, GLuint index);
type proc_glUniformMatrix4x2fv                                     = void    (GLint location, GLsizei count, GLboolean transpose, /*const*/ GLfloat* value);
type proc_glVertexAttrib4d                                         = void    (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
type proc_glTexParameterIuiv                                       = void    (GLenum target, GLenum pname, /*const*/ GLuint* params);
type proc_glGetFloatv                                              = void    (GLenum pname, GLfloat* data);
type proc_glCreateProgram                                          = GLuint   ();
type proc_glTransformFeedbackVaryings                              = void    (GLuint program, GLsizei count, /*const*/ GLchar*/*const*/* varyings, GLenum bufferMode);
type proc_glProgramUniform1i                                       = void    (GLuint program, GLint location, GLint v0);
type proc_glVertexAttrib1d                                         = void    (GLuint index, GLdouble x);
type proc_glMakeImageHandleNonResidentARB                          = void    (GLuint64 handle);
type proc_glViewport                                               = void    (GLint x, GLint y, GLsizei width, GLsizei height);
type proc_glDeleteBuffers                                          = void    (GLsizei n, /*const*/ GLuint* buffers);
type proc_glTextureStorage3DMultisample                            = void    (GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
type proc_glFlush                                                  = void    ();
type proc_glVertexAttribI4sv                                       = void    (GLuint index, /*const*/ GLshort* v);
type proc_glDrawArrays                                             = void    (GLenum mode, GLint first, GLsizei count);
type proc_glVertexArrayAttribFormat                                = void    (GLuint vaobj, GLuint attribindex, GLint size, GLenum _type, GLboolean normalized, GLuint relativeoffset);
type proc_glDrawElementsInstanced                                  = void    (GLenum mode, GLsizei count, GLenum _type, /*const*/ void* indices, GLsizei instancecount);
type proc_glTextureParameteri                                      = void    (GLuint texture, GLenum pname, GLint param);
type proc_glDeleteTransformFeedbacks                               = void    (GLsizei n, /*const*/ GLuint* ids);
type proc_glUniform3iv                                             = void    (GLint location, GLsizei count, /*const*/ GLint* value);
type proc_glVertexAttribPointer                                    = void    (GLuint index, GLint size, GLenum _type, GLboolean normalized, GLsizei stride, /*const*/ void* pointer);
type proc_glGetSynciv                                              = void    (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei* length, GLint* values);
type proc_glPrimitiveRestartIndex                                  = void    (GLuint index);
type proc_glUniform1i                                              = void    (GLint location, GLint v0);
type proc_glVertexAttrib1sv                                        = void    (GLuint index, /*const*/ GLshort* v);
type proc_glDisable                                                = void    (GLenum cap);
type proc_glUniformSubroutinesuiv                                  = void    (GLenum shadertype, GLsizei count, /*const*/ GLuint* indices);
type proc_glVertexAttribI4uiv                                      = void    (GLuint index, /*const*/ GLuint* v);
type proc_glEndQuery                                               = void    (GLenum target);
type proc_glColorMask                                              = void    (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
type proc_glEnablei                                                = void    (GLenum target, GLuint index);
type proc_glBindBuffer                                             = void    (GLenum target, GLuint buffer);
type proc_glGetDoublev                                             = void    (GLenum pname, GLdouble* data);
type proc_glGetTexParameteriv                                      = void    (GLenum target, GLenum pname, GLint* params);
type proc_glDeleteVertexArrays                                     = void    (GLsizei n, /*const*/ GLuint* arrays);
type proc_glVertexAttribI2uiv                                      = void    (GLuint index, /*const*/ GLuint* v);
type proc_glDepthMask                                              = void    (GLboolean flag);
type proc_glGetVertexAttribdv                                      = void    (GLuint index, GLenum pname, GLdouble* params);
type proc_glDrawRangeElements                                      = void    (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum _type, /*const*/ void* indices);
type proc_glTexStorage3DMultisample                                = void    (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
type proc_glDrawElementsIndirect                                   = void    (GLenum mode, GLenum _type, /*const*/ void* indirect);
type proc_glDrawArraysInstanced                                    = void    (GLenum mode, GLint first, GLsizei count, GLsizei instancecount);
type proc_glGetSamplerParameterIiv                                 = void    (GLuint sampler, GLenum pname, GLint* params);
type proc_glClearStencil                                           = void    (GLint s);
type proc_glVertexAttribI3iv                                       = void    (GLuint index, /*const*/ GLint* v);
type proc_glViewportArrayv                                         = void    (GLuint first, GLsizei count, /*const*/ GLfloat* v);
type proc_glDrawRangeElementsBaseVertex                            = void    (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum _type, /*const*/ void* indices, GLint basevertex);
type proc_glDrawElementsInstancedBaseVertexBaseInstance            = void    (GLenum mode, GLsizei count, GLenum _type, /*const*/ void* indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);
type proc_glScissor                                                = void    (GLint x, GLint y, GLsizei width, GLsizei height);
type proc_glGenerateMipmap                                         = void    (GLenum target);
type proc_glUniform3fv                                             = void    (GLint location, GLsizei count, /*const*/ GLfloat* value);
type proc_glProgramUniform2iv                                      = void    (GLuint program, GLint location, GLsizei count, /*const*/ GLint* value);
type proc_glUniform3uiv                                            = void    (GLint location, GLsizei count, /*const*/ GLuint* value);
type proc_glClearBufferiv                                          = void    (GLenum buffer, GLint drawbuffer, /*const*/ GLint* value);
type proc_glVertexAttribI4ubv                                      = void    (GLuint index, /*const*/ GLubyte* v);
type proc_glVertexAttribL1dv                                       = void    (GLuint index, /*const*/ GLdouble* v);
type proc_glGetBooleanv                                            = void    (GLenum pname, GLboolean* data);
type proc_glBindBuffersRange                                       = void    (GLenum target, GLuint first, GLsizei count, /*const*/ GLuint* buffers, /*const*/ GLintptr* offsets, /*const*/ GLsizeiptr* sizes);
type proc_glValidateProgram                                        = void    (GLuint program);
type proc_glGenRenderbuffers                                       = void    (GLsizei n, GLuint* renderbuffers);
type proc_glUniform2iv                                             = void    (GLint location, GLsizei count, /*const*/ GLint* value);
type proc_glBufferData                                             = void    (GLenum target, GLsizeiptr size, /*const*/ void* data, GLenum usage);
type proc_glBlendFuncSeparate                                      = void    (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
type proc_glTexParameteri                                          = void    (GLenum target, GLenum pname, GLint param);
type proc_glHint                                                   = void    (GLenum target, GLenum mode);
type proc_glVertexAttrib3fv                                        = void    (GLuint index, /*const*/ GLfloat* v);
type proc_glProgramUniformMatrix2dv                                = void    (GLuint program, GLint location, GLsizei count, GLboolean transpose, /*const*/ GLdouble* value);
type proc_glGetSamplerParameteriv                                  = void    (GLuint sampler, GLenum pname, GLint* params);
type proc_glDrawBuffer                                             = void    (GLenum buf);
type proc_glIsProgram                                              = GLboolean   (GLuint program);
type proc_glClearBufferData                                        = void    (GLenum target, GLenum internalformat, GLenum format, GLenum _type, /*const*/ void* data);
type proc_glGetIntegerv                                            = void    (GLenum pname, GLint* data);
type proc_glDrawElementsBaseVertex                                 = void    (GLenum mode, GLsizei count, GLenum _type, /*const*/ void* indices, GLint basevertex);
type proc_glEnable                                                 = void    (GLenum cap);
type proc_glCreateProgramPipelines                                 = void    (GLsizei n, GLuint* pipelines);
type proc_glBlitFramebuffer                                        = void    (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
type proc_glBeginQuery                                             = void    (GLenum target, GLuint id);
type proc_glStencilMask                                            = void    (GLuint mask);
type proc_glAttachShader                                           = void    (GLuint program, GLuint shader);
type proc_glPointSize                                              = void    (GLfloat size);
type proc_glMultiDrawArraysIndirect                                = void    (GLenum mode, /*const*/ void* indirect, GLsizei drawcount, GLsizei stride);
type proc_glMultiDrawElements                                      = void    (GLenum mode, /*const*/ GLsizei* count, GLenum _type, /*const*/ void*/*const*/* indices, GLsizei drawcount);
type proc_glGetTexParameterfv                                      = void    (GLenum target, GLenum pname, GLfloat* params);
type proc_glIsEnabled                                              = GLboolean   (GLenum cap);
type proc_glGetTexLevelParameteriv                                 = void    (GLenum target, GLint level, GLenum pname, GLint* params);
type proc_glGetError                                               = GLenum   ();
type proc_glEndTransformFeedback                                   = void    ();
type proc_glClearColor                                             = void    (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
type proc_glBlendColor                                             = void    (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
type proc_glProgramParameteri                                      = void    (GLuint program, GLenum pname, GLint value);
type proc_glVertexAttribI3i                                        = void    (GLuint index, GLint x, GLint y, GLint z);
type proc_glGetActiveSubroutineName                                = void    (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei* length, GLchar* name);
type proc_glCompressedTexSubImage3D                                = void    (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, /*const*/ void* data);
type proc_glGetDoublei_v                                           = void    (GLenum target, GLuint index, GLdouble* data);
type proc_glReadPixels                                             = void    (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum _type, void* pixels);
type proc_glTexParameterf                                          = void    (GLenum target, GLenum pname, GLfloat param);
type proc_glViewportIndexedfv                                      = void    (GLuint index, /*const*/ GLfloat* v);
type proc_glSamplerParameterIiv                                    = void    (GLuint sampler, GLenum pname, /*const*/ GLint* param);
type proc_glPointParameterfv                                       = void    (GLenum pname, /*const*/ GLfloat* params);
type proc_glGetShaderInfoLog                                       = void    (GLuint shader, GLsizei bufSize, GLsizei* length, GLchar* infoLog);
type proc_glProgramUniformMatrix4x3fv                              = void    (GLuint program, GLint location, GLsizei count, GLboolean transpose, /*const*/ GLfloat* value);
type proc_glDepthFunc                                              = void    (GLenum func);
type proc_glVertexAttribI3uiv                                      = void    (GLuint index, /*const*/ GLuint* v);
type proc_glStencilOp                                              = void    (GLenum fail, GLenum zfail, GLenum zpass);
type proc_glStencilFunc                                            = void    (GLenum func, GLint ref, GLuint mask);
type proc_glEnableVertexAttribArray                                = void    (GLuint index);
type proc_glBlendFunc                                              = void    (GLenum sfactor, GLenum dfactor);
type proc_glVertexAttrib4Nub                                       = void    (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
type proc_glUniform1fv                                             = void    (GLint location, GLsizei count, /*const*/ GLfloat* value);
type proc_glPixelStorei                                            = void    (GLenum pname, GLint param);
type proc_glLineWidth                                              = void    (GLfloat width);
type proc_glVertexAttribP1ui                                       = void    (GLuint index, GLenum _type, GLboolean normalized, GLuint value);
type proc_glGetUniformiv                                           = void    (GLuint program, GLint location, GLint* params);
type proc_glReadBuffer                                             = void    (GLenum src);
type proc_glTexImage1D                                             = void    (GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum _type, /*const*/ void* pixels);
type proc_glClipControl                                            = void    (GLenum origin, GLenum depth);
type proc_glInvalidateFramebuffer                                  = void    (GLenum target, GLsizei numAttachments, /*const*/ GLenum* attachments);
type proc_glDeleteProgramPipelines                                 = void    (GLsizei n, /*const*/ GLuint* pipelines);
type proc_glTexParameterfv                                         = void    (GLenum target, GLenum pname, /*const*/ GLfloat* params);
type proc_glVertexAttrib3s                                         = void    (GLuint index, GLshort x, GLshort y, GLshort z);
type proc_glCompressedTexSubImage1D                                = void    (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, /*const*/ void* data);
type proc_glClear                                                  = void    (GLbitfield mask);
type proc_glTexImage2D                                             = void    (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum _type, /*const*/ void* pixels);
type proc_glVertexAttrib4Niv                                       = void    (GLuint index, /*const*/ GLint* v);
type proc_glProgramUniformMatrix3x2dv                              = void    (GLuint program, GLint location, GLsizei count, GLboolean transpose, /*const*/ GLdouble* value);
type proc_glGetVertexAttribIuiv                                    = void    (GLuint index, GLenum pname, GLuint* params);
type proc_glStencilMaskSeparate                                    = void    (GLenum face, GLuint mask);
type proc_glGenVertexArrays                                        = void    (GLsizei n, GLuint* arrays);
type proc_glFrontFace                                              = void    (GLenum mode);
type proc_glUniformHandleui64ARB                                   = void    (GLint location, GLuint64 value);
type proc_glDepthRange                                             = void    (GLdouble n, GLdouble f);
type proc_glVertexArrayAttribBinding                               = void    (GLuint vaobj, GLuint attribindex, GLuint bindingindex);
type proc_glVertexAttrib4s                                         = void    (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
type proc_glDetachShader                                           = void    (GLuint program, GLuint shader);
type proc_glCullFace                                               = void    (GLenum mode);




proc_glVertexAttribL1ui64vARB                                        glVertexAttribL1ui64vARB;
proc_glVertexAttribL1ui64ARB                                         glVertexAttribL1ui64ARB;
proc_glIsImageHandleResidentARB                                      glIsImageHandleResidentARB;
proc_glIsTextureHandleResidentARB                                    glIsTextureHandleResidentARB;
proc_glProgramUniformHandleui64ARB                                   glProgramUniformHandleui64ARB;
proc_glUniformHandleui64vARB                                         glUniformHandleui64vARB;
proc_glGetTextureSamplerHandleARB                                    glGetTextureSamplerHandleARB;
proc_glGetTextureHandleARB                                           glGetTextureHandleARB;
proc_glPolygonOffsetClamp                                            glPolygonOffsetClamp;
proc_glMultiDrawArraysIndirectCount                                  glMultiDrawArraysIndirectCount;
proc_glSpecializeShader                                              glSpecializeShader;
proc_glTextureBarrier                                                glTextureBarrier;
proc_glReadnPixels                                                   glReadnPixels;
proc_glGetnUniformuiv                                                glGetnUniformuiv;
proc_glGetnUniformfv                                                 glGetnUniformfv;
proc_glGetnCompressedTexImage                                        glGetnCompressedTexImage;
proc_glGetCompressedTextureSubImage                                  glGetCompressedTextureSubImage;
proc_glMemoryBarrierByRegion                                         glMemoryBarrierByRegion;
proc_glGetQueryBufferObjectuiv                                       glGetQueryBufferObjectuiv;
proc_glGetQueryBufferObjectui64v                                     glGetQueryBufferObjectui64v;
proc_glCreateSamplers                                                glCreateSamplers;
proc_glGetVertexArrayIndexed64iv                                     glGetVertexArrayIndexed64iv;
proc_glGetVertexArrayIndexediv                                       glGetVertexArrayIndexediv;
proc_glGetVertexArrayiv                                              glGetVertexArrayiv;
proc_glVertexArrayBindingDivisor                                     glVertexArrayBindingDivisor;
proc_glVertexArrayAttribIFormat                                      glVertexArrayAttribIFormat;
proc_glVertexArrayElementBuffer                                      glVertexArrayElementBuffer;
proc_glEnableVertexArrayAttrib                                       glEnableVertexArrayAttrib;
proc_glDisableVertexArrayAttrib                                      glDisableVertexArrayAttrib;
proc_glGetTextureParameteriv                                         glGetTextureParameteriv;
proc_glGetnUniformdv                                                 glGetnUniformdv;
proc_glGetTextureParameterIuiv                                       glGetTextureParameterIuiv;
proc_glGetTextureLevelParameterfv                                    glGetTextureLevelParameterfv;
proc_glGetTextureImage                                               glGetTextureImage;
proc_glBindTextureUnit                                               glBindTextureUnit;
proc_glGenerateTextureMipmap                                         glGenerateTextureMipmap;
proc_glTextureParameterIuiv                                          glTextureParameterIuiv;
proc_glTextureParameterfv                                            glTextureParameterfv;
proc_glCopyTextureSubImage3D                                         glCopyTextureSubImage3D;
proc_glCopyTextureSubImage1D                                         glCopyTextureSubImage1D;
proc_glCompressedTextureSubImage3D                                   glCompressedTextureSubImage3D;
proc_glCompressedTextureSubImage2D                                   glCompressedTextureSubImage2D;
proc_glTextureSubImage3D                                             glTextureSubImage3D;
proc_glTextureParameterIiv                                           glTextureParameterIiv;
proc_glTextureSubImage2D                                             glTextureSubImage2D;
proc_glTextureSubImage1D                                             glTextureSubImage1D;
proc_glTextureStorage2DMultisample                                   glTextureStorage2DMultisample;
proc_glTextureStorage3D                                              glTextureStorage3D;
proc_glTextureStorage2D                                              glTextureStorage2D;
proc_glTextureStorage1D                                              glTextureStorage1D;
proc_glTextureBuffer                                                 glTextureBuffer;
proc_glCreateTextures                                                glCreateTextures;
proc_glCreateRenderbuffers                                           glCreateRenderbuffers;
proc_glClearNamedFramebufferfi                                       glClearNamedFramebufferfi;
proc_glClearNamedFramebufferuiv                                      glClearNamedFramebufferuiv;
proc_glInvalidateNamedFramebufferSubData                             glInvalidateNamedFramebufferSubData;
proc_glInvalidateNamedFramebufferData                                glInvalidateNamedFramebufferData;
proc_glNamedFramebufferReadBuffer                                    glNamedFramebufferReadBuffer;
proc_glNamedFramebufferTexture                                       glNamedFramebufferTexture;
proc_glNamedFramebufferRenderbuffer                                  glNamedFramebufferRenderbuffer;
proc_glCreateFramebuffers                                            glCreateFramebuffers;
proc_glGetNamedBufferParameteri64v                                   glGetNamedBufferParameteri64v;
proc_glMapNamedBuffer                                                glMapNamedBuffer;
proc_glClearNamedBufferSubData                                       glClearNamedBufferSubData;
proc_glClearNamedBufferData                                          glClearNamedBufferData;
proc_glCopyNamedBufferSubData                                        glCopyNamedBufferSubData;
proc_glNamedBufferSubData                                            glNamedBufferSubData;
proc_glNamedBufferData                                               glNamedBufferData;
proc_glNamedBufferStorage                                            glNamedBufferStorage;
proc_glGetTransformFeedbacki_v                                       glGetTransformFeedbacki_v;
proc_glTransformFeedbackBufferRange                                  glTransformFeedbackBufferRange;
proc_glVertexArrayAttribLFormat                                      glVertexArrayAttribLFormat;
proc_glBindImageTextures                                             glBindImageTextures;
proc_glBindSamplers                                                  glBindSamplers;
proc_glBindTextures                                                  glBindTextures;
proc_glClearTexImage                                                 glClearTexImage;
proc_glGetPointerv                                                   glGetPointerv;
proc_glGetnUniformiv                                                 glGetnUniformiv;
proc_glGetObjectPtrLabel                                             glGetObjectPtrLabel;
proc_glGetQueryBufferObjecti64v                                      glGetQueryBufferObjecti64v;
proc_glGetTransformFeedbacki64_v                                     glGetTransformFeedbacki64_v;
proc_glObjectPtrLabel                                                glObjectPtrLabel;
proc_glPushDebugGroup                                                glPushDebugGroup;
proc_glDebugMessageControl                                           glDebugMessageControl;
proc_glVertexAttribBinding                                           glVertexAttribBinding;
proc_glVertexAttribLFormat                                           glVertexAttribLFormat;
proc_glVertexAttribIFormat                                           glVertexAttribIFormat;
proc_glVertexAttribFormat                                            glVertexAttribFormat;
proc_glTexStorage2DMultisample                                       glTexStorage2DMultisample;
proc_glShaderStorageBlockBinding                                     glShaderStorageBlockBinding;
proc_glGetProgramResourceLocationIndex                               glGetProgramResourceLocationIndex;
proc_glGetProgramResourceName                                        glGetProgramResourceName;
proc_glGetProgramResourceIndex                                       glGetProgramResourceIndex;
proc_glMultiDrawElementsIndirect                                     glMultiDrawElementsIndirect;
proc_glInvalidateSubFramebuffer                                      glInvalidateSubFramebuffer;
proc_glInvalidateBufferSubData                                       glInvalidateBufferSubData;
proc_glInvalidateTexImage                                            glInvalidateTexImage;
proc_glInvalidateTexSubImage                                         glInvalidateTexSubImage;
proc_glGetFramebufferParameteriv                                     glGetFramebufferParameteriv;
proc_glFramebufferParameteri                                         glFramebufferParameteri;
proc_glNamedRenderbufferStorage                                      glNamedRenderbufferStorage;
proc_glDispatchComputeIndirect                                       glDispatchComputeIndirect;
proc_glDispatchCompute                                               glDispatchCompute;
proc_glDrawTransformFeedbackStreamInstanced                          glDrawTransformFeedbackStreamInstanced;
proc_glTexStorage2D                                                  glTexStorage2D;
proc_glTexStorage1D                                                  glTexStorage1D;
proc_glVertexBindingDivisor                                          glVertexBindingDivisor;
proc_glBindImageTexture                                              glBindImageTexture;
proc_glGetInternalformativ                                           glGetInternalformativ;
proc_glDrawElementsInstancedBaseInstance                             glDrawElementsInstancedBaseInstance;
proc_glBufferStorage                                                 glBufferStorage;
proc_glDrawArraysInstancedBaseInstance                               glDrawArraysInstancedBaseInstance;
proc_glDepthRangeArrayv                                              glDepthRangeArrayv;
proc_glNamedFramebufferParameteri                                    glNamedFramebufferParameteri;
proc_glScissorIndexedv                                               glScissorIndexedv;
proc_glViewportIndexedf                                              glViewportIndexedf;
proc_glVertexAttribLPointer                                          glVertexAttribLPointer;
proc_glVertexAttribL4dv                                              glVertexAttribL4dv;
proc_glVertexAttribL3dv                                              glVertexAttribL3dv;
proc_glVertexAttribL2dv                                              glVertexAttribL2dv;
proc_glCreateTransformFeedbacks                                      glCreateTransformFeedbacks;
proc_glTexBufferRange                                                glTexBufferRange;
proc_glVertexAttribL4d                                               glVertexAttribL4d;
proc_glVertexAttribL2d                                               glVertexAttribL2d;
proc_glGetProgramPipelineInfoLog                                     glGetProgramPipelineInfoLog;
proc_glValidateProgramPipeline                                       glValidateProgramPipeline;
proc_glProgramUniformMatrix4x3dv                                     glProgramUniformMatrix4x3dv;
proc_glProgramUniformMatrix3x4fv                                     glProgramUniformMatrix3x4fv;
proc_glProgramUniformMatrix4x2fv                                     glProgramUniformMatrix4x2fv;
proc_glProgramUniformMatrix2x4fv                                     glProgramUniformMatrix2x4fv;
proc_glPopDebugGroup                                                 glPopDebugGroup;
proc_glProgramUniformMatrix3x2fv                                     glProgramUniformMatrix3x2fv;
proc_glProgramUniformMatrix4dv                                       glProgramUniformMatrix4dv;
proc_glTextureParameterf                                             glTextureParameterf;
proc_glProgramUniformMatrix3dv                                       glProgramUniformMatrix3dv;
proc_glProgramUniformMatrix4fv                                       glProgramUniformMatrix4fv;
proc_glProgramUniformMatrix3fv                                       glProgramUniformMatrix3fv;
proc_glProgramUniformMatrix2fv                                       glProgramUniformMatrix2fv;
proc_glProgramUniform4dv                                             glProgramUniform4dv;
proc_glProgramUniform4d                                              glProgramUniform4d;
proc_glProgramUniform4f                                              glProgramUniform4f;
proc_glProgramUniform4i                                              glProgramUniform4i;
proc_glProgramUniform3dv                                             glProgramUniform3dv;
proc_glProgramUniform3d                                              glProgramUniform3d;
proc_glProgramUniformMatrix3x4dv                                     glProgramUniformMatrix3x4dv;
proc_glProgramUniform3fv                                             glProgramUniform3fv;
proc_glProgramUniform3f                                              glProgramUniform3f;
proc_glProgramUniform2ui                                             glProgramUniform2ui;
proc_glProgramUniform2dv                                             glProgramUniform2dv;
proc_glMapNamedBufferRange                                           glMapNamedBufferRange;
proc_glProgramUniform2d                                              glProgramUniform2d;
proc_glProgramUniform2f                                              glProgramUniform2f;
proc_glVertexArrayVertexBuffer                                       glVertexArrayVertexBuffer;
proc_glProgramUniform2i                                              glProgramUniform2i;
proc_glProgramUniform1uiv                                            glProgramUniform1uiv;
proc_glProgramUniform1d                                              glProgramUniform1d;
proc_glProgramUniform1fv                                             glProgramUniform1fv;
proc_glProgramUniform1f                                              glProgramUniform1f;
proc_glProgramUniform1iv                                             glProgramUniform1iv;
proc_glGenProgramPipelines                                           glGenProgramPipelines;
proc_glBindVertexBuffers                                             glBindVertexBuffers;
proc_glActiveShaderProgram                                           glActiveShaderProgram;
proc_glProgramBinary                                                 glProgramBinary;
proc_glGetProgramBinary                                              glGetProgramBinary;
proc_glDebugMessageCallback                                          glDebugMessageCallback;
proc_glClearBufferSubData                                            glClearBufferSubData;
proc_glClearDepthf                                                   glClearDepthf;
proc_glDepthRangef                                                   glDepthRangef;
proc_glShaderBinary                                                  glShaderBinary;
proc_glGetQueryIndexediv                                             glGetQueryIndexediv;
proc_glEndQueryIndexed                                               glEndQueryIndexed;
proc_glBeginQueryIndexed                                             glBeginQueryIndexed;
proc_glDrawTransformFeedbackStream                                   glDrawTransformFeedbackStream;
proc_glBindProgramPipeline                                           glBindProgramPipeline;
proc_glResumeTransformFeedback                                       glResumeTransformFeedback;
proc_glGenTransformFeedbacks                                         glGenTransformFeedbacks;
proc_glBindTransformFeedback                                         glBindTransformFeedback;
proc_glGetNamedBufferPointerv                                        glGetNamedBufferPointerv;
proc_glGetInternalformati64v                                         glGetInternalformati64v;
proc_glPatchParameterfv                                              glPatchParameterfv;
proc_glScissorIndexed                                                glScissorIndexed;
proc_glPatchParameteri                                               glPatchParameteri;
proc_glGetProgramStageiv                                             glGetProgramStageiv;
proc_glMemoryBarrier                                                 glMemoryBarrier;
proc_glGetUniformSubroutineuiv                                       glGetUniformSubroutineuiv;
proc_glProgramUniform4iv                                             glProgramUniform4iv;
proc_glGetActiveSubroutineUniformName                                glGetActiveSubroutineUniformName;
proc_glGetActiveSubroutineUniformiv                                  glGetActiveSubroutineUniformiv;
proc_glProgramUniform1ui                                             glProgramUniform1ui;
proc_glGetSubroutineIndex                                            glGetSubroutineIndex;
proc_glGetSubroutineUniformLocation                                  glGetSubroutineUniformLocation;
proc_glGetUniformdv                                                  glGetUniformdv;
proc_glUniformMatrix3x4dv                                            glUniformMatrix3x4dv;
proc_glUniformMatrix3x2dv                                            glUniformMatrix3x2dv;
proc_glProgramUniformHandleui64vARB                                  glProgramUniformHandleui64vARB;
proc_glNamedFramebufferTextureLayer                                  glNamedFramebufferTextureLayer;
proc_glUniform4dv                                                    glUniform4dv;
proc_glUniform3dv                                                    glUniform3dv;
proc_glUniform2dv                                                    glUniform2dv;
proc_glUniform1dv                                                    glUniform1dv;
proc_glUniform4d                                                     glUniform4d;
proc_glUniform3d                                                     glUniform3d;
proc_glDrawArraysIndirect                                            glDrawArraysIndirect;
proc_glBlendFuncSeparatei                                            glBlendFuncSeparatei;
proc_glBlendFunci                                                    glBlendFunci;
proc_glBlendEquationSeparatei                                        glBlendEquationSeparatei;
proc_glGetObjectLabel                                                glGetObjectLabel;
proc_glBlendEquationi                                                glBlendEquationi;
proc_glVertexAttribP4uiv                                             glVertexAttribP4uiv;
proc_glVertexAttribP3uiv                                             glVertexAttribP3uiv;
proc_glVertexAttribP2uiv                                             glVertexAttribP2uiv;
proc_glVertexAttribP2ui                                              glVertexAttribP2ui;
proc_glProgramUniform4uiv                                            glProgramUniform4uiv;
proc_glVertexAttribP1uiv                                             glVertexAttribP1uiv;
proc_glGetQueryObjectui64v                                           glGetQueryObjectui64v;
proc_glIsTransformFeedback                                           glIsTransformFeedback;
proc_glGetSamplerParameterfv                                         glGetSamplerParameterfv;
proc_glIsProgramPipeline                                             glIsProgramPipeline;
proc_glSamplerParameterIuiv                                          glSamplerParameterIuiv;
proc_glSamplerParameterfv                                            glSamplerParameterfv;
proc_glDebugMessageInsert                                            glDebugMessageInsert;
proc_glSamplerParameteriv                                            glSamplerParameteriv;
proc_glSamplerParameteri                                             glSamplerParameteri;
proc_glBindSampler                                                   glBindSampler;
proc_glSamplerParameterf                                             glSamplerParameterf;
proc_glIsSampler                                                     glIsSampler;
proc_glGenSamplers                                                   glGenSamplers;
proc_glGetNamedFramebufferParameteriv                                glGetNamedFramebufferParameteriv;
proc_glCreateBuffers                                                 glCreateBuffers;
proc_glBindFragDataLocationIndexed                                   glBindFragDataLocationIndexed;
proc_glGetMultisamplefv                                              glGetMultisamplefv;
proc_glGetTextureParameterfv                                         glGetTextureParameterfv;
proc_glTexImage3DMultisample                                         glTexImage3DMultisample;
proc_glFramebufferTexture                                            glFramebufferTexture;
proc_glGetBufferParameteri64v                                        glGetBufferParameteri64v;
proc_glCreateVertexArrays                                            glCreateVertexArrays;
proc_glGetInteger64i_v                                               glGetInteger64i_v;
proc_glUniformMatrix2dv                                              glUniformMatrix2dv;
proc_glWaitSync                                                      glWaitSync;
proc_glIsSync                                                        glIsSync;
proc_glFenceSync                                                     glFenceSync;
proc_glMultiDrawElementsBaseVertex                                   glMultiDrawElementsBaseVertex;
proc_glProgramUniform4ui                                             glProgramUniform4ui;
proc_glDrawElementsInstancedBaseVertex                               glDrawElementsInstancedBaseVertex;
proc_glGetActiveUniformBlockName                                     glGetActiveUniformBlockName;
proc_glFlushMappedNamedBufferRange                                   glFlushMappedNamedBufferRange;
proc_glGetUniformBlockIndex                                          glGetUniformBlockIndex;
proc_glGetActiveUniformName                                          glGetActiveUniformName;
proc_glGetProgramResourceiv                                          glGetProgramResourceiv;
proc_glGetUniformIndices                                             glGetUniformIndices;
proc_glTexBuffer                                                     glTexBuffer;
proc_glUniformMatrix4dv                                              glUniformMatrix4dv;
proc_glIsVertexArray                                                 glIsVertexArray;
proc_glBindVertexArray                                               glBindVertexArray;
proc_glFlushMappedBufferRange                                        glFlushMappedBufferRange;
proc_glProgramUniform2fv                                             glProgramUniform2fv;
proc_glMapBufferRange                                                glMapBufferRange;
proc_glCreateQueries                                                 glCreateQueries;
proc_glGetNamedRenderbufferParameteriv                               glGetNamedRenderbufferParameteriv;
proc_glGetActiveUniformsiv                                           glGetActiveUniformsiv;
proc_glFramebufferTextureLayer                                       glFramebufferTextureLayer;
proc_glGetFramebufferAttachmentParameteriv                           glGetFramebufferAttachmentParameteriv;
proc_glFramebufferTexture3D                                          glFramebufferTexture3D;
proc_glFramebufferTexture1D                                          glFramebufferTexture1D;
proc_glGetProgramInterfaceiv                                         glGetProgramInterfaceiv;
proc_glGetProgramPipelineiv                                          glGetProgramPipelineiv;
proc_glGenFramebuffers                                               glGenFramebuffers;
proc_glBindFramebuffer                                               glBindFramebuffer;
proc_glProgramUniform3i                                              glProgramUniform3i;
proc_glGetQueryObjecti64v                                            glGetQueryObjecti64v;
proc_glGetInteger64v                                                 glGetInteger64v;
proc_glIsFramebuffer                                                 glIsFramebuffer;
proc_glUniformMatrix4x3dv                                            glUniformMatrix4x3dv;
proc_glGetRenderbufferParameteriv                                    glGetRenderbufferParameteriv;
proc_glUniform1d                                                     glUniform1d;
proc_glBindRenderbuffer                                              glBindRenderbuffer;
proc_glMakeTextureHandleResidentARB                                  glMakeTextureHandleResidentARB;
proc_glIsRenderbuffer                                                glIsRenderbuffer;
proc_glGetStringi                                                    glGetStringi;
proc_glClearBufferfi                                                 glClearBufferfi;
proc_glClearBufferfv                                                 glClearBufferfv;
proc_glCreateShaderProgramv                                          glCreateShaderProgramv;
proc_glGetTexParameterIiv                                            glGetTexParameterIiv;
proc_glGetSamplerParameterIuiv                                       glGetSamplerParameterIuiv;
proc_glTexParameterIiv                                               glTexParameterIiv;
proc_glUniform4uiv                                                   glUniform4uiv;
proc_glVertexAttribL3d                                               glVertexAttribL3d;
proc_glUniform3ui                                                    glUniform3ui;
proc_glBindBuffersBase                                               glBindBuffersBase;
proc_glDrawTransformFeedback                                         glDrawTransformFeedback;
proc_glUniform1ui                                                    glUniform1ui;
proc_glGetFragDataLocation                                           glGetFragDataLocation;
proc_glBindFragDataLocation                                          glBindFragDataLocation;
proc_glClearNamedFramebufferiv                                       glClearNamedFramebufferiv;
proc_glVertexAttribI4iv                                              glVertexAttribI4iv;
proc_glVertexAttribI2iv                                              glVertexAttribI2iv;
proc_glNamedFramebufferDrawBuffers                                   glNamedFramebufferDrawBuffers;
proc_glGetShaderPrecisionFormat                                      glGetShaderPrecisionFormat;
proc_glVertexAttribI1iv                                              glVertexAttribI1iv;
proc_glVertexAttribI4ui                                              glVertexAttribI4ui;
proc_glVertexArrayVertexBuffers                                      glVertexArrayVertexBuffers;
proc_glVertexAttribI2ui                                              glVertexAttribI2ui;
proc_glVertexAttribI1ui                                              glVertexAttribI1ui;
proc_glUnmapNamedBuffer                                              glUnmapNamedBuffer;
proc_glProgramUniform3iv                                             glProgramUniform3iv;
proc_glVertexAttribI4i                                               glVertexAttribI4i;
proc_glVertexAttribI4bv                                              glVertexAttribI4bv;
proc_glVertexAttribI2i                                               glVertexAttribI2i;
proc_glVertexAttribI1i                                               glVertexAttribI1i;
proc_glGetVertexAttribIiv                                            glGetVertexAttribIiv;
proc_glProgramUniform2uiv                                            glProgramUniform2uiv;
proc_glVertexAttribIPointer                                          glVertexAttribIPointer;
proc_glBeginConditionalRender                                        glBeginConditionalRender;
proc_glClampColor                                                    glClampColor;
proc_glGetNamedBufferSubData                                         glGetNamedBufferSubData;
proc_glBindBufferBase                                                glBindBufferBase;
proc_glBindBufferRange                                               glBindBufferRange;
proc_glGetVertexAttribLui64vARB                                      glGetVertexAttribLui64vARB;
proc_glCompressedTextureSubImage1D                                   glCompressedTextureSubImage1D;
proc_glBeginTransformFeedback                                        glBeginTransformFeedback;
proc_glTextureBufferRange                                            glTextureBufferRange;
proc_glIsEnabledi                                                    glIsEnabledi;
proc_glGetIntegeri_v                                                 glGetIntegeri_v;
proc_glNamedRenderbufferStorageMultisample                           glNamedRenderbufferStorageMultisample;
proc_glProgramUniform4fv                                             glProgramUniform4fv;
proc_glColorMaski                                                    glColorMaski;
proc_glUniformMatrix4x3fv                                            glUniformMatrix4x3fv;
proc_glUniformMatrix3x4fv                                            glUniformMatrix3x4fv;
proc_glGetGraphicsResetStatus                                        glGetGraphicsResetStatus;
proc_glUniformMatrix2x4fv                                            glUniformMatrix2x4fv;
proc_glUniformMatrix3x2fv                                            glUniformMatrix3x2fv;
proc_glUniformMatrix2x3fv                                            glUniformMatrix2x3fv;
proc_glVertexAttribP4ui                                              glVertexAttribP4ui;
proc_glVertexAttrib4ubv                                              glVertexAttrib4ubv;
proc_glProgramUniform1dv                                             glProgramUniform1dv;
proc_glVertexAttrib4sv                                               glVertexAttrib4sv;
proc_glGetTransformFeedbackiv                                        glGetTransformFeedbackiv;
proc_glVertexAttrib4fv                                               glVertexAttrib4fv;
proc_glVertexAttrib4Nusv                                             glVertexAttrib4Nusv;
proc_glBindVertexBuffer                                              glBindVertexBuffer;
proc_glVertexAttrib4Nuiv                                             glVertexAttrib4Nuiv;
proc_glVertexAttrib4Nubv                                             glVertexAttrib4Nubv;
proc_glProvokingVertex                                               glProvokingVertex;
proc_glVertexAttrib4Nsv                                              glVertexAttrib4Nsv;
proc_glGetTextureParameterIiv                                        glGetTextureParameterIiv;
proc_glVertexAttrib3f                                                glVertexAttrib3f;
proc_glClearNamedFramebufferfv                                       glClearNamedFramebufferfv;
proc_glVertexAttribI1uiv                                             glVertexAttribI1uiv;
proc_glVertexAttrib3dv                                               glVertexAttrib3dv;
proc_glMakeImageHandleResidentARB                                    glMakeImageHandleResidentARB;
proc_glVertexAttrib3d                                                glVertexAttrib3d;
proc_glVertexAttrib2sv                                               glVertexAttrib2sv;
proc_glTextureParameteriv                                            glTextureParameteriv;
proc_glClearTexSubImage                                              glClearTexSubImage;
proc_glUseProgramStages                                              glUseProgramStages;
proc_glVertexAttrib2fv                                               glVertexAttrib2fv;
proc_glVertexAttrib2dv                                               glVertexAttrib2dv;
proc_glVertexAttrib2d                                                glVertexAttrib2d;
proc_glVertexAttrib2f                                                glVertexAttrib2f;
proc_glVertexAttrib1s                                                glVertexAttrib1s;
proc_glVertexAttrib1fv                                               glVertexAttrib1fv;
proc_glVertexAttrib1f                                                glVertexAttrib1f;
proc_glVertexAttrib1dv                                               glVertexAttrib1dv;
proc_glClearBufferuiv                                                glClearBufferuiv;
proc_glUniformMatrix3fv                                              glUniformMatrix3fv;
proc_glDeleteRenderbuffers                                           glDeleteRenderbuffers;
proc_glUniformMatrix2fv                                              glUniformMatrix2fv;
proc_glNamedFramebufferDrawBuffer                                    glNamedFramebufferDrawBuffer;
proc_glUniform2d                                                     glUniform2d;
proc_glUniform4iv                                                    glUniform4iv;
proc_glUniform1iv                                                    glUniform1iv;
proc_glGetImageHandleARB                                             glGetImageHandleARB;
proc_glUniform4fv                                                    glUniform4fv;
proc_glUniform2fv                                                    glUniform2fv;
proc_glProgramUniform3ui                                             glProgramUniform3ui;
proc_glUniform3i                                                     glUniform3i;
proc_glUniform2i                                                     glUniform2i;
proc_glUniform4f                                                     glUniform4f;
proc_glUniform3f                                                     glUniform3f;
proc_glUniform1f                                                     glUniform1f;
proc_glUniformMatrix2x3dv                                            glUniformMatrix2x3dv;
proc_glUseProgram                                                    glUseProgram;
proc_glShaderSource                                                  glShaderSource;
proc_glCopyImageSubData                                              glCopyImageSubData;
proc_glLinkProgram                                                   glLinkProgram;
proc_glIsShader                                                      glIsShader;
proc_glUniformMatrix3dv                                              glUniformMatrix3dv;
proc_glGetVertexAttribPointerv                                       glGetVertexAttribPointerv;
proc_glGetVertexAttribiv                                             glGetVertexAttribiv;
proc_glGetVertexAttribfv                                             glGetVertexAttribfv;
proc_glUniformBlockBinding                                           glUniformBlockBinding;
proc_glGetUniformLocation                                            glGetUniformLocation;
proc_glGetShaderiv                                                   glGetShaderiv;
proc_glGetProgramInfoLog                                             glGetProgramInfoLog;
proc_glProgramUniformMatrix2x3fv                                     glProgramUniformMatrix2x3fv;
proc_glGetAttribLocation                                             glGetAttribLocation;
proc_glBlitNamedFramebuffer                                          glBlitNamedFramebuffer;
proc_glGetAttachedShaders                                            glGetAttachedShaders;
proc_glGetActiveUniform                                              glGetActiveUniform;
proc_glGetActiveAttrib                                               glGetActiveAttrib;
proc_glVertexAttrib4iv                                               glVertexAttrib4iv;
proc_glDisableVertexAttribArray                                      glDisableVertexAttribArray;
proc_glDeleteShader                                                  glDeleteShader;
proc_glProgramUniform3uiv                                            glProgramUniform3uiv;
proc_glDeleteProgram                                                 glDeleteProgram;
proc_glGetBooleani_v                                                 glGetBooleani_v;
proc_glCompileShader                                                 glCompileShader;
proc_glStencilFuncSeparate                                           glStencilFuncSeparate;
proc_glStencilOpSeparate                                             glStencilOpSeparate;
proc_glRenderbufferStorageMultisample                                glRenderbufferStorageMultisample;
proc_glDrawBuffers                                                   glDrawBuffers;
proc_glGetBufferParameteriv                                          glGetBufferParameteriv;
proc_glVertexAttribDivisor                                           glVertexAttribDivisor;
proc_glUnmapBuffer                                                   glUnmapBuffer;
proc_glGetCompressedTextureImage                                     glGetCompressedTextureImage;
proc_glDepthRangeIndexed                                             glDepthRangeIndexed;
proc_glVertexAttrib4dv                                               glVertexAttrib4dv;
proc_glMapBuffer                                                     glMapBuffer;
proc_glUniformMatrix2x4dv                                            glUniformMatrix2x4dv;
proc_glBufferSubData                                                 glBufferSubData;
proc_glGetQueryObjectuiv                                             glGetQueryObjectuiv;
proc_glGetQueryObjectiv                                              glGetQueryObjectiv;
proc_glTextureView                                                   glTextureView;
proc_glIsQuery                                                       glIsQuery;
proc_glDeleteQueries                                                 glDeleteQueries;
proc_glGenQueries                                                    glGenQueries;
proc_glBlendEquation                                                 glBlendEquation;
proc_glVertexAttrib3sv                                               glVertexAttrib3sv;
proc_glVertexAttribI3ui                                              glVertexAttribI3ui;
proc_glGetNamedBufferParameteriv                                     glGetNamedBufferParameteriv;
proc_glGenBuffers                                                    glGenBuffers;
proc_glCheckNamedFramebufferStatus                                   glCheckNamedFramebufferStatus;
proc_glGetDebugMessageLog                                            glGetDebugMessageLog;
proc_glCheckFramebufferStatus                                        glCheckFramebufferStatus;
proc_glUniform4i                                                     glUniform4i;
proc_glPointParameteriv                                              glPointParameteriv;
proc_glVertexAttrib2s                                                glVertexAttrib2s;
proc_glFinish                                                        glFinish;
proc_glPointParameteri                                               glPointParameteri;
proc_glMultiDrawArrays                                               glMultiDrawArrays;
proc_glFramebufferRenderbuffer                                       glFramebufferRenderbuffer;
proc_glGetTextureSubImage                                            glGetTextureSubImage;
proc_glGetVertexAttribLdv                                            glGetVertexAttribLdv;
proc_glGetFragDataIndex                                              glGetFragDataIndex;
proc_glGetQueryiv                                                    glGetQueryiv;
proc_glGetUniformfv                                                  glGetUniformfv;
proc_glVertexAttrib4usv                                              glVertexAttrib4usv;
proc_glDeleteSync                                                    glDeleteSync;
proc_glVertexAttribL1d                                               glVertexAttribL1d;
proc_glProgramUniformMatrix2x3dv                                     glProgramUniformMatrix2x3dv;
proc_glGetCompressedTexImage                                         glGetCompressedTexImage;
proc_glCompressedTexSubImage2D                                       glCompressedTexSubImage2D;
proc_glGetTextureLevelParameteriv                                    glGetTextureLevelParameteriv;
proc_glUniform4ui                                                    glUniform4ui;
proc_glVertexAttribI4usv                                             glVertexAttribI4usv;
proc_glCompressedTexImage2D                                          glCompressedTexImage2D;
proc_glCompressedTexImage3D                                          glCompressedTexImage3D;
proc_glSampleCoverage                                                glSampleCoverage;
proc_glGetProgramResourceLocation                                    glGetProgramResourceLocation;
proc_glActiveTexture                                                 glActiveTexture;
proc_glProgramUniformMatrix4x2dv                                     glProgramUniformMatrix4x2dv;
proc_glCopyTexSubImage3D                                             glCopyTexSubImage3D;
proc_glCompressedTexImage1D                                          glCompressedTexImage1D;
proc_glTexSubImage3D                                                 glTexSubImage3D;
proc_glUniformMatrix4fv                                              glUniformMatrix4fv;
proc_glObjectLabel                                                   glObjectLabel;
proc_glGetString                                                     glGetString;
proc_glUniformMatrix4x2dv                                            glUniformMatrix4x2dv;
proc_glRenderbufferStorage                                           glRenderbufferStorage;
proc_glIsTexture                                                     glIsTexture;
proc_glGetNamedFramebufferAttachmentParameteriv                      glGetNamedFramebufferAttachmentParameteriv;
proc_glGetActiveAtomicCounterBufferiv                                glGetActiveAtomicCounterBufferiv;
proc_glGenTextures                                                   glGenTextures;
proc_glVertexAttribP3ui                                              glVertexAttribP3ui;
proc_glTexSubImage1D                                                 glTexSubImage1D;
proc_glTexStorage3D                                                  glTexStorage3D;
proc_glClientWaitSync                                                glClientWaitSync;
proc_glCopyTexSubImage2D                                             glCopyTexSubImage2D;
proc_glCopyTexSubImage1D                                             glCopyTexSubImage1D;
proc_glMultiDrawElementsIndirectCount                                glMultiDrawElementsIndirectCount;
proc_glCopyTexImage1D                                                glCopyTexImage1D;
proc_glPolygonOffset                                                 glPolygonOffset;
proc_glTexImage2DMultisample                                         glTexImage2DMultisample;
proc_glDrawElements                                                  glDrawElements;
proc_glEndConditionalRender                                          glEndConditionalRender;
proc_glGetTransformFeedbackVarying                                   glGetTransformFeedbackVarying;
proc_glTexParameteriv                                                glTexParameteriv;
proc_glDeleteFramebuffers                                            glDeleteFramebuffers;
proc_glBlendEquationSeparate                                         glBlendEquationSeparate;
proc_glDeleteTextures                                                glDeleteTextures;
proc_glGetProgramiv                                                  glGetProgramiv;
proc_glUniform1uiv                                                   glUniform1uiv;
proc_glCopyTexImage2D                                                glCopyTexImage2D;
proc_glGetTexLevelParameterfv                                        glGetTexLevelParameterfv;
proc_glSampleMaski                                                   glSampleMaski;
proc_glBindTexture                                                   glBindTexture;
proc_glGetActiveUniformBlockiv                                       glGetActiveUniformBlockiv;
proc_glMinSampleShading                                              glMinSampleShading;
proc_glGetUniformuiv                                                 glGetUniformuiv;
proc_glVertexAttrib4Nbv                                              glVertexAttrib4Nbv;
proc_glCopyTextureSubImage2D                                         glCopyTextureSubImage2D;
proc_glProgramUniformMatrix2x4dv                                     glProgramUniformMatrix2x4dv;
proc_glTexImage3D                                                    glTexImage3D;
proc_glQueryCounter                                                  glQueryCounter;
proc_glVertexAttrib4f                                                glVertexAttrib4f;
proc_glUniform2ui                                                    glUniform2ui;
proc_glGetTexImage                                                   glGetTexImage;
proc_glGetTexParameterIuiv                                           glGetTexParameterIuiv;
proc_glInvalidateBufferData                                          glInvalidateBufferData;
proc_glVertexAttrib4bv                                               glVertexAttrib4bv;
proc_glUniform2uiv                                                   glUniform2uiv;
proc_glGetShaderSource                                               glGetShaderSource;
proc_glIsBuffer                                                      glIsBuffer;
proc_glPauseTransformFeedback                                        glPauseTransformFeedback;
proc_glGetBufferPointerv                                             glGetBufferPointerv;
proc_glPolygonMode                                                   glPolygonMode;
proc_glGetnTexImage                                                  glGetnTexImage;
proc_glBindAttribLocation                                            glBindAttribLocation;
proc_glGetQueryBufferObjectiv                                        glGetQueryBufferObjectiv;
proc_glDeleteSamplers                                                glDeleteSamplers;
proc_glUniform2f                                                     glUniform2f;
proc_glPixelStoref                                                   glPixelStoref;
proc_glLogicOp                                                       glLogicOp;
proc_glCreateShader                                                  glCreateShader;
proc_glMakeTextureHandleNonResidentARB                               glMakeTextureHandleNonResidentARB;
proc_glDrawTransformFeedbackInstanced                                glDrawTransformFeedbackInstanced;
proc_glTexSubImage2D                                                 glTexSubImage2D;
proc_glGetFloati_v                                                   glGetFloati_v;
proc_glClearDepth                                                    glClearDepth;
proc_glGetBufferSubData                                              glGetBufferSubData;
proc_glReleaseShaderCompiler                                         glReleaseShaderCompiler;
proc_glVertexAttrib4uiv                                              glVertexAttrib4uiv;
proc_glTransformFeedbackBufferBase                                   glTransformFeedbackBufferBase;
proc_glCopyBufferSubData                                             glCopyBufferSubData;
proc_glFramebufferTexture2D                                          glFramebufferTexture2D;
proc_glScissorArrayv                                                 glScissorArrayv;
proc_glPointParameterf                                               glPointParameterf;
proc_glDisablei                                                      glDisablei;
proc_glUniformMatrix4x2fv                                            glUniformMatrix4x2fv;
proc_glVertexAttrib4d                                                glVertexAttrib4d;
proc_glTexParameterIuiv                                              glTexParameterIuiv;
proc_glGetFloatv                                                     glGetFloatv;
proc_glCreateProgram                                                 glCreateProgram;
proc_glTransformFeedbackVaryings                                     glTransformFeedbackVaryings;
proc_glProgramUniform1i                                              glProgramUniform1i;
proc_glVertexAttrib1d                                                glVertexAttrib1d;
proc_glMakeImageHandleNonResidentARB                                 glMakeImageHandleNonResidentARB;
proc_glViewport                                                      glViewport;
proc_glDeleteBuffers                                                 glDeleteBuffers;
proc_glTextureStorage3DMultisample                                   glTextureStorage3DMultisample;
proc_glFlush                                                         glFlush;
proc_glVertexAttribI4sv                                              glVertexAttribI4sv;
proc_glDrawArrays                                                    glDrawArrays;
proc_glVertexArrayAttribFormat                                       glVertexArrayAttribFormat;
proc_glDrawElementsInstanced                                         glDrawElementsInstanced;
proc_glTextureParameteri                                             glTextureParameteri;
proc_glDeleteTransformFeedbacks                                      glDeleteTransformFeedbacks;
proc_glUniform3iv                                                    glUniform3iv;
proc_glVertexAttribPointer                                           glVertexAttribPointer;
proc_glGetSynciv                                                     glGetSynciv;
proc_glPrimitiveRestartIndex                                         glPrimitiveRestartIndex;
proc_glUniform1i                                                     glUniform1i;
proc_glVertexAttrib1sv                                               glVertexAttrib1sv;
proc_glDisable                                                       glDisable;
proc_glUniformSubroutinesuiv                                         glUniformSubroutinesuiv;
proc_glVertexAttribI4uiv                                             glVertexAttribI4uiv;
proc_glEndQuery                                                      glEndQuery;
proc_glColorMask                                                     glColorMask;
proc_glEnablei                                                       glEnablei;
proc_glBindBuffer                                                    glBindBuffer;
proc_glGetDoublev                                                    glGetDoublev;
proc_glGetTexParameteriv                                             glGetTexParameteriv;
proc_glDeleteVertexArrays                                            glDeleteVertexArrays;
proc_glVertexAttribI2uiv                                             glVertexAttribI2uiv;
proc_glDepthMask                                                     glDepthMask;
proc_glGetVertexAttribdv                                             glGetVertexAttribdv;
proc_glDrawRangeElements                                             glDrawRangeElements;
proc_glTexStorage3DMultisample                                       glTexStorage3DMultisample;
proc_glDrawElementsIndirect                                          glDrawElementsIndirect;
proc_glDrawArraysInstanced                                           glDrawArraysInstanced;
proc_glGetSamplerParameterIiv                                        glGetSamplerParameterIiv;
proc_glClearStencil                                                  glClearStencil;
proc_glVertexAttribI3iv                                              glVertexAttribI3iv;
proc_glViewportArrayv                                                glViewportArrayv;
proc_glDrawRangeElementsBaseVertex                                   glDrawRangeElementsBaseVertex;
proc_glDrawElementsInstancedBaseVertexBaseInstance                   glDrawElementsInstancedBaseVertexBaseInstance;
proc_glScissor                                                       glScissor;
proc_glGenerateMipmap                                                glGenerateMipmap;
proc_glUniform3fv                                                    glUniform3fv;
proc_glProgramUniform2iv                                             glProgramUniform2iv;
proc_glUniform3uiv                                                   glUniform3uiv;
proc_glClearBufferiv                                                 glClearBufferiv;
proc_glVertexAttribI4ubv                                             glVertexAttribI4ubv;
proc_glVertexAttribL1dv                                              glVertexAttribL1dv;
proc_glGetBooleanv                                                   glGetBooleanv;
proc_glBindBuffersRange                                              glBindBuffersRange;
proc_glValidateProgram                                               glValidateProgram;
proc_glGenRenderbuffers                                              glGenRenderbuffers;
proc_glUniform2iv                                                    glUniform2iv;
proc_glBufferData                                                    glBufferData;
proc_glBlendFuncSeparate                                             glBlendFuncSeparate;
proc_glTexParameteri                                                 glTexParameteri;
proc_glHint                                                          glHint;
proc_glVertexAttrib3fv                                               glVertexAttrib3fv;
proc_glProgramUniformMatrix2dv                                       glProgramUniformMatrix2dv;
proc_glGetSamplerParameteriv                                         glGetSamplerParameteriv;
proc_glDrawBuffer                                                    glDrawBuffer;
proc_glIsProgram                                                     glIsProgram;
proc_glClearBufferData                                               glClearBufferData;
proc_glGetIntegerv                                                   glGetIntegerv;
proc_glDrawElementsBaseVertex                                        glDrawElementsBaseVertex;
proc_glEnable                                                        glEnable;
proc_glCreateProgramPipelines                                        glCreateProgramPipelines;
proc_glBlitFramebuffer                                               glBlitFramebuffer;
proc_glBeginQuery                                                    glBeginQuery;
proc_glStencilMask                                                   glStencilMask;
proc_glAttachShader                                                  glAttachShader;
proc_glPointSize                                                     glPointSize;
proc_glMultiDrawArraysIndirect                                       glMultiDrawArraysIndirect;
proc_glMultiDrawElements                                             glMultiDrawElements;
proc_glGetTexParameterfv                                             glGetTexParameterfv;
proc_glIsEnabled                                                     glIsEnabled;
proc_glGetTexLevelParameteriv                                        glGetTexLevelParameteriv;
proc_glGetError                                                      glGetError;
proc_glEndTransformFeedback                                          glEndTransformFeedback;
proc_glClearColor                                                    glClearColor;
proc_glBlendColor                                                    glBlendColor;
proc_glProgramParameteri                                             glProgramParameteri;
proc_glVertexAttribI3i                                               glVertexAttribI3i;
proc_glGetActiveSubroutineName                                       glGetActiveSubroutineName;
proc_glCompressedTexSubImage3D                                       glCompressedTexSubImage3D;
proc_glGetDoublei_v                                                  glGetDoublei_v;
proc_glReadPixels                                                    glReadPixels;
proc_glTexParameterf                                                 glTexParameterf;
proc_glViewportIndexedfv                                             glViewportIndexedfv;
proc_glSamplerParameterIiv                                           glSamplerParameterIiv;
proc_glPointParameterfv                                              glPointParameterfv;
proc_glGetShaderInfoLog                                              glGetShaderInfoLog;
proc_glProgramUniformMatrix4x3fv                                     glProgramUniformMatrix4x3fv;
proc_glDepthFunc                                                     glDepthFunc;
proc_glVertexAttribI3uiv                                             glVertexAttribI3uiv;
proc_glStencilOp                                                     glStencilOp;
proc_glStencilFunc                                                   glStencilFunc;
proc_glEnableVertexAttribArray                                       glEnableVertexAttribArray;
proc_glBlendFunc                                                     glBlendFunc;
proc_glVertexAttrib4Nub                                              glVertexAttrib4Nub;
proc_glUniform1fv                                                    glUniform1fv;
proc_glPixelStorei                                                   glPixelStorei;
proc_glLineWidth                                                     glLineWidth;
proc_glVertexAttribP1ui                                              glVertexAttribP1ui;
proc_glGetUniformiv                                                  glGetUniformiv;
proc_glReadBuffer                                                    glReadBuffer;
proc_glTexImage1D                                                    glTexImage1D;
proc_glClipControl                                                   glClipControl;
proc_glInvalidateFramebuffer                                         glInvalidateFramebuffer;
proc_glDeleteProgramPipelines                                        glDeleteProgramPipelines;
proc_glTexParameterfv                                                glTexParameterfv;
proc_glVertexAttrib3s                                                glVertexAttrib3s;
proc_glCompressedTexSubImage1D                                       glCompressedTexSubImage1D;
proc_glClear                                                         glClear;
proc_glTexImage2D                                                    glTexImage2D;
proc_glVertexAttrib4Niv                                              glVertexAttrib4Niv;
proc_glProgramUniformMatrix3x2dv                                     glProgramUniformMatrix3x2dv;
proc_glGetVertexAttribIuiv                                           glGetVertexAttribIuiv;
proc_glStencilMaskSeparate                                           glStencilMaskSeparate;
proc_glGenVertexArrays                                               glGenVertexArrays;
proc_glFrontFace                                                     glFrontFace;
proc_glUniformHandleui64ARB                                          glUniformHandleui64ARB;
proc_glDepthRange                                                    glDepthRange;
proc_glVertexArrayAttribBinding                                      glVertexArrayAttribBinding;
proc_glVertexAttrib4s                                                glVertexAttrib4s;
proc_glDetachShader                                                  glDetachShader;
proc_glCullFace                                                      glCullFace;


void load_opengl(void()(char*) getProcAddress) {
    glVertexAttribL1ui64vARB                                      = getProcAddress("glVertexAttribL1ui64vARB")                         as proc_glVertexAttribL1ui64vARB;
    glVertexAttribL1ui64ARB                                       = getProcAddress("glVertexAttribL1ui64ARB")                          as proc_glVertexAttribL1ui64ARB;
    glIsImageHandleResidentARB                                    = getProcAddress("glIsImageHandleResidentARB")                       as proc_glIsImageHandleResidentARB;
    glIsTextureHandleResidentARB                                  = getProcAddress("glIsTextureHandleResidentARB")                     as proc_glIsTextureHandleResidentARB;
    glProgramUniformHandleui64ARB                                 = getProcAddress("glProgramUniformHandleui64ARB")                    as proc_glProgramUniformHandleui64ARB;
    glUniformHandleui64vARB                                       = getProcAddress("glUniformHandleui64vARB")                          as proc_glUniformHandleui64vARB;
    glGetTextureSamplerHandleARB                                  = getProcAddress("glGetTextureSamplerHandleARB")                     as proc_glGetTextureSamplerHandleARB;
    glGetTextureHandleARB                                         = getProcAddress("glGetTextureHandleARB")                            as proc_glGetTextureHandleARB;
    glPolygonOffsetClamp                                          = getProcAddress("glPolygonOffsetClamp")                             as proc_glPolygonOffsetClamp;
    glMultiDrawArraysIndirectCount                                = getProcAddress("glMultiDrawArraysIndirectCount")                   as proc_glMultiDrawArraysIndirectCount;
    glSpecializeShader                                            = getProcAddress("glSpecializeShader")                               as proc_glSpecializeShader;
    glTextureBarrier                                              = getProcAddress("glTextureBarrier")                                 as proc_glTextureBarrier;
    glReadnPixels                                                 = getProcAddress("glReadnPixels")                                    as proc_glReadnPixels;
    glGetnUniformuiv                                              = getProcAddress("glGetnUniformuiv")                                 as proc_glGetnUniformuiv;
    glGetnUniformfv                                               = getProcAddress("glGetnUniformfv")                                  as proc_glGetnUniformfv;
    glGetnCompressedTexImage                                      = getProcAddress("glGetnCompressedTexImage")                         as proc_glGetnCompressedTexImage;
    glGetCompressedTextureSubImage                                = getProcAddress("glGetCompressedTextureSubImage")                   as proc_glGetCompressedTextureSubImage;
    glMemoryBarrierByRegion                                       = getProcAddress("glMemoryBarrierByRegion")                          as proc_glMemoryBarrierByRegion;
    glGetQueryBufferObjectuiv                                     = getProcAddress("glGetQueryBufferObjectuiv")                        as proc_glGetQueryBufferObjectuiv;
    glGetQueryBufferObjectui64v                                   = getProcAddress("glGetQueryBufferObjectui64v")                      as proc_glGetQueryBufferObjectui64v;
    glCreateSamplers                                              = getProcAddress("glCreateSamplers")                                 as proc_glCreateSamplers;
    glGetVertexArrayIndexed64iv                                   = getProcAddress("glGetVertexArrayIndexed64iv")                      as proc_glGetVertexArrayIndexed64iv;
    glGetVertexArrayIndexediv                                     = getProcAddress("glGetVertexArrayIndexediv")                        as proc_glGetVertexArrayIndexediv;
    glGetVertexArrayiv                                            = getProcAddress("glGetVertexArrayiv")                               as proc_glGetVertexArrayiv;
    glVertexArrayBindingDivisor                                   = getProcAddress("glVertexArrayBindingDivisor")                      as proc_glVertexArrayBindingDivisor;
    glVertexArrayAttribIFormat                                    = getProcAddress("glVertexArrayAttribIFormat")                       as proc_glVertexArrayAttribIFormat;
    glVertexArrayElementBuffer                                    = getProcAddress("glVertexArrayElementBuffer")                       as proc_glVertexArrayElementBuffer;
    glEnableVertexArrayAttrib                                     = getProcAddress("glEnableVertexArrayAttrib")                        as proc_glEnableVertexArrayAttrib;
    glDisableVertexArrayAttrib                                    = getProcAddress("glDisableVertexArrayAttrib")                       as proc_glDisableVertexArrayAttrib;
    glGetTextureParameteriv                                       = getProcAddress("glGetTextureParameteriv")                          as proc_glGetTextureParameteriv;
    glGetnUniformdv                                               = getProcAddress("glGetnUniformdv")                                  as proc_glGetnUniformdv;
    glGetTextureParameterIuiv                                     = getProcAddress("glGetTextureParameterIuiv")                        as proc_glGetTextureParameterIuiv;
    glGetTextureLevelParameterfv                                  = getProcAddress("glGetTextureLevelParameterfv")                     as proc_glGetTextureLevelParameterfv;
    glGetTextureImage                                             = getProcAddress("glGetTextureImage")                                as proc_glGetTextureImage;
    glBindTextureUnit                                             = getProcAddress("glBindTextureUnit")                                as proc_glBindTextureUnit;
    glGenerateTextureMipmap                                       = getProcAddress("glGenerateTextureMipmap")                          as proc_glGenerateTextureMipmap;
    glTextureParameterIuiv                                        = getProcAddress("glTextureParameterIuiv")                           as proc_glTextureParameterIuiv;
    glTextureParameterfv                                          = getProcAddress("glTextureParameterfv")                             as proc_glTextureParameterfv;
    glCopyTextureSubImage3D                                       = getProcAddress("glCopyTextureSubImage3D")                          as proc_glCopyTextureSubImage3D;
    glCopyTextureSubImage1D                                       = getProcAddress("glCopyTextureSubImage1D")                          as proc_glCopyTextureSubImage1D;
    glCompressedTextureSubImage3D                                 = getProcAddress("glCompressedTextureSubImage3D")                    as proc_glCompressedTextureSubImage3D;
    glCompressedTextureSubImage2D                                 = getProcAddress("glCompressedTextureSubImage2D")                    as proc_glCompressedTextureSubImage2D;
    glTextureSubImage3D                                           = getProcAddress("glTextureSubImage3D")                              as proc_glTextureSubImage3D;
    glTextureParameterIiv                                         = getProcAddress("glTextureParameterIiv")                            as proc_glTextureParameterIiv;
    glTextureSubImage2D                                           = getProcAddress("glTextureSubImage2D")                              as proc_glTextureSubImage2D;
    glTextureSubImage1D                                           = getProcAddress("glTextureSubImage1D")                              as proc_glTextureSubImage1D;
    glTextureStorage2DMultisample                                 = getProcAddress("glTextureStorage2DMultisample")                    as proc_glTextureStorage2DMultisample;
    glTextureStorage3D                                            = getProcAddress("glTextureStorage3D")                               as proc_glTextureStorage3D;
    glTextureStorage2D                                            = getProcAddress("glTextureStorage2D")                               as proc_glTextureStorage2D;
    glTextureStorage1D                                            = getProcAddress("glTextureStorage1D")                               as proc_glTextureStorage1D;
    glTextureBuffer                                               = getProcAddress("glTextureBuffer")                                  as proc_glTextureBuffer;
    glCreateTextures                                              = getProcAddress("glCreateTextures")                                 as proc_glCreateTextures;
    glCreateRenderbuffers                                         = getProcAddress("glCreateRenderbuffers")                            as proc_glCreateRenderbuffers;
    glClearNamedFramebufferfi                                     = getProcAddress("glClearNamedFramebufferfi")                        as proc_glClearNamedFramebufferfi;
    glClearNamedFramebufferuiv                                    = getProcAddress("glClearNamedFramebufferuiv")                       as proc_glClearNamedFramebufferuiv;
    glInvalidateNamedFramebufferSubData                           = getProcAddress("glInvalidateNamedFramebufferSubData")              as proc_glInvalidateNamedFramebufferSubData;
    glInvalidateNamedFramebufferData                              = getProcAddress("glInvalidateNamedFramebufferData")                 as proc_glInvalidateNamedFramebufferData;
    glNamedFramebufferReadBuffer                                  = getProcAddress("glNamedFramebufferReadBuffer")                     as proc_glNamedFramebufferReadBuffer;
    glNamedFramebufferTexture                                     = getProcAddress("glNamedFramebufferTexture")                        as proc_glNamedFramebufferTexture;
    glNamedFramebufferRenderbuffer                                = getProcAddress("glNamedFramebufferRenderbuffer")                   as proc_glNamedFramebufferRenderbuffer;
    glCreateFramebuffers                                          = getProcAddress("glCreateFramebuffers")                             as proc_glCreateFramebuffers;
    glGetNamedBufferParameteri64v                                 = getProcAddress("glGetNamedBufferParameteri64v")                    as proc_glGetNamedBufferParameteri64v;
    glMapNamedBuffer                                              = getProcAddress("glMapNamedBuffer")                                 as proc_glMapNamedBuffer;
    glClearNamedBufferSubData                                     = getProcAddress("glClearNamedBufferSubData")                        as proc_glClearNamedBufferSubData;
    glClearNamedBufferData                                        = getProcAddress("glClearNamedBufferData")                           as proc_glClearNamedBufferData;
    glCopyNamedBufferSubData                                      = getProcAddress("glCopyNamedBufferSubData")                         as proc_glCopyNamedBufferSubData;
    glNamedBufferSubData                                          = getProcAddress("glNamedBufferSubData")                             as proc_glNamedBufferSubData;
    glNamedBufferData                                             = getProcAddress("glNamedBufferData")                                as proc_glNamedBufferData;
    glNamedBufferStorage                                          = getProcAddress("glNamedBufferStorage")                             as proc_glNamedBufferStorage;
    glGetTransformFeedbacki_v                                     = getProcAddress("glGetTransformFeedbacki_v")                        as proc_glGetTransformFeedbacki_v;
    glTransformFeedbackBufferRange                                = getProcAddress("glTransformFeedbackBufferRange")                   as proc_glTransformFeedbackBufferRange;
    glVertexArrayAttribLFormat                                    = getProcAddress("glVertexArrayAttribLFormat")                       as proc_glVertexArrayAttribLFormat;
    glBindImageTextures                                           = getProcAddress("glBindImageTextures")                              as proc_glBindImageTextures;
    glBindSamplers                                                = getProcAddress("glBindSamplers")                                   as proc_glBindSamplers;
    glBindTextures                                                = getProcAddress("glBindTextures")                                   as proc_glBindTextures;
    glClearTexImage                                               = getProcAddress("glClearTexImage")                                  as proc_glClearTexImage;
    glGetPointerv                                                 = getProcAddress("glGetPointerv")                                    as proc_glGetPointerv;
    glGetnUniformiv                                               = getProcAddress("glGetnUniformiv")                                  as proc_glGetnUniformiv;
    glGetObjectPtrLabel                                           = getProcAddress("glGetObjectPtrLabel")                              as proc_glGetObjectPtrLabel;
    glGetQueryBufferObjecti64v                                    = getProcAddress("glGetQueryBufferObjecti64v")                       as proc_glGetQueryBufferObjecti64v;
    glGetTransformFeedbacki64_v                                   = getProcAddress("glGetTransformFeedbacki64_v")                      as proc_glGetTransformFeedbacki64_v;
    glObjectPtrLabel                                              = getProcAddress("glObjectPtrLabel")                                 as proc_glObjectPtrLabel;
    glPushDebugGroup                                              = getProcAddress("glPushDebugGroup")                                 as proc_glPushDebugGroup;
    glDebugMessageControl                                         = getProcAddress("glDebugMessageControl")                            as proc_glDebugMessageControl;
    glVertexAttribBinding                                         = getProcAddress("glVertexAttribBinding")                            as proc_glVertexAttribBinding;
    glVertexAttribLFormat                                         = getProcAddress("glVertexAttribLFormat")                            as proc_glVertexAttribLFormat;
    glVertexAttribIFormat                                         = getProcAddress("glVertexAttribIFormat")                            as proc_glVertexAttribIFormat;
    glVertexAttribFormat                                          = getProcAddress("glVertexAttribFormat")                             as proc_glVertexAttribFormat;
    glTexStorage2DMultisample                                     = getProcAddress("glTexStorage2DMultisample")                        as proc_glTexStorage2DMultisample;
    glShaderStorageBlockBinding                                   = getProcAddress("glShaderStorageBlockBinding")                      as proc_glShaderStorageBlockBinding;
    glGetProgramResourceLocationIndex                             = getProcAddress("glGetProgramResourceLocationIndex")                as proc_glGetProgramResourceLocationIndex;
    glGetProgramResourceName                                      = getProcAddress("glGetProgramResourceName")                         as proc_glGetProgramResourceName;
    glGetProgramResourceIndex                                     = getProcAddress("glGetProgramResourceIndex")                        as proc_glGetProgramResourceIndex;
    glMultiDrawElementsIndirect                                   = getProcAddress("glMultiDrawElementsIndirect")                      as proc_glMultiDrawElementsIndirect;
    glInvalidateSubFramebuffer                                    = getProcAddress("glInvalidateSubFramebuffer")                       as proc_glInvalidateSubFramebuffer;
    glInvalidateBufferSubData                                     = getProcAddress("glInvalidateBufferSubData")                        as proc_glInvalidateBufferSubData;
    glInvalidateTexImage                                          = getProcAddress("glInvalidateTexImage")                             as proc_glInvalidateTexImage;
    glInvalidateTexSubImage                                       = getProcAddress("glInvalidateTexSubImage")                          as proc_glInvalidateTexSubImage;
    glGetFramebufferParameteriv                                   = getProcAddress("glGetFramebufferParameteriv")                      as proc_glGetFramebufferParameteriv;
    glFramebufferParameteri                                       = getProcAddress("glFramebufferParameteri")                          as proc_glFramebufferParameteri;
    glNamedRenderbufferStorage                                    = getProcAddress("glNamedRenderbufferStorage")                       as proc_glNamedRenderbufferStorage;
    glDispatchComputeIndirect                                     = getProcAddress("glDispatchComputeIndirect")                        as proc_glDispatchComputeIndirect;
    glDispatchCompute                                             = getProcAddress("glDispatchCompute")                                as proc_glDispatchCompute;
    glDrawTransformFeedbackStreamInstanced                        = getProcAddress("glDrawTransformFeedbackStreamInstanced")           as proc_glDrawTransformFeedbackStreamInstanced;
    glTexStorage2D                                                = getProcAddress("glTexStorage2D")                                   as proc_glTexStorage2D;
    glTexStorage1D                                                = getProcAddress("glTexStorage1D")                                   as proc_glTexStorage1D;
    glVertexBindingDivisor                                        = getProcAddress("glVertexBindingDivisor")                           as proc_glVertexBindingDivisor;
    glBindImageTexture                                            = getProcAddress("glBindImageTexture")                               as proc_glBindImageTexture;
    glGetInternalformativ                                         = getProcAddress("glGetInternalformativ")                            as proc_glGetInternalformativ;
    glDrawElementsInstancedBaseInstance                           = getProcAddress("glDrawElementsInstancedBaseInstance")              as proc_glDrawElementsInstancedBaseInstance;
    glBufferStorage                                               = getProcAddress("glBufferStorage")                                  as proc_glBufferStorage;
    glDrawArraysInstancedBaseInstance                             = getProcAddress("glDrawArraysInstancedBaseInstance")                as proc_glDrawArraysInstancedBaseInstance;
    glDepthRangeArrayv                                            = getProcAddress("glDepthRangeArrayv")                               as proc_glDepthRangeArrayv;
    glNamedFramebufferParameteri                                  = getProcAddress("glNamedFramebufferParameteri")                     as proc_glNamedFramebufferParameteri;
    glScissorIndexedv                                             = getProcAddress("glScissorIndexedv")                                as proc_glScissorIndexedv;
    glViewportIndexedf                                            = getProcAddress("glViewportIndexedf")                               as proc_glViewportIndexedf;
    glVertexAttribLPointer                                        = getProcAddress("glVertexAttribLPointer")                           as proc_glVertexAttribLPointer;
    glVertexAttribL4dv                                            = getProcAddress("glVertexAttribL4dv")                               as proc_glVertexAttribL4dv;
    glVertexAttribL3dv                                            = getProcAddress("glVertexAttribL3dv")                               as proc_glVertexAttribL3dv;
    glVertexAttribL2dv                                            = getProcAddress("glVertexAttribL2dv")                               as proc_glVertexAttribL2dv;
    glCreateTransformFeedbacks                                    = getProcAddress("glCreateTransformFeedbacks")                       as proc_glCreateTransformFeedbacks;
    glTexBufferRange                                              = getProcAddress("glTexBufferRange")                                 as proc_glTexBufferRange;
    glVertexAttribL4d                                             = getProcAddress("glVertexAttribL4d")                                as proc_glVertexAttribL4d;
    glVertexAttribL2d                                             = getProcAddress("glVertexAttribL2d")                                as proc_glVertexAttribL2d;
    glGetProgramPipelineInfoLog                                   = getProcAddress("glGetProgramPipelineInfoLog")                      as proc_glGetProgramPipelineInfoLog;
    glValidateProgramPipeline                                     = getProcAddress("glValidateProgramPipeline")                        as proc_glValidateProgramPipeline;
    glProgramUniformMatrix4x3dv                                   = getProcAddress("glProgramUniformMatrix4x3dv")                      as proc_glProgramUniformMatrix4x3dv;
    glProgramUniformMatrix3x4fv                                   = getProcAddress("glProgramUniformMatrix3x4fv")                      as proc_glProgramUniformMatrix3x4fv;
    glProgramUniformMatrix4x2fv                                   = getProcAddress("glProgramUniformMatrix4x2fv")                      as proc_glProgramUniformMatrix4x2fv;
    glProgramUniformMatrix2x4fv                                   = getProcAddress("glProgramUniformMatrix2x4fv")                      as proc_glProgramUniformMatrix2x4fv;
    glPopDebugGroup                                               = getProcAddress("glPopDebugGroup")                                  as proc_glPopDebugGroup;
    glProgramUniformMatrix3x2fv                                   = getProcAddress("glProgramUniformMatrix3x2fv")                      as proc_glProgramUniformMatrix3x2fv;
    glProgramUniformMatrix4dv                                     = getProcAddress("glProgramUniformMatrix4dv")                        as proc_glProgramUniformMatrix4dv;
    glTextureParameterf                                           = getProcAddress("glTextureParameterf")                              as proc_glTextureParameterf;
    glProgramUniformMatrix3dv                                     = getProcAddress("glProgramUniformMatrix3dv")                        as proc_glProgramUniformMatrix3dv;
    glProgramUniformMatrix4fv                                     = getProcAddress("glProgramUniformMatrix4fv")                        as proc_glProgramUniformMatrix4fv;
    glProgramUniformMatrix3fv                                     = getProcAddress("glProgramUniformMatrix3fv")                        as proc_glProgramUniformMatrix3fv;
    glProgramUniformMatrix2fv                                     = getProcAddress("glProgramUniformMatrix2fv")                        as proc_glProgramUniformMatrix2fv;
    glProgramUniform4dv                                           = getProcAddress("glProgramUniform4dv")                              as proc_glProgramUniform4dv;
    glProgramUniform4d                                            = getProcAddress("glProgramUniform4d")                               as proc_glProgramUniform4d;
    glProgramUniform4f                                            = getProcAddress("glProgramUniform4f")                               as proc_glProgramUniform4f;
    glProgramUniform4i                                            = getProcAddress("glProgramUniform4i")                               as proc_glProgramUniform4i;
    glProgramUniform3dv                                           = getProcAddress("glProgramUniform3dv")                              as proc_glProgramUniform3dv;
    glProgramUniform3d                                            = getProcAddress("glProgramUniform3d")                               as proc_glProgramUniform3d;
    glProgramUniformMatrix3x4dv                                   = getProcAddress("glProgramUniformMatrix3x4dv")                      as proc_glProgramUniformMatrix3x4dv;
    glProgramUniform3fv                                           = getProcAddress("glProgramUniform3fv")                              as proc_glProgramUniform3fv;
    glProgramUniform3f                                            = getProcAddress("glProgramUniform3f")                               as proc_glProgramUniform3f;
    glProgramUniform2ui                                           = getProcAddress("glProgramUniform2ui")                              as proc_glProgramUniform2ui;
    glProgramUniform2dv                                           = getProcAddress("glProgramUniform2dv")                              as proc_glProgramUniform2dv;
    glMapNamedBufferRange                                         = getProcAddress("glMapNamedBufferRange")                            as proc_glMapNamedBufferRange;
    glProgramUniform2d                                            = getProcAddress("glProgramUniform2d")                               as proc_glProgramUniform2d;
    glProgramUniform2f                                            = getProcAddress("glProgramUniform2f")                               as proc_glProgramUniform2f;
    glVertexArrayVertexBuffer                                     = getProcAddress("glVertexArrayVertexBuffer")                        as proc_glVertexArrayVertexBuffer;
    glProgramUniform2i                                            = getProcAddress("glProgramUniform2i")                               as proc_glProgramUniform2i;
    glProgramUniform1uiv                                          = getProcAddress("glProgramUniform1uiv")                             as proc_glProgramUniform1uiv;
    glProgramUniform1d                                            = getProcAddress("glProgramUniform1d")                               as proc_glProgramUniform1d;
    glProgramUniform1fv                                           = getProcAddress("glProgramUniform1fv")                              as proc_glProgramUniform1fv;
    glProgramUniform1f                                            = getProcAddress("glProgramUniform1f")                               as proc_glProgramUniform1f;
    glProgramUniform1iv                                           = getProcAddress("glProgramUniform1iv")                              as proc_glProgramUniform1iv;
    glGenProgramPipelines                                         = getProcAddress("glGenProgramPipelines")                            as proc_glGenProgramPipelines;
    glBindVertexBuffers                                           = getProcAddress("glBindVertexBuffers")                              as proc_glBindVertexBuffers;
    glActiveShaderProgram                                         = getProcAddress("glActiveShaderProgram")                            as proc_glActiveShaderProgram;
    glProgramBinary                                               = getProcAddress("glProgramBinary")                                  as proc_glProgramBinary;
    glGetProgramBinary                                            = getProcAddress("glGetProgramBinary")                               as proc_glGetProgramBinary;
    glDebugMessageCallback                                        = getProcAddress("glDebugMessageCallback")                           as proc_glDebugMessageCallback;
    glClearBufferSubData                                          = getProcAddress("glClearBufferSubData")                             as proc_glClearBufferSubData;
    glClearDepthf                                                 = getProcAddress("glClearDepthf")                                    as proc_glClearDepthf;
    glDepthRangef                                                 = getProcAddress("glDepthRangef")                                    as proc_glDepthRangef;
    glShaderBinary                                                = getProcAddress("glShaderBinary")                                   as proc_glShaderBinary;
    glGetQueryIndexediv                                           = getProcAddress("glGetQueryIndexediv")                              as proc_glGetQueryIndexediv;
    glEndQueryIndexed                                             = getProcAddress("glEndQueryIndexed")                                as proc_glEndQueryIndexed;
    glBeginQueryIndexed                                           = getProcAddress("glBeginQueryIndexed")                              as proc_glBeginQueryIndexed;
    glDrawTransformFeedbackStream                                 = getProcAddress("glDrawTransformFeedbackStream")                    as proc_glDrawTransformFeedbackStream;
    glBindProgramPipeline                                         = getProcAddress("glBindProgramPipeline")                            as proc_glBindProgramPipeline;
    glResumeTransformFeedback                                     = getProcAddress("glResumeTransformFeedback")                        as proc_glResumeTransformFeedback;
    glGenTransformFeedbacks                                       = getProcAddress("glGenTransformFeedbacks")                          as proc_glGenTransformFeedbacks;
    glBindTransformFeedback                                       = getProcAddress("glBindTransformFeedback")                          as proc_glBindTransformFeedback;
    glGetNamedBufferPointerv                                      = getProcAddress("glGetNamedBufferPointerv")                         as proc_glGetNamedBufferPointerv;
    glGetInternalformati64v                                       = getProcAddress("glGetInternalformati64v")                          as proc_glGetInternalformati64v;
    glPatchParameterfv                                            = getProcAddress("glPatchParameterfv")                               as proc_glPatchParameterfv;
    glScissorIndexed                                              = getProcAddress("glScissorIndexed")                                 as proc_glScissorIndexed;
    glPatchParameteri                                             = getProcAddress("glPatchParameteri")                                as proc_glPatchParameteri;
    glGetProgramStageiv                                           = getProcAddress("glGetProgramStageiv")                              as proc_glGetProgramStageiv;
    glMemoryBarrier                                               = getProcAddress("glMemoryBarrier")                                  as proc_glMemoryBarrier;
    glGetUniformSubroutineuiv                                     = getProcAddress("glGetUniformSubroutineuiv")                        as proc_glGetUniformSubroutineuiv;
    glProgramUniform4iv                                           = getProcAddress("glProgramUniform4iv")                              as proc_glProgramUniform4iv;
    glGetActiveSubroutineUniformName                              = getProcAddress("glGetActiveSubroutineUniformName")                 as proc_glGetActiveSubroutineUniformName;
    glGetActiveSubroutineUniformiv                                = getProcAddress("glGetActiveSubroutineUniformiv")                   as proc_glGetActiveSubroutineUniformiv;
    glProgramUniform1ui                                           = getProcAddress("glProgramUniform1ui")                              as proc_glProgramUniform1ui;
    glGetSubroutineIndex                                          = getProcAddress("glGetSubroutineIndex")                             as proc_glGetSubroutineIndex;
    glGetSubroutineUniformLocation                                = getProcAddress("glGetSubroutineUniformLocation")                   as proc_glGetSubroutineUniformLocation;
    glGetUniformdv                                                = getProcAddress("glGetUniformdv")                                   as proc_glGetUniformdv;
    glUniformMatrix3x4dv                                          = getProcAddress("glUniformMatrix3x4dv")                             as proc_glUniformMatrix3x4dv;
    glUniformMatrix3x2dv                                          = getProcAddress("glUniformMatrix3x2dv")                             as proc_glUniformMatrix3x2dv;
    glProgramUniformHandleui64vARB                                = getProcAddress("glProgramUniformHandleui64vARB")                   as proc_glProgramUniformHandleui64vARB;
    glNamedFramebufferTextureLayer                                = getProcAddress("glNamedFramebufferTextureLayer")                   as proc_glNamedFramebufferTextureLayer;
    glUniform4dv                                                  = getProcAddress("glUniform4dv")                                     as proc_glUniform4dv;
    glUniform3dv                                                  = getProcAddress("glUniform3dv")                                     as proc_glUniform3dv;
    glUniform2dv                                                  = getProcAddress("glUniform2dv")                                     as proc_glUniform2dv;
    glUniform1dv                                                  = getProcAddress("glUniform1dv")                                     as proc_glUniform1dv;
    glUniform4d                                                   = getProcAddress("glUniform4d")                                      as proc_glUniform4d;
    glUniform3d                                                   = getProcAddress("glUniform3d")                                      as proc_glUniform3d;
    glDrawArraysIndirect                                          = getProcAddress("glDrawArraysIndirect")                             as proc_glDrawArraysIndirect;
    glBlendFuncSeparatei                                          = getProcAddress("glBlendFuncSeparatei")                             as proc_glBlendFuncSeparatei;
    glBlendFunci                                                  = getProcAddress("glBlendFunci")                                     as proc_glBlendFunci;
    glBlendEquationSeparatei                                      = getProcAddress("glBlendEquationSeparatei")                         as proc_glBlendEquationSeparatei;
    glGetObjectLabel                                              = getProcAddress("glGetObjectLabel")                                 as proc_glGetObjectLabel;
    glBlendEquationi                                              = getProcAddress("glBlendEquationi")                                 as proc_glBlendEquationi;
    glVertexAttribP4uiv                                           = getProcAddress("glVertexAttribP4uiv")                              as proc_glVertexAttribP4uiv;
    glVertexAttribP3uiv                                           = getProcAddress("glVertexAttribP3uiv")                              as proc_glVertexAttribP3uiv;
    glVertexAttribP2uiv                                           = getProcAddress("glVertexAttribP2uiv")                              as proc_glVertexAttribP2uiv;
    glVertexAttribP2ui                                            = getProcAddress("glVertexAttribP2ui")                               as proc_glVertexAttribP2ui;
    glProgramUniform4uiv                                          = getProcAddress("glProgramUniform4uiv")                             as proc_glProgramUniform4uiv;
    glVertexAttribP1uiv                                           = getProcAddress("glVertexAttribP1uiv")                              as proc_glVertexAttribP1uiv;
    glGetQueryObjectui64v                                         = getProcAddress("glGetQueryObjectui64v")                            as proc_glGetQueryObjectui64v;
    glIsTransformFeedback                                         = getProcAddress("glIsTransformFeedback")                            as proc_glIsTransformFeedback;
    glGetSamplerParameterfv                                       = getProcAddress("glGetSamplerParameterfv")                          as proc_glGetSamplerParameterfv;
    glIsProgramPipeline                                           = getProcAddress("glIsProgramPipeline")                              as proc_glIsProgramPipeline;
    glSamplerParameterIuiv                                        = getProcAddress("glSamplerParameterIuiv")                           as proc_glSamplerParameterIuiv;
    glSamplerParameterfv                                          = getProcAddress("glSamplerParameterfv")                             as proc_glSamplerParameterfv;
    glDebugMessageInsert                                          = getProcAddress("glDebugMessageInsert")                             as proc_glDebugMessageInsert;
    glSamplerParameteriv                                          = getProcAddress("glSamplerParameteriv")                             as proc_glSamplerParameteriv;
    glSamplerParameteri                                           = getProcAddress("glSamplerParameteri")                              as proc_glSamplerParameteri;
    glBindSampler                                                 = getProcAddress("glBindSampler")                                    as proc_glBindSampler;
    glSamplerParameterf                                           = getProcAddress("glSamplerParameterf")                              as proc_glSamplerParameterf;
    glIsSampler                                                   = getProcAddress("glIsSampler")                                      as proc_glIsSampler;
    glGenSamplers                                                 = getProcAddress("glGenSamplers")                                    as proc_glGenSamplers;
    glGetNamedFramebufferParameteriv                              = getProcAddress("glGetNamedFramebufferParameteriv")                 as proc_glGetNamedFramebufferParameteriv;
    glCreateBuffers                                               = getProcAddress("glCreateBuffers")                                  as proc_glCreateBuffers;
    glBindFragDataLocationIndexed                                 = getProcAddress("glBindFragDataLocationIndexed")                    as proc_glBindFragDataLocationIndexed;
    glGetMultisamplefv                                            = getProcAddress("glGetMultisamplefv")                               as proc_glGetMultisamplefv;
    glGetTextureParameterfv                                       = getProcAddress("glGetTextureParameterfv")                          as proc_glGetTextureParameterfv;
    glTexImage3DMultisample                                       = getProcAddress("glTexImage3DMultisample")                          as proc_glTexImage3DMultisample;
    glFramebufferTexture                                          = getProcAddress("glFramebufferTexture")                             as proc_glFramebufferTexture;
    glGetBufferParameteri64v                                      = getProcAddress("glGetBufferParameteri64v")                         as proc_glGetBufferParameteri64v;
    glCreateVertexArrays                                          = getProcAddress("glCreateVertexArrays")                             as proc_glCreateVertexArrays;
    glGetInteger64i_v                                             = getProcAddress("glGetInteger64i_v")                                as proc_glGetInteger64i_v;
    glUniformMatrix2dv                                            = getProcAddress("glUniformMatrix2dv")                               as proc_glUniformMatrix2dv;
    glWaitSync                                                    = getProcAddress("glWaitSync")                                       as proc_glWaitSync;
    glIsSync                                                      = getProcAddress("glIsSync")                                         as proc_glIsSync;
    glFenceSync                                                   = getProcAddress("glFenceSync")                                      as proc_glFenceSync;
    glMultiDrawElementsBaseVertex                                 = getProcAddress("glMultiDrawElementsBaseVertex")                    as proc_glMultiDrawElementsBaseVertex;
    glProgramUniform4ui                                           = getProcAddress("glProgramUniform4ui")                              as proc_glProgramUniform4ui;
    glDrawElementsInstancedBaseVertex                             = getProcAddress("glDrawElementsInstancedBaseVertex")                as proc_glDrawElementsInstancedBaseVertex;
    glGetActiveUniformBlockName                                   = getProcAddress("glGetActiveUniformBlockName")                      as proc_glGetActiveUniformBlockName;
    glFlushMappedNamedBufferRange                                 = getProcAddress("glFlushMappedNamedBufferRange")                    as proc_glFlushMappedNamedBufferRange;
    glGetUniformBlockIndex                                        = getProcAddress("glGetUniformBlockIndex")                           as proc_glGetUniformBlockIndex;
    glGetActiveUniformName                                        = getProcAddress("glGetActiveUniformName")                           as proc_glGetActiveUniformName;
    glGetProgramResourceiv                                        = getProcAddress("glGetProgramResourceiv")                           as proc_glGetProgramResourceiv;
    glGetUniformIndices                                           = getProcAddress("glGetUniformIndices")                              as proc_glGetUniformIndices;
    glTexBuffer                                                   = getProcAddress("glTexBuffer")                                      as proc_glTexBuffer;
    glUniformMatrix4dv                                            = getProcAddress("glUniformMatrix4dv")                               as proc_glUniformMatrix4dv;
    glIsVertexArray                                               = getProcAddress("glIsVertexArray")                                  as proc_glIsVertexArray;
    glBindVertexArray                                             = getProcAddress("glBindVertexArray")                                as proc_glBindVertexArray;
    glFlushMappedBufferRange                                      = getProcAddress("glFlushMappedBufferRange")                         as proc_glFlushMappedBufferRange;
    glProgramUniform2fv                                           = getProcAddress("glProgramUniform2fv")                              as proc_glProgramUniform2fv;
    glMapBufferRange                                              = getProcAddress("glMapBufferRange")                                 as proc_glMapBufferRange;
    glCreateQueries                                               = getProcAddress("glCreateQueries")                                  as proc_glCreateQueries;
    glGetNamedRenderbufferParameteriv                             = getProcAddress("glGetNamedRenderbufferParameteriv")                as proc_glGetNamedRenderbufferParameteriv;
    glGetActiveUniformsiv                                         = getProcAddress("glGetActiveUniformsiv")                            as proc_glGetActiveUniformsiv;
    glFramebufferTextureLayer                                     = getProcAddress("glFramebufferTextureLayer")                        as proc_glFramebufferTextureLayer;
    glGetFramebufferAttachmentParameteriv                         = getProcAddress("glGetFramebufferAttachmentParameteriv")            as proc_glGetFramebufferAttachmentParameteriv;
    glFramebufferTexture3D                                        = getProcAddress("glFramebufferTexture3D")                           as proc_glFramebufferTexture3D;
    glFramebufferTexture1D                                        = getProcAddress("glFramebufferTexture1D")                           as proc_glFramebufferTexture1D;
    glGetProgramInterfaceiv                                       = getProcAddress("glGetProgramInterfaceiv")                          as proc_glGetProgramInterfaceiv;
    glGetProgramPipelineiv                                        = getProcAddress("glGetProgramPipelineiv")                           as proc_glGetProgramPipelineiv;
    glGenFramebuffers                                             = getProcAddress("glGenFramebuffers")                                as proc_glGenFramebuffers;
    glBindFramebuffer                                             = getProcAddress("glBindFramebuffer")                                as proc_glBindFramebuffer;
    glProgramUniform3i                                            = getProcAddress("glProgramUniform3i")                               as proc_glProgramUniform3i;
    glGetQueryObjecti64v                                          = getProcAddress("glGetQueryObjecti64v")                             as proc_glGetQueryObjecti64v;
    glGetInteger64v                                               = getProcAddress("glGetInteger64v")                                  as proc_glGetInteger64v;
    glIsFramebuffer                                               = getProcAddress("glIsFramebuffer")                                  as proc_glIsFramebuffer;
    glUniformMatrix4x3dv                                          = getProcAddress("glUniformMatrix4x3dv")                             as proc_glUniformMatrix4x3dv;
    glGetRenderbufferParameteriv                                  = getProcAddress("glGetRenderbufferParameteriv")                     as proc_glGetRenderbufferParameteriv;
    glUniform1d                                                   = getProcAddress("glUniform1d")                                      as proc_glUniform1d;
    glBindRenderbuffer                                            = getProcAddress("glBindRenderbuffer")                               as proc_glBindRenderbuffer;
    glMakeTextureHandleResidentARB                                = getProcAddress("glMakeTextureHandleResidentARB")                   as proc_glMakeTextureHandleResidentARB;
    glIsRenderbuffer                                              = getProcAddress("glIsRenderbuffer")                                 as proc_glIsRenderbuffer;
    glGetStringi                                                  = getProcAddress("glGetStringi")                                     as proc_glGetStringi;
    glClearBufferfi                                               = getProcAddress("glClearBufferfi")                                  as proc_glClearBufferfi;
    glClearBufferfv                                               = getProcAddress("glClearBufferfv")                                  as proc_glClearBufferfv;
    glCreateShaderProgramv                                        = getProcAddress("glCreateShaderProgramv")                           as proc_glCreateShaderProgramv;
    glGetTexParameterIiv                                          = getProcAddress("glGetTexParameterIiv")                             as proc_glGetTexParameterIiv;
    glGetSamplerParameterIuiv                                     = getProcAddress("glGetSamplerParameterIuiv")                        as proc_glGetSamplerParameterIuiv;
    glTexParameterIiv                                             = getProcAddress("glTexParameterIiv")                                as proc_glTexParameterIiv;
    glUniform4uiv                                                 = getProcAddress("glUniform4uiv")                                    as proc_glUniform4uiv;
    glVertexAttribL3d                                             = getProcAddress("glVertexAttribL3d")                                as proc_glVertexAttribL3d;
    glUniform3ui                                                  = getProcAddress("glUniform3ui")                                     as proc_glUniform3ui;
    glBindBuffersBase                                             = getProcAddress("glBindBuffersBase")                                as proc_glBindBuffersBase;
    glDrawTransformFeedback                                       = getProcAddress("glDrawTransformFeedback")                          as proc_glDrawTransformFeedback;
    glUniform1ui                                                  = getProcAddress("glUniform1ui")                                     as proc_glUniform1ui;
    glGetFragDataLocation                                         = getProcAddress("glGetFragDataLocation")                            as proc_glGetFragDataLocation;
    glBindFragDataLocation                                        = getProcAddress("glBindFragDataLocation")                           as proc_glBindFragDataLocation;
    glClearNamedFramebufferiv                                     = getProcAddress("glClearNamedFramebufferiv")                        as proc_glClearNamedFramebufferiv;
    glVertexAttribI4iv                                            = getProcAddress("glVertexAttribI4iv")                               as proc_glVertexAttribI4iv;
    glVertexAttribI2iv                                            = getProcAddress("glVertexAttribI2iv")                               as proc_glVertexAttribI2iv;
    glNamedFramebufferDrawBuffers                                 = getProcAddress("glNamedFramebufferDrawBuffers")                    as proc_glNamedFramebufferDrawBuffers;
    glGetShaderPrecisionFormat                                    = getProcAddress("glGetShaderPrecisionFormat")                       as proc_glGetShaderPrecisionFormat;
    glVertexAttribI1iv                                            = getProcAddress("glVertexAttribI1iv")                               as proc_glVertexAttribI1iv;
    glVertexAttribI4ui                                            = getProcAddress("glVertexAttribI4ui")                               as proc_glVertexAttribI4ui;
    glVertexArrayVertexBuffers                                    = getProcAddress("glVertexArrayVertexBuffers")                       as proc_glVertexArrayVertexBuffers;
    glVertexAttribI2ui                                            = getProcAddress("glVertexAttribI2ui")                               as proc_glVertexAttribI2ui;
    glVertexAttribI1ui                                            = getProcAddress("glVertexAttribI1ui")                               as proc_glVertexAttribI1ui;
    glUnmapNamedBuffer                                            = getProcAddress("glUnmapNamedBuffer")                               as proc_glUnmapNamedBuffer;
    glProgramUniform3iv                                           = getProcAddress("glProgramUniform3iv")                              as proc_glProgramUniform3iv;
    glVertexAttribI4i                                             = getProcAddress("glVertexAttribI4i")                                as proc_glVertexAttribI4i;
    glVertexAttribI4bv                                            = getProcAddress("glVertexAttribI4bv")                               as proc_glVertexAttribI4bv;
    glVertexAttribI2i                                             = getProcAddress("glVertexAttribI2i")                                as proc_glVertexAttribI2i;
    glVertexAttribI1i                                             = getProcAddress("glVertexAttribI1i")                                as proc_glVertexAttribI1i;
    glGetVertexAttribIiv                                          = getProcAddress("glGetVertexAttribIiv")                             as proc_glGetVertexAttribIiv;
    glProgramUniform2uiv                                          = getProcAddress("glProgramUniform2uiv")                             as proc_glProgramUniform2uiv;
    glVertexAttribIPointer                                        = getProcAddress("glVertexAttribIPointer")                           as proc_glVertexAttribIPointer;
    glBeginConditionalRender                                      = getProcAddress("glBeginConditionalRender")                         as proc_glBeginConditionalRender;
    glClampColor                                                  = getProcAddress("glClampColor")                                     as proc_glClampColor;
    glGetNamedBufferSubData                                       = getProcAddress("glGetNamedBufferSubData")                          as proc_glGetNamedBufferSubData;
    glBindBufferBase                                              = getProcAddress("glBindBufferBase")                                 as proc_glBindBufferBase;
    glBindBufferRange                                             = getProcAddress("glBindBufferRange")                                as proc_glBindBufferRange;
    glGetVertexAttribLui64vARB                                    = getProcAddress("glGetVertexAttribLui64vARB")                       as proc_glGetVertexAttribLui64vARB;
    glCompressedTextureSubImage1D                                 = getProcAddress("glCompressedTextureSubImage1D")                    as proc_glCompressedTextureSubImage1D;
    glBeginTransformFeedback                                      = getProcAddress("glBeginTransformFeedback")                         as proc_glBeginTransformFeedback;
    glTextureBufferRange                                          = getProcAddress("glTextureBufferRange")                             as proc_glTextureBufferRange;
    glIsEnabledi                                                  = getProcAddress("glIsEnabledi")                                     as proc_glIsEnabledi;
    glGetIntegeri_v                                               = getProcAddress("glGetIntegeri_v")                                  as proc_glGetIntegeri_v;
    glNamedRenderbufferStorageMultisample                         = getProcAddress("glNamedRenderbufferStorageMultisample")            as proc_glNamedRenderbufferStorageMultisample;
    glProgramUniform4fv                                           = getProcAddress("glProgramUniform4fv")                              as proc_glProgramUniform4fv;
    glColorMaski                                                  = getProcAddress("glColorMaski")                                     as proc_glColorMaski;
    glUniformMatrix4x3fv                                          = getProcAddress("glUniformMatrix4x3fv")                             as proc_glUniformMatrix4x3fv;
    glUniformMatrix3x4fv                                          = getProcAddress("glUniformMatrix3x4fv")                             as proc_glUniformMatrix3x4fv;
    glGetGraphicsResetStatus                                      = getProcAddress("glGetGraphicsResetStatus")                         as proc_glGetGraphicsResetStatus;
    glUniformMatrix2x4fv                                          = getProcAddress("glUniformMatrix2x4fv")                             as proc_glUniformMatrix2x4fv;
    glUniformMatrix3x2fv                                          = getProcAddress("glUniformMatrix3x2fv")                             as proc_glUniformMatrix3x2fv;
    glUniformMatrix2x3fv                                          = getProcAddress("glUniformMatrix2x3fv")                             as proc_glUniformMatrix2x3fv;
    glVertexAttribP4ui                                            = getProcAddress("glVertexAttribP4ui")                               as proc_glVertexAttribP4ui;
    glVertexAttrib4ubv                                            = getProcAddress("glVertexAttrib4ubv")                               as proc_glVertexAttrib4ubv;
    glProgramUniform1dv                                           = getProcAddress("glProgramUniform1dv")                              as proc_glProgramUniform1dv;
    glVertexAttrib4sv                                             = getProcAddress("glVertexAttrib4sv")                                as proc_glVertexAttrib4sv;
    glGetTransformFeedbackiv                                      = getProcAddress("glGetTransformFeedbackiv")                         as proc_glGetTransformFeedbackiv;
    glVertexAttrib4fv                                             = getProcAddress("glVertexAttrib4fv")                                as proc_glVertexAttrib4fv;
    glVertexAttrib4Nusv                                           = getProcAddress("glVertexAttrib4Nusv")                              as proc_glVertexAttrib4Nusv;
    glBindVertexBuffer                                            = getProcAddress("glBindVertexBuffer")                               as proc_glBindVertexBuffer;
    glVertexAttrib4Nuiv                                           = getProcAddress("glVertexAttrib4Nuiv")                              as proc_glVertexAttrib4Nuiv;
    glVertexAttrib4Nubv                                           = getProcAddress("glVertexAttrib4Nubv")                              as proc_glVertexAttrib4Nubv;
    glProvokingVertex                                             = getProcAddress("glProvokingVertex")                                as proc_glProvokingVertex;
    glVertexAttrib4Nsv                                            = getProcAddress("glVertexAttrib4Nsv")                               as proc_glVertexAttrib4Nsv;
    glGetTextureParameterIiv                                      = getProcAddress("glGetTextureParameterIiv")                         as proc_glGetTextureParameterIiv;
    glVertexAttrib3f                                              = getProcAddress("glVertexAttrib3f")                                 as proc_glVertexAttrib3f;
    glClearNamedFramebufferfv                                     = getProcAddress("glClearNamedFramebufferfv")                        as proc_glClearNamedFramebufferfv;
    glVertexAttribI1uiv                                           = getProcAddress("glVertexAttribI1uiv")                              as proc_glVertexAttribI1uiv;
    glVertexAttrib3dv                                             = getProcAddress("glVertexAttrib3dv")                                as proc_glVertexAttrib3dv;
    glMakeImageHandleResidentARB                                  = getProcAddress("glMakeImageHandleResidentARB")                     as proc_glMakeImageHandleResidentARB;
    glVertexAttrib3d                                              = getProcAddress("glVertexAttrib3d")                                 as proc_glVertexAttrib3d;
    glVertexAttrib2sv                                             = getProcAddress("glVertexAttrib2sv")                                as proc_glVertexAttrib2sv;
    glTextureParameteriv                                          = getProcAddress("glTextureParameteriv")                             as proc_glTextureParameteriv;
    glClearTexSubImage                                            = getProcAddress("glClearTexSubImage")                               as proc_glClearTexSubImage;
    glUseProgramStages                                            = getProcAddress("glUseProgramStages")                               as proc_glUseProgramStages;
    glVertexAttrib2fv                                             = getProcAddress("glVertexAttrib2fv")                                as proc_glVertexAttrib2fv;
    glVertexAttrib2dv                                             = getProcAddress("glVertexAttrib2dv")                                as proc_glVertexAttrib2dv;
    glVertexAttrib2d                                              = getProcAddress("glVertexAttrib2d")                                 as proc_glVertexAttrib2d;
    glVertexAttrib2f                                              = getProcAddress("glVertexAttrib2f")                                 as proc_glVertexAttrib2f;
    glVertexAttrib1s                                              = getProcAddress("glVertexAttrib1s")                                 as proc_glVertexAttrib1s;
    glVertexAttrib1fv                                             = getProcAddress("glVertexAttrib1fv")                                as proc_glVertexAttrib1fv;
    glVertexAttrib1f                                              = getProcAddress("glVertexAttrib1f")                                 as proc_glVertexAttrib1f;
    glVertexAttrib1dv                                             = getProcAddress("glVertexAttrib1dv")                                as proc_glVertexAttrib1dv;
    glClearBufferuiv                                              = getProcAddress("glClearBufferuiv")                                 as proc_glClearBufferuiv;
    glUniformMatrix3fv                                            = getProcAddress("glUniformMatrix3fv")                               as proc_glUniformMatrix3fv;
    glDeleteRenderbuffers                                         = getProcAddress("glDeleteRenderbuffers")                            as proc_glDeleteRenderbuffers;
    glUniformMatrix2fv                                            = getProcAddress("glUniformMatrix2fv")                               as proc_glUniformMatrix2fv;
    glNamedFramebufferDrawBuffer                                  = getProcAddress("glNamedFramebufferDrawBuffer")                     as proc_glNamedFramebufferDrawBuffer;
    glUniform2d                                                   = getProcAddress("glUniform2d")                                      as proc_glUniform2d;
    glUniform4iv                                                  = getProcAddress("glUniform4iv")                                     as proc_glUniform4iv;
    glUniform1iv                                                  = getProcAddress("glUniform1iv")                                     as proc_glUniform1iv;
    glGetImageHandleARB                                           = getProcAddress("glGetImageHandleARB")                              as proc_glGetImageHandleARB;
    glUniform4fv                                                  = getProcAddress("glUniform4fv")                                     as proc_glUniform4fv;
    glUniform2fv                                                  = getProcAddress("glUniform2fv")                                     as proc_glUniform2fv;
    glProgramUniform3ui                                           = getProcAddress("glProgramUniform3ui")                              as proc_glProgramUniform3ui;
    glUniform3i                                                   = getProcAddress("glUniform3i")                                      as proc_glUniform3i;
    glUniform2i                                                   = getProcAddress("glUniform2i")                                      as proc_glUniform2i;
    glUniform4f                                                   = getProcAddress("glUniform4f")                                      as proc_glUniform4f;
    glUniform3f                                                   = getProcAddress("glUniform3f")                                      as proc_glUniform3f;
    glUniform1f                                                   = getProcAddress("glUniform1f")                                      as proc_glUniform1f;
    glUniformMatrix2x3dv                                          = getProcAddress("glUniformMatrix2x3dv")                             as proc_glUniformMatrix2x3dv;
    glUseProgram                                                  = getProcAddress("glUseProgram")                                     as proc_glUseProgram;
    glShaderSource                                                = getProcAddress("glShaderSource")                                   as proc_glShaderSource;
    glCopyImageSubData                                            = getProcAddress("glCopyImageSubData")                               as proc_glCopyImageSubData;
    glLinkProgram                                                 = getProcAddress("glLinkProgram")                                    as proc_glLinkProgram;
    glIsShader                                                    = getProcAddress("glIsShader")                                       as proc_glIsShader;
    glUniformMatrix3dv                                            = getProcAddress("glUniformMatrix3dv")                               as proc_glUniformMatrix3dv;
    glGetVertexAttribPointerv                                     = getProcAddress("glGetVertexAttribPointerv")                        as proc_glGetVertexAttribPointerv;
    glGetVertexAttribiv                                           = getProcAddress("glGetVertexAttribiv")                              as proc_glGetVertexAttribiv;
    glGetVertexAttribfv                                           = getProcAddress("glGetVertexAttribfv")                              as proc_glGetVertexAttribfv;
    glUniformBlockBinding                                         = getProcAddress("glUniformBlockBinding")                            as proc_glUniformBlockBinding;
    glGetUniformLocation                                          = getProcAddress("glGetUniformLocation")                             as proc_glGetUniformLocation;
    glGetShaderiv                                                 = getProcAddress("glGetShaderiv")                                    as proc_glGetShaderiv;
    glGetProgramInfoLog                                           = getProcAddress("glGetProgramInfoLog")                              as proc_glGetProgramInfoLog;
    glProgramUniformMatrix2x3fv                                   = getProcAddress("glProgramUniformMatrix2x3fv")                      as proc_glProgramUniformMatrix2x3fv;
    glGetAttribLocation                                           = getProcAddress("glGetAttribLocation")                              as proc_glGetAttribLocation;
    glBlitNamedFramebuffer                                        = getProcAddress("glBlitNamedFramebuffer")                           as proc_glBlitNamedFramebuffer;
    glGetAttachedShaders                                          = getProcAddress("glGetAttachedShaders")                             as proc_glGetAttachedShaders;
    glGetActiveUniform                                            = getProcAddress("glGetActiveUniform")                               as proc_glGetActiveUniform;
    glGetActiveAttrib                                             = getProcAddress("glGetActiveAttrib")                                as proc_glGetActiveAttrib;
    glVertexAttrib4iv                                             = getProcAddress("glVertexAttrib4iv")                                as proc_glVertexAttrib4iv;
    glDisableVertexAttribArray                                    = getProcAddress("glDisableVertexAttribArray")                       as proc_glDisableVertexAttribArray;
    glDeleteShader                                                = getProcAddress("glDeleteShader")                                   as proc_glDeleteShader;
    glProgramUniform3uiv                                          = getProcAddress("glProgramUniform3uiv")                             as proc_glProgramUniform3uiv;
    glDeleteProgram                                               = getProcAddress("glDeleteProgram")                                  as proc_glDeleteProgram;
    glGetBooleani_v                                               = getProcAddress("glGetBooleani_v")                                  as proc_glGetBooleani_v;
    glCompileShader                                               = getProcAddress("glCompileShader")                                  as proc_glCompileShader;
    glStencilFuncSeparate                                         = getProcAddress("glStencilFuncSeparate")                            as proc_glStencilFuncSeparate;
    glStencilOpSeparate                                           = getProcAddress("glStencilOpSeparate")                              as proc_glStencilOpSeparate;
    glRenderbufferStorageMultisample                              = getProcAddress("glRenderbufferStorageMultisample")                 as proc_glRenderbufferStorageMultisample;
    glDrawBuffers                                                 = getProcAddress("glDrawBuffers")                                    as proc_glDrawBuffers;
    glGetBufferParameteriv                                        = getProcAddress("glGetBufferParameteriv")                           as proc_glGetBufferParameteriv;
    glVertexAttribDivisor                                         = getProcAddress("glVertexAttribDivisor")                            as proc_glVertexAttribDivisor;
    glUnmapBuffer                                                 = getProcAddress("glUnmapBuffer")                                    as proc_glUnmapBuffer;
    glGetCompressedTextureImage                                   = getProcAddress("glGetCompressedTextureImage")                      as proc_glGetCompressedTextureImage;
    glDepthRangeIndexed                                           = getProcAddress("glDepthRangeIndexed")                              as proc_glDepthRangeIndexed;
    glVertexAttrib4dv                                             = getProcAddress("glVertexAttrib4dv")                                as proc_glVertexAttrib4dv;
    glMapBuffer                                                   = getProcAddress("glMapBuffer")                                      as proc_glMapBuffer;
    glUniformMatrix2x4dv                                          = getProcAddress("glUniformMatrix2x4dv")                             as proc_glUniformMatrix2x4dv;
    glBufferSubData                                               = getProcAddress("glBufferSubData")                                  as proc_glBufferSubData;
    glGetQueryObjectuiv                                           = getProcAddress("glGetQueryObjectuiv")                              as proc_glGetQueryObjectuiv;
    glGetQueryObjectiv                                            = getProcAddress("glGetQueryObjectiv")                               as proc_glGetQueryObjectiv;
    glTextureView                                                 = getProcAddress("glTextureView")                                    as proc_glTextureView;
    glIsQuery                                                     = getProcAddress("glIsQuery")                                        as proc_glIsQuery;
    glDeleteQueries                                               = getProcAddress("glDeleteQueries")                                  as proc_glDeleteQueries;
    glGenQueries                                                  = getProcAddress("glGenQueries")                                     as proc_glGenQueries;
    glBlendEquation                                               = getProcAddress("glBlendEquation")                                  as proc_glBlendEquation;
    glVertexAttrib3sv                                             = getProcAddress("glVertexAttrib3sv")                                as proc_glVertexAttrib3sv;
    glVertexAttribI3ui                                            = getProcAddress("glVertexAttribI3ui")                               as proc_glVertexAttribI3ui;
    glGetNamedBufferParameteriv                                   = getProcAddress("glGetNamedBufferParameteriv")                      as proc_glGetNamedBufferParameteriv;
    glGenBuffers                                                  = getProcAddress("glGenBuffers")                                     as proc_glGenBuffers;
    glCheckNamedFramebufferStatus                                 = getProcAddress("glCheckNamedFramebufferStatus")                    as proc_glCheckNamedFramebufferStatus;
    glGetDebugMessageLog                                          = getProcAddress("glGetDebugMessageLog")                             as proc_glGetDebugMessageLog;
    glCheckFramebufferStatus                                      = getProcAddress("glCheckFramebufferStatus")                         as proc_glCheckFramebufferStatus;
    glUniform4i                                                   = getProcAddress("glUniform4i")                                      as proc_glUniform4i;
    glPointParameteriv                                            = getProcAddress("glPointParameteriv")                               as proc_glPointParameteriv;
    glVertexAttrib2s                                              = getProcAddress("glVertexAttrib2s")                                 as proc_glVertexAttrib2s;
    glFinish                                                      = getProcAddress("glFinish")                                         as proc_glFinish;
    glPointParameteri                                             = getProcAddress("glPointParameteri")                                as proc_glPointParameteri;
    glMultiDrawArrays                                             = getProcAddress("glMultiDrawArrays")                                as proc_glMultiDrawArrays;
    glFramebufferRenderbuffer                                     = getProcAddress("glFramebufferRenderbuffer")                        as proc_glFramebufferRenderbuffer;
    glGetTextureSubImage                                          = getProcAddress("glGetTextureSubImage")                             as proc_glGetTextureSubImage;
    glGetVertexAttribLdv                                          = getProcAddress("glGetVertexAttribLdv")                             as proc_glGetVertexAttribLdv;
    glGetFragDataIndex                                            = getProcAddress("glGetFragDataIndex")                               as proc_glGetFragDataIndex;
    glGetQueryiv                                                  = getProcAddress("glGetQueryiv")                                     as proc_glGetQueryiv;
    glGetUniformfv                                                = getProcAddress("glGetUniformfv")                                   as proc_glGetUniformfv;
    glVertexAttrib4usv                                            = getProcAddress("glVertexAttrib4usv")                               as proc_glVertexAttrib4usv;
    glDeleteSync                                                  = getProcAddress("glDeleteSync")                                     as proc_glDeleteSync;
    glVertexAttribL1d                                             = getProcAddress("glVertexAttribL1d")                                as proc_glVertexAttribL1d;
    glProgramUniformMatrix2x3dv                                   = getProcAddress("glProgramUniformMatrix2x3dv")                      as proc_glProgramUniformMatrix2x3dv;
    glGetCompressedTexImage                                       = getProcAddress("glGetCompressedTexImage")                          as proc_glGetCompressedTexImage;
    glCompressedTexSubImage2D                                     = getProcAddress("glCompressedTexSubImage2D")                        as proc_glCompressedTexSubImage2D;
    glGetTextureLevelParameteriv                                  = getProcAddress("glGetTextureLevelParameteriv")                     as proc_glGetTextureLevelParameteriv;
    glUniform4ui                                                  = getProcAddress("glUniform4ui")                                     as proc_glUniform4ui;
    glVertexAttribI4usv                                           = getProcAddress("glVertexAttribI4usv")                              as proc_glVertexAttribI4usv;
    glCompressedTexImage2D                                        = getProcAddress("glCompressedTexImage2D")                           as proc_glCompressedTexImage2D;
    glCompressedTexImage3D                                        = getProcAddress("glCompressedTexImage3D")                           as proc_glCompressedTexImage3D;
    glSampleCoverage                                              = getProcAddress("glSampleCoverage")                                 as proc_glSampleCoverage;
    glGetProgramResourceLocation                                  = getProcAddress("glGetProgramResourceLocation")                     as proc_glGetProgramResourceLocation;
    glActiveTexture                                               = getProcAddress("glActiveTexture")                                  as proc_glActiveTexture;
    glProgramUniformMatrix4x2dv                                   = getProcAddress("glProgramUniformMatrix4x2dv")                      as proc_glProgramUniformMatrix4x2dv;
    glCopyTexSubImage3D                                           = getProcAddress("glCopyTexSubImage3D")                              as proc_glCopyTexSubImage3D;
    glCompressedTexImage1D                                        = getProcAddress("glCompressedTexImage1D")                           as proc_glCompressedTexImage1D;
    glTexSubImage3D                                               = getProcAddress("glTexSubImage3D")                                  as proc_glTexSubImage3D;
    glUniformMatrix4fv                                            = getProcAddress("glUniformMatrix4fv")                               as proc_glUniformMatrix4fv;
    glObjectLabel                                                 = getProcAddress("glObjectLabel")                                    as proc_glObjectLabel;
    glGetString                                                   = getProcAddress("glGetString")                                      as proc_glGetString;
    glUniformMatrix4x2dv                                          = getProcAddress("glUniformMatrix4x2dv")                             as proc_glUniformMatrix4x2dv;
    glRenderbufferStorage                                         = getProcAddress("glRenderbufferStorage")                            as proc_glRenderbufferStorage;
    glIsTexture                                                   = getProcAddress("glIsTexture")                                      as proc_glIsTexture;
    glGetNamedFramebufferAttachmentParameteriv                    = getProcAddress("glGetNamedFramebufferAttachmentParameteriv")       as proc_glGetNamedFramebufferAttachmentParameteriv;
    glGetActiveAtomicCounterBufferiv                              = getProcAddress("glGetActiveAtomicCounterBufferiv")                 as proc_glGetActiveAtomicCounterBufferiv;
    glGenTextures                                                 = getProcAddress("glGenTextures")                                    as proc_glGenTextures;
    glVertexAttribP3ui                                            = getProcAddress("glVertexAttribP3ui")                               as proc_glVertexAttribP3ui;
    glTexSubImage1D                                               = getProcAddress("glTexSubImage1D")                                  as proc_glTexSubImage1D;
    glTexStorage3D                                                = getProcAddress("glTexStorage3D")                                   as proc_glTexStorage3D;
    glClientWaitSync                                              = getProcAddress("glClientWaitSync")                                 as proc_glClientWaitSync;
    glCopyTexSubImage2D                                           = getProcAddress("glCopyTexSubImage2D")                              as proc_glCopyTexSubImage2D;
    glCopyTexSubImage1D                                           = getProcAddress("glCopyTexSubImage1D")                              as proc_glCopyTexSubImage1D;
    glMultiDrawElementsIndirectCount                              = getProcAddress("glMultiDrawElementsIndirectCount")                 as proc_glMultiDrawElementsIndirectCount;
    glCopyTexImage1D                                              = getProcAddress("glCopyTexImage1D")                                 as proc_glCopyTexImage1D;
    glPolygonOffset                                               = getProcAddress("glPolygonOffset")                                  as proc_glPolygonOffset;
    glTexImage2DMultisample                                       = getProcAddress("glTexImage2DMultisample")                          as proc_glTexImage2DMultisample;
    glDrawElements                                                = getProcAddress("glDrawElements")                                   as proc_glDrawElements;
    glEndConditionalRender                                        = getProcAddress("glEndConditionalRender")                           as proc_glEndConditionalRender;
    glGetTransformFeedbackVarying                                 = getProcAddress("glGetTransformFeedbackVarying")                    as proc_glGetTransformFeedbackVarying;
    glTexParameteriv                                              = getProcAddress("glTexParameteriv")                                 as proc_glTexParameteriv;
    glDeleteFramebuffers                                          = getProcAddress("glDeleteFramebuffers")                             as proc_glDeleteFramebuffers;
    glBlendEquationSeparate                                       = getProcAddress("glBlendEquationSeparate")                          as proc_glBlendEquationSeparate;
    glDeleteTextures                                              = getProcAddress("glDeleteTextures")                                 as proc_glDeleteTextures;
    glGetProgramiv                                                = getProcAddress("glGetProgramiv")                                   as proc_glGetProgramiv;
    glUniform1uiv                                                 = getProcAddress("glUniform1uiv")                                    as proc_glUniform1uiv;
    glCopyTexImage2D                                              = getProcAddress("glCopyTexImage2D")                                 as proc_glCopyTexImage2D;
    glGetTexLevelParameterfv                                      = getProcAddress("glGetTexLevelParameterfv")                         as proc_glGetTexLevelParameterfv;
    glSampleMaski                                                 = getProcAddress("glSampleMaski")                                    as proc_glSampleMaski;
    glBindTexture                                                 = getProcAddress("glBindTexture")                                    as proc_glBindTexture;
    glGetActiveUniformBlockiv                                     = getProcAddress("glGetActiveUniformBlockiv")                        as proc_glGetActiveUniformBlockiv;
    glMinSampleShading                                            = getProcAddress("glMinSampleShading")                               as proc_glMinSampleShading;
    glGetUniformuiv                                               = getProcAddress("glGetUniformuiv")                                  as proc_glGetUniformuiv;
    glVertexAttrib4Nbv                                            = getProcAddress("glVertexAttrib4Nbv")                               as proc_glVertexAttrib4Nbv;
    glCopyTextureSubImage2D                                       = getProcAddress("glCopyTextureSubImage2D")                          as proc_glCopyTextureSubImage2D;
    glProgramUniformMatrix2x4dv                                   = getProcAddress("glProgramUniformMatrix2x4dv")                      as proc_glProgramUniformMatrix2x4dv;
    glTexImage3D                                                  = getProcAddress("glTexImage3D")                                     as proc_glTexImage3D;
    glQueryCounter                                                = getProcAddress("glQueryCounter")                                   as proc_glQueryCounter;
    glVertexAttrib4f                                              = getProcAddress("glVertexAttrib4f")                                 as proc_glVertexAttrib4f;
    glUniform2ui                                                  = getProcAddress("glUniform2ui")                                     as proc_glUniform2ui;
    glGetTexImage                                                 = getProcAddress("glGetTexImage")                                    as proc_glGetTexImage;
    glGetTexParameterIuiv                                         = getProcAddress("glGetTexParameterIuiv")                            as proc_glGetTexParameterIuiv;
    glInvalidateBufferData                                        = getProcAddress("glInvalidateBufferData")                           as proc_glInvalidateBufferData;
    glVertexAttrib4bv                                             = getProcAddress("glVertexAttrib4bv")                                as proc_glVertexAttrib4bv;
    glUniform2uiv                                                 = getProcAddress("glUniform2uiv")                                    as proc_glUniform2uiv;
    glGetShaderSource                                             = getProcAddress("glGetShaderSource")                                as proc_glGetShaderSource;
    glIsBuffer                                                    = getProcAddress("glIsBuffer")                                       as proc_glIsBuffer;
    glPauseTransformFeedback                                      = getProcAddress("glPauseTransformFeedback")                         as proc_glPauseTransformFeedback;
    glGetBufferPointerv                                           = getProcAddress("glGetBufferPointerv")                              as proc_glGetBufferPointerv;
    glPolygonMode                                                 = getProcAddress("glPolygonMode")                                    as proc_glPolygonMode;
    glGetnTexImage                                                = getProcAddress("glGetnTexImage")                                   as proc_glGetnTexImage;
    glBindAttribLocation                                          = getProcAddress("glBindAttribLocation")                             as proc_glBindAttribLocation;
    glGetQueryBufferObjectiv                                      = getProcAddress("glGetQueryBufferObjectiv")                         as proc_glGetQueryBufferObjectiv;
    glDeleteSamplers                                              = getProcAddress("glDeleteSamplers")                                 as proc_glDeleteSamplers;
    glUniform2f                                                   = getProcAddress("glUniform2f")                                      as proc_glUniform2f;
    glPixelStoref                                                 = getProcAddress("glPixelStoref")                                    as proc_glPixelStoref;
    glLogicOp                                                     = getProcAddress("glLogicOp")                                        as proc_glLogicOp;
    glCreateShader                                                = getProcAddress("glCreateShader")                                   as proc_glCreateShader;
    glMakeTextureHandleNonResidentARB                             = getProcAddress("glMakeTextureHandleNonResidentARB")                as proc_glMakeTextureHandleNonResidentARB;
    glDrawTransformFeedbackInstanced                              = getProcAddress("glDrawTransformFeedbackInstanced")                 as proc_glDrawTransformFeedbackInstanced;
    glTexSubImage2D                                               = getProcAddress("glTexSubImage2D")                                  as proc_glTexSubImage2D;
    glGetFloati_v                                                 = getProcAddress("glGetFloati_v")                                    as proc_glGetFloati_v;
    glClearDepth                                                  = getProcAddress("glClearDepth")                                     as proc_glClearDepth;
    glGetBufferSubData                                            = getProcAddress("glGetBufferSubData")                               as proc_glGetBufferSubData;
    glReleaseShaderCompiler                                       = getProcAddress("glReleaseShaderCompiler")                          as proc_glReleaseShaderCompiler;
    glVertexAttrib4uiv                                            = getProcAddress("glVertexAttrib4uiv")                               as proc_glVertexAttrib4uiv;
    glTransformFeedbackBufferBase                                 = getProcAddress("glTransformFeedbackBufferBase")                    as proc_glTransformFeedbackBufferBase;
    glCopyBufferSubData                                           = getProcAddress("glCopyBufferSubData")                              as proc_glCopyBufferSubData;
    glFramebufferTexture2D                                        = getProcAddress("glFramebufferTexture2D")                           as proc_glFramebufferTexture2D;
    glScissorArrayv                                               = getProcAddress("glScissorArrayv")                                  as proc_glScissorArrayv;
    glPointParameterf                                             = getProcAddress("glPointParameterf")                                as proc_glPointParameterf;
    glDisablei                                                    = getProcAddress("glDisablei")                                       as proc_glDisablei;
    glUniformMatrix4x2fv                                          = getProcAddress("glUniformMatrix4x2fv")                             as proc_glUniformMatrix4x2fv;
    glVertexAttrib4d                                              = getProcAddress("glVertexAttrib4d")                                 as proc_glVertexAttrib4d;
    glTexParameterIuiv                                            = getProcAddress("glTexParameterIuiv")                               as proc_glTexParameterIuiv;
    glGetFloatv                                                   = getProcAddress("glGetFloatv")                                      as proc_glGetFloatv;
    glCreateProgram                                               = getProcAddress("glCreateProgram")                                  as proc_glCreateProgram;
    glTransformFeedbackVaryings                                   = getProcAddress("glTransformFeedbackVaryings")                      as proc_glTransformFeedbackVaryings;
    glProgramUniform1i                                            = getProcAddress("glProgramUniform1i")                               as proc_glProgramUniform1i;
    glVertexAttrib1d                                              = getProcAddress("glVertexAttrib1d")                                 as proc_glVertexAttrib1d;
    glMakeImageHandleNonResidentARB                               = getProcAddress("glMakeImageHandleNonResidentARB")                  as proc_glMakeImageHandleNonResidentARB;
    glViewport                                                    = getProcAddress("glViewport")                                       as proc_glViewport;
    glDeleteBuffers                                               = getProcAddress("glDeleteBuffers")                                  as proc_glDeleteBuffers;
    glTextureStorage3DMultisample                                 = getProcAddress("glTextureStorage3DMultisample")                    as proc_glTextureStorage3DMultisample;
    glFlush                                                       = getProcAddress("glFlush")                                          as proc_glFlush;
    glVertexAttribI4sv                                            = getProcAddress("glVertexAttribI4sv")                               as proc_glVertexAttribI4sv;
    glDrawArrays                                                  = getProcAddress("glDrawArrays")                                     as proc_glDrawArrays;
    glVertexArrayAttribFormat                                     = getProcAddress("glVertexArrayAttribFormat")                        as proc_glVertexArrayAttribFormat;
    glDrawElementsInstanced                                       = getProcAddress("glDrawElementsInstanced")                          as proc_glDrawElementsInstanced;
    glTextureParameteri                                           = getProcAddress("glTextureParameteri")                              as proc_glTextureParameteri;
    glDeleteTransformFeedbacks                                    = getProcAddress("glDeleteTransformFeedbacks")                       as proc_glDeleteTransformFeedbacks;
    glUniform3iv                                                  = getProcAddress("glUniform3iv")                                     as proc_glUniform3iv;
    glVertexAttribPointer                                         = getProcAddress("glVertexAttribPointer")                            as proc_glVertexAttribPointer;
    glGetSynciv                                                   = getProcAddress("glGetSynciv")                                      as proc_glGetSynciv;
    glPrimitiveRestartIndex                                       = getProcAddress("glPrimitiveRestartIndex")                          as proc_glPrimitiveRestartIndex;
    glUniform1i                                                   = getProcAddress("glUniform1i")                                      as proc_glUniform1i;
    glVertexAttrib1sv                                             = getProcAddress("glVertexAttrib1sv")                                as proc_glVertexAttrib1sv;
    glDisable                                                     = getProcAddress("glDisable")                                        as proc_glDisable;
    glUniformSubroutinesuiv                                       = getProcAddress("glUniformSubroutinesuiv")                          as proc_glUniformSubroutinesuiv;
    glVertexAttribI4uiv                                           = getProcAddress("glVertexAttribI4uiv")                              as proc_glVertexAttribI4uiv;
    glEndQuery                                                    = getProcAddress("glEndQuery")                                       as proc_glEndQuery;
    glColorMask                                                   = getProcAddress("glColorMask")                                      as proc_glColorMask;
    glEnablei                                                     = getProcAddress("glEnablei")                                        as proc_glEnablei;
    glBindBuffer                                                  = getProcAddress("glBindBuffer")                                     as proc_glBindBuffer;
    glGetDoublev                                                  = getProcAddress("glGetDoublev")                                     as proc_glGetDoublev;
    glGetTexParameteriv                                           = getProcAddress("glGetTexParameteriv")                              as proc_glGetTexParameteriv;
    glDeleteVertexArrays                                          = getProcAddress("glDeleteVertexArrays")                             as proc_glDeleteVertexArrays;
    glVertexAttribI2uiv                                           = getProcAddress("glVertexAttribI2uiv")                              as proc_glVertexAttribI2uiv;
    glDepthMask                                                   = getProcAddress("glDepthMask")                                      as proc_glDepthMask;
    glGetVertexAttribdv                                           = getProcAddress("glGetVertexAttribdv")                              as proc_glGetVertexAttribdv;
    glDrawRangeElements                                           = getProcAddress("glDrawRangeElements")                              as proc_glDrawRangeElements;
    glTexStorage3DMultisample                                     = getProcAddress("glTexStorage3DMultisample")                        as proc_glTexStorage3DMultisample;
    glDrawElementsIndirect                                        = getProcAddress("glDrawElementsIndirect")                           as proc_glDrawElementsIndirect;
    glDrawArraysInstanced                                         = getProcAddress("glDrawArraysInstanced")                            as proc_glDrawArraysInstanced;
    glGetSamplerParameterIiv                                      = getProcAddress("glGetSamplerParameterIiv")                         as proc_glGetSamplerParameterIiv;
    glClearStencil                                                = getProcAddress("glClearStencil")                                   as proc_glClearStencil;
    glVertexAttribI3iv                                            = getProcAddress("glVertexAttribI3iv")                               as proc_glVertexAttribI3iv;
    glViewportArrayv                                              = getProcAddress("glViewportArrayv")                                 as proc_glViewportArrayv;
    glDrawRangeElementsBaseVertex                                 = getProcAddress("glDrawRangeElementsBaseVertex")                    as proc_glDrawRangeElementsBaseVertex;
    glDrawElementsInstancedBaseVertexBaseInstance                 = getProcAddress("glDrawElementsInstancedBaseVertexBaseInstance")    as proc_glDrawElementsInstancedBaseVertexBaseInstance;
    glScissor                                                     = getProcAddress("glScissor")                                        as proc_glScissor;
    glGenerateMipmap                                              = getProcAddress("glGenerateMipmap")                                 as proc_glGenerateMipmap;
    glUniform3fv                                                  = getProcAddress("glUniform3fv")                                     as proc_glUniform3fv;
    glProgramUniform2iv                                           = getProcAddress("glProgramUniform2iv")                              as proc_glProgramUniform2iv;
    glUniform3uiv                                                 = getProcAddress("glUniform3uiv")                                    as proc_glUniform3uiv;
    glClearBufferiv                                               = getProcAddress("glClearBufferiv")                                  as proc_glClearBufferiv;
    glVertexAttribI4ubv                                           = getProcAddress("glVertexAttribI4ubv")                              as proc_glVertexAttribI4ubv;
    glVertexAttribL1dv                                            = getProcAddress("glVertexAttribL1dv")                               as proc_glVertexAttribL1dv;
    glGetBooleanv                                                 = getProcAddress("glGetBooleanv")                                    as proc_glGetBooleanv;
    glBindBuffersRange                                            = getProcAddress("glBindBuffersRange")                               as proc_glBindBuffersRange;
    glValidateProgram                                             = getProcAddress("glValidateProgram")                                as proc_glValidateProgram;
    glGenRenderbuffers                                            = getProcAddress("glGenRenderbuffers")                               as proc_glGenRenderbuffers;
    glUniform2iv                                                  = getProcAddress("glUniform2iv")                                     as proc_glUniform2iv;
    glBufferData                                                  = getProcAddress("glBufferData")                                     as proc_glBufferData;
    glBlendFuncSeparate                                           = getProcAddress("glBlendFuncSeparate")                              as proc_glBlendFuncSeparate;
    glTexParameteri                                               = getProcAddress("glTexParameteri")                                  as proc_glTexParameteri;
    glHint                                                        = getProcAddress("glHint")                                           as proc_glHint;
    glVertexAttrib3fv                                             = getProcAddress("glVertexAttrib3fv")                                as proc_glVertexAttrib3fv;
    glProgramUniformMatrix2dv                                     = getProcAddress("glProgramUniformMatrix2dv")                        as proc_glProgramUniformMatrix2dv;
    glGetSamplerParameteriv                                       = getProcAddress("glGetSamplerParameteriv")                          as proc_glGetSamplerParameteriv;
    glDrawBuffer                                                  = getProcAddress("glDrawBuffer")                                     as proc_glDrawBuffer;
    glIsProgram                                                   = getProcAddress("glIsProgram")                                      as proc_glIsProgram;
    glClearBufferData                                             = getProcAddress("glClearBufferData")                                as proc_glClearBufferData;
    glGetIntegerv                                                 = getProcAddress("glGetIntegerv")                                    as proc_glGetIntegerv;
    glDrawElementsBaseVertex                                      = getProcAddress("glDrawElementsBaseVertex")                         as proc_glDrawElementsBaseVertex;
    glEnable                                                      = getProcAddress("glEnable")                                         as proc_glEnable;
    glCreateProgramPipelines                                      = getProcAddress("glCreateProgramPipelines")                         as proc_glCreateProgramPipelines;
    glBlitFramebuffer                                             = getProcAddress("glBlitFramebuffer")                                as proc_glBlitFramebuffer;
    glBeginQuery                                                  = getProcAddress("glBeginQuery")                                     as proc_glBeginQuery;
    glStencilMask                                                 = getProcAddress("glStencilMask")                                    as proc_glStencilMask;
    glAttachShader                                                = getProcAddress("glAttachShader")                                   as proc_glAttachShader;
    glPointSize                                                   = getProcAddress("glPointSize")                                      as proc_glPointSize;
    glMultiDrawArraysIndirect                                     = getProcAddress("glMultiDrawArraysIndirect")                        as proc_glMultiDrawArraysIndirect;
    glMultiDrawElements                                           = getProcAddress("glMultiDrawElements")                              as proc_glMultiDrawElements;
    glGetTexParameterfv                                           = getProcAddress("glGetTexParameterfv")                              as proc_glGetTexParameterfv;
    glIsEnabled                                                   = getProcAddress("glIsEnabled")                                      as proc_glIsEnabled;
    glGetTexLevelParameteriv                                      = getProcAddress("glGetTexLevelParameteriv")                         as proc_glGetTexLevelParameteriv;
    glGetError                                                    = getProcAddress("glGetError")                                       as proc_glGetError;
    glEndTransformFeedback                                        = getProcAddress("glEndTransformFeedback")                           as proc_glEndTransformFeedback;
    glClearColor                                                  = getProcAddress("glClearColor")                                     as proc_glClearColor;
    glBlendColor                                                  = getProcAddress("glBlendColor")                                     as proc_glBlendColor;
    glProgramParameteri                                           = getProcAddress("glProgramParameteri")                              as proc_glProgramParameteri;
    glVertexAttribI3i                                             = getProcAddress("glVertexAttribI3i")                                as proc_glVertexAttribI3i;
    glGetActiveSubroutineName                                     = getProcAddress("glGetActiveSubroutineName")                        as proc_glGetActiveSubroutineName;
    glCompressedTexSubImage3D                                     = getProcAddress("glCompressedTexSubImage3D")                        as proc_glCompressedTexSubImage3D;
    glGetDoublei_v                                                = getProcAddress("glGetDoublei_v")                                   as proc_glGetDoublei_v;
    glReadPixels                                                  = getProcAddress("glReadPixels")                                     as proc_glReadPixels;
    glTexParameterf                                               = getProcAddress("glTexParameterf")                                  as proc_glTexParameterf;
    glViewportIndexedfv                                           = getProcAddress("glViewportIndexedfv")                              as proc_glViewportIndexedfv;
    glSamplerParameterIiv                                         = getProcAddress("glSamplerParameterIiv")                            as proc_glSamplerParameterIiv;
    glPointParameterfv                                            = getProcAddress("glPointParameterfv")                               as proc_glPointParameterfv;
    glGetShaderInfoLog                                            = getProcAddress("glGetShaderInfoLog")                               as proc_glGetShaderInfoLog;
    glProgramUniformMatrix4x3fv                                   = getProcAddress("glProgramUniformMatrix4x3fv")                      as proc_glProgramUniformMatrix4x3fv;
    glDepthFunc                                                   = getProcAddress("glDepthFunc")                                      as proc_glDepthFunc;
    glVertexAttribI3uiv                                           = getProcAddress("glVertexAttribI3uiv")                              as proc_glVertexAttribI3uiv;
    glStencilOp                                                   = getProcAddress("glStencilOp")                                      as proc_glStencilOp;
    glStencilFunc                                                 = getProcAddress("glStencilFunc")                                    as proc_glStencilFunc;
    glEnableVertexAttribArray                                     = getProcAddress("glEnableVertexAttribArray")                        as proc_glEnableVertexAttribArray;
    glBlendFunc                                                   = getProcAddress("glBlendFunc")                                      as proc_glBlendFunc;
    glVertexAttrib4Nub                                            = getProcAddress("glVertexAttrib4Nub")                               as proc_glVertexAttrib4Nub;
    glUniform1fv                                                  = getProcAddress("glUniform1fv")                                     as proc_glUniform1fv;
    glPixelStorei                                                 = getProcAddress("glPixelStorei")                                    as proc_glPixelStorei;
    glLineWidth                                                   = getProcAddress("glLineWidth")                                      as proc_glLineWidth;
    glVertexAttribP1ui                                            = getProcAddress("glVertexAttribP1ui")                               as proc_glVertexAttribP1ui;
    glGetUniformiv                                                = getProcAddress("glGetUniformiv")                                   as proc_glGetUniformiv;
    glReadBuffer                                                  = getProcAddress("glReadBuffer")                                     as proc_glReadBuffer;
    glTexImage1D                                                  = getProcAddress("glTexImage1D")                                     as proc_glTexImage1D;
    glClipControl                                                 = getProcAddress("glClipControl")                                    as proc_glClipControl;
    glInvalidateFramebuffer                                       = getProcAddress("glInvalidateFramebuffer")                          as proc_glInvalidateFramebuffer;
    glDeleteProgramPipelines                                      = getProcAddress("glDeleteProgramPipelines")                         as proc_glDeleteProgramPipelines;
    glTexParameterfv                                              = getProcAddress("glTexParameterfv")                                 as proc_glTexParameterfv;
    glVertexAttrib3s                                              = getProcAddress("glVertexAttrib3s")                                 as proc_glVertexAttrib3s;
    glCompressedTexSubImage1D                                     = getProcAddress("glCompressedTexSubImage1D")                        as proc_glCompressedTexSubImage1D;
    glClear                                                       = getProcAddress("glClear")                                          as proc_glClear;
    glTexImage2D                                                  = getProcAddress("glTexImage2D")                                     as proc_glTexImage2D;
    glVertexAttrib4Niv                                            = getProcAddress("glVertexAttrib4Niv")                               as proc_glVertexAttrib4Niv;
    glProgramUniformMatrix3x2dv                                   = getProcAddress("glProgramUniformMatrix3x2dv")                      as proc_glProgramUniformMatrix3x2dv;
    glGetVertexAttribIuiv                                         = getProcAddress("glGetVertexAttribIuiv")                            as proc_glGetVertexAttribIuiv;
    glStencilMaskSeparate                                         = getProcAddress("glStencilMaskSeparate")                            as proc_glStencilMaskSeparate;
    glGenVertexArrays                                             = getProcAddress("glGenVertexArrays")                                as proc_glGenVertexArrays;
    glFrontFace                                                   = getProcAddress("glFrontFace")                                      as proc_glFrontFace;
    glUniformHandleui64ARB                                        = getProcAddress("glUniformHandleui64ARB")                           as proc_glUniformHandleui64ARB;
    glDepthRange                                                  = getProcAddress("glDepthRange")                                     as proc_glDepthRange;
    glVertexArrayAttribBinding                                    = getProcAddress("glVertexArrayAttribBinding")                       as proc_glVertexArrayAttribBinding;
    glVertexAttrib4s                                              = getProcAddress("glVertexAttrib4s")                                 as proc_glVertexAttrib4s;
    glDetachShader                                                = getProcAddress("glDetachShader")                                   as proc_glDetachShader;
    glCullFace                                                    = getProcAddress("glCullFace")                                       as proc_glCullFace;
}



const GL_MAX_TEXTURE_MAX_ANISOTROPY                                         = 0x84FF;
const GL_SPIR_V_EXTENSIONS                                                  = 0x9553;
const GL_TEXTURE_MAX_ANISOTROPY                                             = 0x84FE;
const GL_POLYGON_OFFSET_CLAMP                                               = 0x8E1B;
const GL_TESS_CONTROL_SHADER_PATCHES                                        = 0x82F1;
const GL_VERTICES_SUBMITTED                                                 = 0x82EE;
const GL_PARAMETER_BUFFER                                                   = 0x80EE;
const GL_SPIR_V_BINARY                                                      = 0x9552;
const GL_SHADER_BINARY_FORMAT_SPIR_V                                        = 0x9551;
const GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH                                     = 0x82FC;
const GL_NO_RESET_NOTIFICATION                                              = 0x8261;
const GL_LOSE_CONTEXT_ON_RESET                                              = 0x8252;
const GL_RESET_NOTIFICATION_STRATEGY                                        = 0x8256;
const GL_GUILTY_CONTEXT_RESET                                               = 0x8253;
const GL_QUERY_TARGET                                                       = 0x82EA;
const GL_TEXTURE_TARGET                                                     = 0x1006;
const GL_MAX_CULL_DISTANCES                                                 = 0x82F9;
const GL_QUERY_BY_REGION_NO_WAIT_INVERTED                                   = 0x8E1A;
const GL_NEGATIVE_ONE_TO_ONE                                                = 0x935E;
const GL_MIRROR_CLAMP_TO_EDGE                                               = 0x8743;
const GL_QUERY_BUFFER_BINDING                                               = 0x9193;
const GL_TRANSFORM_FEEDBACK_BUFFER_INDEX                                    = 0x934B;
const GL_LOCATION_COMPONENT                                                 = 0x934A;
const GL_CLIENT_STORAGE_BIT                                                 = 0x0200;
const GL_DYNAMIC_STORAGE_BIT                                                = 0x0100;
const GL_BUFFER_IMMUTABLE_STORAGE                                           = 0x821F;
const GL_MAP_COHERENT_BIT                                                   = 0x0080;
const GL_MAP_PERSISTENT_BIT                                                 = 0x0040;
const GL_TEXTURE_BUFFER_BINDING                                             = 0x8C2A;
const GL_QUERY_BUFFER                                                       = 0x9192;
const GL_VERTEX_BINDING_STRIDE                                              = 0x82D8;
const GL_VERTEX_ATTRIB_RELATIVE_OFFSET                                      = 0x82D5;
const GL_VERTEX_ATTRIB_BINDING                                              = 0x82D4;
const GL_TEXTURE_VIEW_MIN_LAYER                                             = 0x82DD;
const GL_TEXTURE_VIEW_MIN_LEVEL                                             = 0x82DB;
const GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT                                    = 0x919F;
const GL_DEPTH_STENCIL_TEXTURE_MODE                                         = 0x90EA;
const GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES                               = 0x8F39;
const GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS                      = 0x8F39;
const GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS                                 = 0x90DD;
const GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS                                 = 0x90DC;
const GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS                                  = 0x90DB;
const GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS                                 = 0x90DA;
const GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS                             = 0x90D8;
const GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS                                   = 0x90D6;
const GL_SHADER_STORAGE_BUFFER_BINDING                                      = 0x90D3;
const GL_SHADER_STORAGE_BUFFER                                              = 0x90D2;
const GL_IS_PER_PATCH                                                       = 0x92E7;
const GL_REFERENCED_BY_COMPUTE_SHADER                                       = 0x930B;
const GL_REFERENCED_BY_FRAGMENT_SHADER                                      = 0x930A;
const GL_REFERENCED_BY_GEOMETRY_SHADER                                      = 0x9309;
const GL_REFERENCED_BY_TESS_CONTROL_SHADER                                  = 0x9307;
const GL_REFERENCED_BY_VERTEX_SHADER                                        = 0x9306;
const GL_NUM_ACTIVE_VARIABLES                                               = 0x9304;
const GL_BUFFER_DATA_SIZE                                                   = 0x9303;
const GL_ATOMIC_COUNTER_BUFFER_INDEX                                        = 0x9301;
const GL_IS_ROW_MAJOR                                                       = 0x9300;
const GL_BLOCK_INDEX                                                        = 0x92FD;
const GL_ARRAY_SIZE                                                         = 0x92FB;
const GL_TYPE                                                               = 0x92FA;
const GL_VERTEX_BINDING_BUFFER                                              = 0x8F4F;
const GL_MAX_NUM_COMPATIBLE_SUBROUTINES                                     = 0x92F8;
const GL_MAX_NUM_ACTIVE_VARIABLES                                           = 0x92F7;
const GL_MAX_NAME_LENGTH                                                    = 0x92F6;
const GL_ACTIVE_RESOURCES                                                   = 0x92F5;
const GL_FRAGMENT_SUBROUTINE_UNIFORM                                        = 0x92F2;
const GL_COMPUTE_SUBROUTINE                                                 = 0x92ED;
const GL_TESS_EVALUATION_SUBROUTINE                                         = 0x92EA;
const GL_PROGRAM_INPUT                                                      = 0x92E3;
const GL_UNIFORM_BLOCK                                                      = 0x92E2;
const GL_VIEW_CLASS_S3TC_DXT5_RGBA                                          = 0x82CF;
const GL_VIEW_CLASS_S3TC_DXT3_RGBA                                          = 0x82CE;
const GL_VIEW_CLASS_S3TC_DXT1_RGB                                           = 0x82CC;
const GL_VIEW_CLASS_8_BITS                                                  = 0x82CB;
const GL_VIEW_CLASS_24_BITS                                                 = 0x82C9;
const GL_VIEW_CLASS_32_BITS                                                 = 0x82C8;
const GL_VIEW_CLASS_64_BITS                                                 = 0x82C6;
const GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED                                 = 0x82F3;
const GL_VIEW_CLASS_128_BITS                                                = 0x82C4;
const GL_IMAGE_CLASS_2_X_8                                                  = 0x82C0;
const GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED                            = 0x8221;
const GL_IMAGE_CLASS_1_X_16                                                 = 0x82BE;
const GL_TEXTURE_IMMUTABLE_LEVELS                                           = 0x82DF;
const GL_IMAGE_CLASS_2_X_16                                                 = 0x82BD;
const GL_IMAGE_CLASS_1_X_32                                                 = 0x82BB;
const GL_IMAGE_CLASS_2_X_32                                                 = 0x82BA;
const GL_VIEW_CLASS_RGTC1_RED                                               = 0x82D0;
const GL_TEXTURE_VIEW                                                       = 0x82B5;
const GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET                                  = 0x82D9;
const GL_TEXTURE_COMPRESSED_BLOCK_SIZE                                      = 0x82B3;
const GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT                                    = 0x82B2;
const GL_TEXTURE_COMPRESSED_BLOCK_WIDTH                                     = 0x82B1;
const GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE                             = 0x82AF;
const GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE                               = 0x82AE;
const GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST                                = 0x82AC;
const GL_IMAGE_PIXEL_TYPE                                                   = 0x82AA;
const GL_IMAGE_COMPATIBILITY_CLASS                                          = 0x82A8;
const GL_SHADER_IMAGE_ATOMIC                                                = 0x82A6;
const GL_TEXTURE_GATHER_SHADOW                                              = 0x82A3;
const GL_TEXTURE_SHADOW                                                     = 0x82A1;
const GL_FRAGMENT_TEXTURE                                                   = 0x829F;
const GL_GEOMETRY_TEXTURE                                                   = 0x829E;
const GL_TESS_EVALUATION_TEXTURE                                            = 0x829D;
const GL_FILTER                                                             = 0x829A;
const GL_SRGB_READ                                                          = 0x8297;
const GL_AUTO_GENERATE_MIPMAP                                               = 0x8295;
const GL_MANUAL_GENERATE_MIPMAP                                             = 0x8294;
const GL_MIPMAP                                                             = 0x8293;
const GL_GET_TEXTURE_IMAGE_TYPE                                             = 0x8292;
const GL_TEXTURE_IMAGE_FORMAT                                               = 0x828F;
const GL_FRAMEBUFFER_RENDERABLE_LAYERED                                     = 0x828A;
const GL_STENCIL_COMPONENTS                                                 = 0x8285;
const GL_DEPTH_COMPONENTS                                                   = 0x8284;
const GL_MAX_HEIGHT                                                         = 0x827F;
const GL_INTERNALFORMAT_DEPTH_TYPE                                          = 0x827C;
const GL_INTERNALFORMAT_ALPHA_TYPE                                          = 0x827B;
const GL_INTERNALFORMAT_BLUE_TYPE                                           = 0x827A;
const GL_INTERNALFORMAT_SHARED_SIZE                                         = 0x8277;
const GL_INTERNALFORMAT_BLUE_SIZE                                           = 0x8273;
const GL_INTERNALFORMAT_GREEN_SIZE                                          = 0x8272;
const GL_INTERNALFORMAT_RED_SIZE                                            = 0x8271;
const GL_INTERNALFORMAT_PREFERRED                                           = 0x8270;
const GL_INTERNALFORMAT_SUPPORTED                                           = 0x826F;
const GL_MAX_FRAMEBUFFER_HEIGHT                                             = 0x9316;
const GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS                         = 0x9314;
const GL_VERTEX_BINDING_OFFSET                                              = 0x82D7;
const GL_FRAMEBUFFER_DEFAULT_LAYERS                                         = 0x9312;
const GL_IMAGE_CLASS_4_X_32                                                 = 0x82B9;
const GL_FRAMEBUFFER_DEFAULT_WIDTH                                          = 0x9310;
const GL_MAX_LABEL_LENGTH                                                   = 0x82E8;
const GL_SAMPLER                                                            = 0x82E6;
const GL_CONTEXT_RELEASE_BEHAVIOR                                           = 0x82FB;
const GL_QUERY                                                              = 0x82E3;
const GL_VERTEX_ARRAY                                                       = 0x8074;
const GL_PROGRAM                                                            = 0x82E2;
const GL_SHADER                                                             = 0x82E1;
const GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES                               = 0x82FA;
const GL_BUFFER                                                             = 0x82E0;
const GL_DEBUG_GROUP_STACK_DEPTH                                            = 0x826D;
const GL_MAX_DEBUG_LOGGED_MESSAGES                                          = 0x9144;
const GL_MAX_DEBUG_MESSAGE_LENGTH                                           = 0x9143;
const GL_DEBUG_TYPE_OTHER                                                   = 0x8251;
const GL_DEBUG_TYPE_PERFORMANCE                                             = 0x8250;
const GL_DEBUG_TYPE_PORTABILITY                                             = 0x824F;
const GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR                                      = 0x824E;
const GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR                                     = 0x824D;
const GL_DEBUG_TYPE_ERROR                                                   = 0x824C;
const GL_QUERY_BUFFER_BARRIER_BIT                                           = 0x00008000;
const GL_DEBUG_SOURCE_THIRD_PARTY                                           = 0x8249;
const GL_DEBUG_SOURCE_SHADER_COMPILER                                       = 0x8248;
const GL_DEBUG_SOURCE_API                                                   = 0x8246;
const GL_DEBUG_CALLBACK_FUNCTION                                            = 0x8244;
const GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH                                   = 0x8243;
const GL_DISPATCH_INDIRECT_BUFFER_BINDING                                   = 0x90EF;
const GL_DISPATCH_INDIRECT_BUFFER                                           = 0x90EE;
const GL_MAX_COMPUTE_WORK_GROUP_SIZE                                        = 0x91BF;
const GL_MAX_COMPUTE_WORK_GROUP_COUNT                                       = 0x91BE;
const GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS                                 = 0x8264;
const GL_MAX_COMPUTE_UNIFORM_BLOCKS                                         = 0x91BB;
const GL_COMPUTE_SHADER                                                     = 0x91B9;
const GL_MAX_ELEMENT_INDEX                                                  = 0x8D6B;
const GL_MAX_UNIFORM_LOCATIONS                                              = 0x826E;
const GL_ANY_SAMPLES_PASSED_CONSERVATIVE                                    = 0x8D6A;
const GL_COMPRESSED_SIGNED_RG11_EAC                                         = 0x9273;
const GL_COMPRESSED_RG11_EAC                                                = 0x9272;
const GL_COMPRESSED_RGBA8_ETC2_EAC                                          = 0x9278;
const GL_VIEW_CLASS_48_BITS                                                 = 0x82C7;
const GL_NUM_SHADING_LANGUAGE_VERSIONS                                      = 0x82E9;
const GL_MAX_GEOMETRY_IMAGE_UNIFORMS                                        = 0x90CD;
const GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS                                    = 0x90CB;
const GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY                                  = 0x906A;
const GL_UNSIGNED_INT_IMAGE_2D_ARRAY                                        = 0x9069;
const GL_CLEAR_TEXTURE                                                      = 0x9365;
const GL_UNSIGNED_INT_IMAGE_2D_RECT                                         = 0x9065;
const GL_UNSIGNED_INT_IMAGE_2D                                              = 0x9063;
const GL_UNSIGNED_INT_IMAGE_1D                                              = 0x9062;
const GL_INNOCENT_CONTEXT_RESET                                             = 0x8254;
const GL_INT_IMAGE_2D_MULTISAMPLE                                           = 0x9060;
const GL_INT_IMAGE_2D_ARRAY                                                 = 0x905E;
const GL_TEXTURE_IMMUTABLE_FORMAT                                           = 0x912F;
const GL_INT_IMAGE_2D_RECT                                                  = 0x905A;
const GL_INT_IMAGE_3D                                                       = 0x9059;
const GL_INT_IMAGE_2D                                                       = 0x9058;
const GL_INT_IMAGE_1D                                                       = 0x9057;
const GL_MAX_COMPUTE_UNIFORM_COMPONENTS                                     = 0x8263;
const GL_IMAGE_2D_MULTISAMPLE_ARRAY                                         = 0x9056;
const GL_IMAGE_2D_MULTISAMPLE                                               = 0x9055;
const GL_IMAGE_CUBE_MAP_ARRAY                                               = 0x9054;
const GL_IMAGE_2D_ARRAY                                                     = 0x9053;
const GL_IMAGE_1D_ARRAY                                                     = 0x9052;
const GL_IMAGE_BUFFER                                                       = 0x9051;
const GL_REFERENCED_BY_TESS_EVALUATION_SHADER                               = 0x9308;
const GL_IMAGE_CUBE                                                         = 0x9050;
const GL_IMAGE_1D                                                           = 0x904C;
const GL_IMAGE_BINDING_LAYERED                                              = 0x8F3C;
const GL_FRAGMENT_SHADER_INVOCATIONS                                        = 0x82F4;
const GL_IMAGE_BINDING_LEVEL                                                = 0x8F3B;
const GL_ATOMIC_COUNTER_BARRIER_BIT                                         = 0x00001000;
const GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW                                 = 0x82ED;
const GL_TRANSFORM_FEEDBACK_BARRIER_BIT                                     = 0x00000800;
const GL_TEXTURE_UPDATE_BARRIER_BIT                                         = 0x00000100;
const GL_INT_IMAGE_CUBE                                                     = 0x905B;
const GL_COMMAND_BARRIER_BIT                                                = 0x00000040;
const GL_COLOR_COMPONENTS                                                   = 0x8283;
const GL_TEXTURE_FETCH_BARRIER_BIT                                          = 0x00000008;
const GL_IMAGE_CLASS_4_X_16                                                 = 0x82BC;
const GL_ELEMENT_ARRAY_BARRIER_BIT                                          = 0x00000002;
const GL_PROGRAM_PIPELINE                                                   = 0x82E4;
const GL_UNSIGNED_INT_ATOMIC_COUNTER                                        = 0x92DB;
const GL_ACTIVE_ATOMIC_COUNTER_BUFFERS                                      = 0x92D9;
const GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS                                 = 0x92DC;
const GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE                                     = 0x92D8;
const GL_MAX_FRAGMENT_ATOMIC_COUNTERS                                       = 0x92D6;
const GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS                                = 0x92D4;
const GL_MAX_VERTEX_ATOMIC_COUNTERS                                         = 0x92D2;
const GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS                                = 0x92D1;
const GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS                                = 0x92D0;
const GL_TOP_LEVEL_ARRAY_SIZE                                               = 0x930C;
const GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS                                = 0x92CF;
const GL_DEBUG_SEVERITY_HIGH                                                = 0x9146;
const GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS                            = 0x92CD;
const GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS                                  = 0x92CC;
const GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER                = 0x92CB;
const GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER                = 0x92CA;
const GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE                                  = 0x906B;
const GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER         = 0x92C9;
const GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES                = 0x92C6;
const GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE                                    = 0x92C4;
const GL_ATOMIC_COUNTER_BUFFER_START                                        = 0x92C2;
const GL_ATOMIC_COUNTER_BUFFER_BINDING                                      = 0x92C1;
const GL_ATOMIC_COUNTER_BUFFER                                              = 0x92C0;
const GL_PACK_COMPRESSED_BLOCK_HEIGHT                                       = 0x912C;
const GL_UNPACK_COMPRESSED_BLOCK_SIZE                                       = 0x912A;
const GL_UNPACK_COMPRESSED_BLOCK_DEPTH                                      = 0x9129;
const GL_TRANSFORM_FEEDBACK_ACTIVE                                          = 0x8E24;
const GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE                                   = 0x8E24;
const GL_SHADER_IMAGE_STORE                                                 = 0x82A5;
const GL_COPY_WRITE_BUFFER_BINDING                                          = 0x8F37;
const GL_COPY_WRITE_BUFFER                                                  = 0x8F37;
const GL_IMAGE_2D_RECT                                                      = 0x904F;
const GL_COPY_READ_BUFFER_BINDING                                           = 0x8F36;
const GL_COPY_READ_BUFFER                                                   = 0x8F36;
const GL_VIEWPORT_INDEX_PROVOKING_VERTEX                                    = 0x825F;
const GL_LAYER_PROVOKING_VERTEX                                             = 0x825E;
const GL_VIEWPORT_BOUNDS_RANGE                                              = 0x825D;
const GL_VIEWPORT_SUBPIXEL_BITS                                             = 0x825C;
const GL_MAX_VIEWPORTS                                                      = 0x825B;
const GL_PROGRAM_PIPELINE_BINDING                                           = 0x825A;
const GL_ACTIVE_PROGRAM                                                     = 0x8259;
const GL_GEOMETRY_SUBROUTINE_UNIFORM                                        = 0x92F1;
const GL_ALL_SHADER_BITS                                                    = 0xFFFFFFFF;
const GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS                                   = 0x92D3;
const GL_UNPACK_COMPRESSED_BLOCK_HEIGHT                                     = 0x9128;
const GL_GEOMETRY_SHADER_BIT                                                = 0x00000004;
const GL_VERTEX_SHADER_BIT                                                  = 0x00000001;
const GL_DEBUG_OUTPUT_SYNCHRONOUS                                           = 0x8242;
const GL_PROGRAM_BINARY_FORMATS                                             = 0x87FF;
const GL_NUM_PROGRAM_BINARY_FORMATS                                         = 0x87FE;
const GL_RGB565                                                             = 0x8D62;
const GL_COMPRESSED_RGBA_BPTC_UNORM                                         = 0x8E8C;
const GL_MAX_FRAGMENT_UNIFORM_VECTORS                                       = 0x8DFD;
const GL_MAX_VERTEX_UNIFORM_VECTORS                                         = 0x8DFB;
const GL_BUFFER_STORAGE_FLAGS                                               = 0x8220;
const GL_NUM_SHADER_BINARY_FORMATS                                          = 0x8DF9;
const GL_SHADER_BINARY_FORMATS                                              = 0x8DF8;
const GL_HIGH_INT                                                           = 0x8DF5;
const GL_HIGH_FLOAT                                                         = 0x8DF2;
const GL_TEXTURE_VIEW_NUM_LAYERS                                            = 0x82DE;
const GL_IMPLEMENTATION_COLOR_READ_TYPE                                     = 0x8B9A;
const GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE                                   = 0x8E24;
const GL_VIEW_CLASS_16_BITS                                                 = 0x82CA;
const GL_TRANSFORM_FEEDBACK                                                 = 0x8E22;
const GL_TESS_EVALUATION_SHADER                                             = 0x8E87;
const GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER                 = 0x84F1;
const GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER                    = 0x84F0;
const GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS                       = 0x8E1E;
const GL_COMPRESSED_RGB8_ETC2                                               = 0x9274;
const GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS                               = 0x886D;
const GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS                                 = 0x8E8A;
const GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS                                    = 0x8E89;
const GL_TRANSFORM_FEEDBACK_PAUSED                                          = 0x8E23;
const GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED                                   = 0x8E23;
const GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS                                 = 0x8E83;
const GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS                               = 0x8E81;
const GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS                             = 0x8E80;
const GL_MAX_TESS_GEN_LEVEL                                                 = 0x8E7E;
const GL_FRACTIONAL_EVEN                                                    = 0x8E7C;
const GL_FRACTIONAL_ODD                                                     = 0x8E7B;
const GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST                              = 0x82AD;
const GL_QUADS                                                              = 0x0007;
const GL_ISOLINES                                                           = 0x8E7A;
const GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS                          = 0x90D9;
const GL_TESS_GEN_VERTEX_ORDER                                              = 0x8E78;
const GL_TESS_GEN_SPACING                                                   = 0x8E77;
const GL_TESS_GEN_MODE                                                      = 0x8E76;
const GL_TESS_CONTROL_OUTPUT_VERTICES                                       = 0x8E75;
const GL_MAX_COMPUTE_IMAGE_UNIFORMS                                         = 0x91BD;
const GL_PATCH_DEFAULT_OUTER_LEVEL                                          = 0x8E74;
const GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS                                = 0x8E7F;
const GL_PATCH_DEFAULT_INNER_LEVEL                                          = 0x8E73;
const GL_MAX_IMAGE_UNITS                                                    = 0x8F38;
const GL_PATCHES                                                            = 0x000E;
const GL_COMPATIBLE_SUBROUTINES                                             = 0x8E4B;
const GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS                              = 0x8E86;
const GL_NUM_COMPATIBLE_SUBROUTINES                                         = 0x8E4A;
const GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS                                   = 0x8DE8;
const GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH                               = 0x8E49;
const GL_ACTIVE_SUBROUTINE_MAX_LENGTH                                       = 0x8E48;
const GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS                                = 0x8E47;
const GL_ACTIVE_SUBROUTINE_UNIFORMS                                         = 0x8DE6;
const GL_ACTIVE_SUBROUTINES                                                 = 0x8DE5;
const GL_MAX_VERTEX_ATTRIB_BINDINGS                                         = 0x82DA;
const GL_DOUBLE_MAT3x4                                                      = 0x8F4C;
const GL_DOUBLE_MAT3x2                                                      = 0x8F4B;
const GL_DOUBLE_MAT2x3                                                      = 0x8F49;
const GL_DOUBLE_MAT4                                                        = 0x8F48;
const GL_DOUBLE_MAT3                                                        = 0x8F47;
const GL_DOUBLE_MAT2                                                        = 0x8F46;
const GL_DOUBLE_VEC4                                                        = 0x8FFE;
const GL_DOUBLE_VEC3                                                        = 0x8FFD;
const GL_FRAGMENT_INTERPOLATION_OFFSET_BITS                                 = 0x8E5D;
const GL_DEBUG_SOURCE_WINDOW_SYSTEM                                         = 0x8247;
const GL_MAX_FRAGMENT_INTERPOLATION_OFFSET                                  = 0x8E5C;
const GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT                             = 0x90DF;
const GL_VIEW_CLASS_BPTC_FLOAT                                              = 0x82D3;
const GL_MEDIUM_INT                                                         = 0x8DF4;
const GL_MIN_FRAGMENT_INTERPOLATION_OFFSET                                  = 0x8E5B;
const GL_MAX_DEBUG_GROUP_STACK_DEPTH                                        = 0x826C;
const GL_MAX_GEOMETRY_SHADER_INVOCATIONS                                    = 0x8E5A;
const GL_VERTEX_SUBROUTINE                                                  = 0x92E8;
const GL_GEOMETRY_SHADER_INVOCATIONS                                        = 0x887F;
const GL_DRAW_INDIRECT_BUFFER_BINDING                                       = 0x8F43;
const GL_DRAW_INDIRECT_BUFFER                                               = 0x8F3F;
const GL_TESS_GEN_POINT_MODE                                                = 0x8E79;
const GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW                                      = 0x900D;
const GL_SAMPLER_CUBE_MAP_ARRAY                                             = 0x900C;
const GL_PROXY_TEXTURE_CUBE_MAP_ARRAY                                       = 0x900B;
const GL_VIEW_COMPATIBILITY_CLASS                                           = 0x82B6;
const GL_TEXTURE_CUBE_MAP_ARRAY                                             = 0x9009;
const GL_IMAGE_CLASS_10_10_10_2                                             = 0x82C3;
const GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET                                  = 0x8E5E;
const GL_MIN_SAMPLE_SHADING_VALUE                                           = 0x8C37;
const GL_SAMPLE_SHADING                                                     = 0x8C36;
const GL_INT_2_10_10_10_REV                                                 = 0x8D9F;
const GL_TEXTURE_SWIZZLE_A                                                  = 0x8E45;
const GL_TEXTURE_SWIZZLE_B                                                  = 0x8E44;
const GL_DEBUG_TYPE_POP_GROUP                                               = 0x826A;
const GL_TEXTURE_SWIZZLE_G                                                  = 0x8E43;
const GL_RGB10_A2UI                                                         = 0x906F;
const GL_MAX_DUAL_SOURCE_DRAW_BUFFERS                                       = 0x88FC;
const GL_ONE_MINUS_SRC1_ALPHA                                               = 0x88FB;
const GL_TOP_LEVEL_ARRAY_STRIDE                                             = 0x930D;
const GL_ONE_MINUS_SRC1_COLOR                                               = 0x88FA;
const GL_SRC1_COLOR                                                         = 0x88F9;
const GL_INT_IMAGE_BUFFER                                                   = 0x905C;
const GL_TEXTURE_BINDING_CUBE_MAP_ARRAY                                     = 0x900A;
const GL_MAX_INTEGER_SAMPLES                                                = 0x9110;
const GL_MAX_COLOR_TEXTURE_SAMPLES                                          = 0x910E;
const GL_SAMPLER_2D_MULTISAMPLE_ARRAY                                       = 0x910B;
const GL_NUM_SPIR_V_EXTENSIONS                                              = 0x9554;
const GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT                                 = 0x8E8F;
const GL_MAX_VERTEX_IMAGE_UNIFORMS                                          = 0x90CA;
const GL_SAMPLER_2D_MULTISAMPLE                                             = 0x9108;
const GL_TEXTURE_FIXED_SAMPLE_LOCATIONS                                     = 0x9107;
const GL_TEXTURE_SAMPLES                                                    = 0x9106;
const GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY                                 = 0x9103;
const GL_SAMPLE_POSITION                                                    = 0x8E50;
const GL_SYNC_FLUSH_COMMANDS_BIT                                            = 0x00000001;
const GL_TIMEOUT_IGNORED                                                    = 0xFFFFFFFFFFFFFFFF;
const GL_WAIT_FAILED                                                        = 0x911D;
const GL_NAME_LENGTH                                                        = 0x92F9;
const GL_CONDITION_SATISFIED                                                = 0x911C;
const GL_TIMEOUT_EXPIRED                                                    = 0x911B;
const GL_SYNC_FENCE                                                         = 0x9116;
const GL_SYNC_STATUS                                                        = 0x9114;
const GL_DEBUG_TYPE_PUSH_GROUP                                              = 0x8269;
const GL_SYNC_CONDITION                                                     = 0x9113;
const GL_OBJECT_TYPE                                                        = 0x9112;
const GL_MAX_SERVER_WAIT_TIMEOUT                                            = 0x9111;
const GL_TEXTURE_CUBE_MAP_SEAMLESS                                          = 0x884F;
const GL_PROVOKING_VERTEX                                                   = 0x8E4F;
const GL_LAST_VERTEX_CONVENTION                                             = 0x8E4E;
const GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE                                = 0x910A;
const GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION                           = 0x8E4C;
const GL_MAX_VERTEX_OUTPUT_COMPONENTS                                       = 0x9122;
const GL_COMPRESSED_R11_EAC                                                 = 0x9270;
const GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS                               = 0x8DE1;
const GL_GEOMETRY_OUTPUT_TYPE                                               = 0x8918;
const GL_GEOMETRY_SHADER                                                    = 0x8DD9;
const GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS                               = 0x8DA8;
const GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER            = 0x92C8;
const GL_FRAMEBUFFER_ATTACHMENT_LAYERED                                     = 0x8DA7;
const GL_TRIANGLE_STRIP_ADJACENCY                                           = 0x000D;
const GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER                  = 0x92C7;
const GL_TRIANGLES_ADJACENCY                                                = 0x000C;
const GL_CONTEXT_COMPATIBILITY_PROFILE_BIT                                  = 0x00000002;
const GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER                        = 0x8A45;
const GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER                          = 0x8A44;
const GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS                                      = 0x8A42;
const GL_UNIFORM_BLOCK_NAME_LENGTH                                          = 0x8A41;
const GL_UNIFORM_IS_ROW_MAJOR                                               = 0x8A3E;
const GL_CLIPPING_OUTPUT_PRIMITIVES                                         = 0x82F7;
const GL_UNIFORM_MATRIX_STRIDE                                              = 0x8A3D;
const GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS                    = 0x8E1F;
const GL_UNIFORM_SIZE                                                       = 0x8A38;
const GL_ACTIVE_UNIFORM_BLOCKS                                              = 0x8A36;
const GL_ZERO_TO_ONE                                                        = 0x935F;
const GL_DEBUG_SEVERITY_MEDIUM                                              = 0x9147;
const GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH                               = 0x8A35;
const GL_OFFSET                                                             = 0x92FC;
const GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT                                    = 0x8A34;
const GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS                       = 0x92C5;
const GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS                           = 0x8A32;
const GL_MAX_TESS_PATCH_COMPONENTS                                          = 0x8E84;
const GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS                             = 0x8A31;
const GL_COPY_WRITE_BUFFER                                                  = 0x8F37;
const GL_PRIMITIVE_RESTART_INDEX                                            = 0x8F9E;
const GL_RGBA16_SNORM                                                       = 0x8F9B;
const GL_RG16_SNORM                                                         = 0x8F99;
const GL_R16_SNORM                                                          = 0x8F98;
const GL_DEBUG_SEVERITY_NOTIFICATION                                        = 0x826B;
const GL_PROXY_TEXTURE_RECTANGLE                                            = 0x84F7;
const GL_TEXTURE_RECTANGLE                                                  = 0x84F5;
const GL_UNSIGNED_INT_SAMPLER_BUFFER                                        = 0x8DD8;
const GL_SAMPLER_2D_RECT_SHADOW                                             = 0x8B64;
const GL_RG16I                                                              = 0x8239;
const GL_FRAGMENT_SUBROUTINE                                                = 0x92EC;
const GL_RG8UI                                                              = 0x8238;
const GL_R32UI                                                              = 0x8236;
const GL_R32I                                                               = 0x8235;
const GL_R16I                                                               = 0x8233;
const GL_R8I                                                                = 0x8231;
const GL_IMAGE_FORMAT_COMPATIBILITY_TYPE                                    = 0x90C7;
const GL_RG32F                                                              = 0x8230;
const GL_SHADER_STORAGE_BLOCK                                               = 0x92E6;
const GL_RG16F                                                              = 0x822F;
const GL_R32F                                                               = 0x822E;
const GL_RG16                                                               = 0x822C;
const GL_R16                                                                = 0x822A;
const GL_RG_INTEGER                                                         = 0x8228;
const GL_RGB16_SNORM                                                        = 0x8F9A;
const GL_COMPRESSED_SIGNED_RED_RGTC1                                        = 0x8DBC;
const GL_MAP_INVALIDATE_RANGE_BIT                                           = 0x0004;
const GL_MAP_WRITE_BIT                                                      = 0x0002;
const GL_PROGRAM_POINT_SIZE                                                 = 0x8642;
const GL_VERTEX_PROGRAM_POINT_SIZE                                          = 0x8642;
const GL_MAP_READ_BIT                                                       = 0x0001;
const GL_FRAMEBUFFER_SRGB                                                   = 0x8DB9;
const GL_MAX_SAMPLES                                                        = 0x8D57;
const GL_COLOR_ENCODING                                                     = 0x8296;
const GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE                                 = 0x8D56;
const GL_RENDERBUFFER_STENCIL_SIZE                                          = 0x8D55;
const GL_LOCATION_INDEX                                                     = 0x930F;
const GL_TEXTURE_BUFFER                                                     = 0x8C2A;
const GL_RENDERBUFFER_DEPTH_SIZE                                            = 0x8D54;
const GL_ALREADY_SIGNALED                                                   = 0x911A;
const GL_RENDERBUFFER_BLUE_SIZE                                             = 0x8D52;
const GL_RENDERBUFFER_GREEN_SIZE                                            = 0x8D51;
const GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT                                     = 0x00000004;
const GL_STENCIL_INDEX16                                                    = 0x8D49;
const GL_STENCIL_INDEX4                                                     = 0x8D47;
const GL_RENDERBUFFER_HEIGHT                                                = 0x8D43;
const GL_TESS_CONTROL_SUBROUTINE_UNIFORM                                    = 0x92EF;
const GL_STENCIL_ATTACHMENT                                                 = 0x8D20;
const GL_MAP_UNSYNCHRONIZED_BIT                                             = 0x0020;
const GL_DEPTH_ATTACHMENT                                                   = 0x8D00;
const GL_COLOR_ATTACHMENT31                                                 = 0x8CFF;
const GL_COLOR_ATTACHMENT29                                                 = 0x8CFD;
const GL_MAX_COMBINED_DIMENSIONS                                            = 0x8282;
const GL_COLOR_ATTACHMENT27                                                 = 0x8CFB;
const GL_COLOR_ATTACHMENT26                                                 = 0x8CFA;
const GL_COLOR_ATTACHMENT23                                                 = 0x8CF7;
const GL_SHADER_IMAGE_ACCESS_BARRIER_BIT                                    = 0x00000020;
const GL_COLOR_ATTACHMENT19                                                 = 0x8CF3;
const GL_COLOR_ATTACHMENT18                                                 = 0x8CF2;
const GL_DEBUG_SEVERITY_LOW                                                 = 0x9148;
const GL_COLOR_ATTACHMENT17                                                 = 0x8CF1;
const GL_COLOR_ATTACHMENT15                                                 = 0x8CEF;
const GL_COLOR_ATTACHMENT14                                                 = 0x8CEE;
const GL_COLOR_ATTACHMENT12                                                 = 0x8CEC;
const GL_COLOR_ATTACHMENT11                                                 = 0x8CEB;
const GL_VERTEX_SHADER_INVOCATIONS                                          = 0x82F0;
const GL_COLOR_ATTACHMENT10                                                 = 0x8CEA;
const GL_DEBUG_OUTPUT                                                       = 0x92E0;
const GL_COLOR_ATTACHMENT9                                                  = 0x8CE9;
const GL_COLOR_ATTACHMENT8                                                  = 0x8CE8;
const GL_VERTEX_ATTRIB_ARRAY_LONG                                           = 0x874E;
const GL_UNSIGNED_INT_IMAGE_1D_ARRAY                                        = 0x9068;
const GL_COLOR_ATTACHMENT7                                                  = 0x8CE7;
const GL_COLOR_ATTACHMENT6                                                  = 0x8CE6;
const GL_COLOR_ATTACHMENT4                                                  = 0x8CE4;
const GL_RGBA8_SNORM                                                        = 0x8F97;
const GL_COLOR_ATTACHMENT2                                                  = 0x8CE2;
const GL_COLOR_ATTACHMENT0                                                  = 0x8CE0;
const GL_R16F                                                               = 0x822D;
const GL_COLOR_ATTACHMENT30                                                 = 0x8CFE;
const GL_MAX_COLOR_ATTACHMENTS                                              = 0x8CDF;
const GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER                                 = 0x8CDC;
const GL_COLOR_ATTACHMENT22                                                 = 0x8CF6;
const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER                               = 0x8CD4;
const GL_MAX_SAMPLE_MASK_WORDS                                              = 0x8E59;
const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE                       = 0x8CD3;
const GL_CLIP_DEPTH_MODE                                                    = 0x935D;
const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL                               = 0x8CD2;
const GL_RENDERBUFFER_SAMPLES                                               = 0x8CAB;
const GL_FRAMEBUFFER_BLEND                                                  = 0x828B;
const GL_READ_FRAMEBUFFER_BINDING                                           = 0x8CAA;
const GL_DRAW_FRAMEBUFFER                                                   = 0x8CA9;
const GL_INT_IMAGE_1D_ARRAY                                                 = 0x905D;
const GL_RENDERBUFFER_BINDING                                               = 0x8CA7;
const GL_DRAW_FRAMEBUFFER_BINDING                                           = 0x8CA6;
const GL_UNSIGNED_NORMALIZED                                                = 0x8C17;
const GL_TESS_EVALUATION_SHADER_INVOCATIONS                                 = 0x82F2;
const GL_PROGRAM_OUTPUT                                                     = 0x92E4;
const GL_TEXTURE_ALPHA_TYPE                                                 = 0x8C13;
const GL_RG8I                                                               = 0x8237;
const GL_TEXTURE_BLUE_TYPE                                                  = 0x8C12;
const GL_COLOR_ATTACHMENT16                                                 = 0x8CF0;
const GL_TEXTURE_GREEN_TYPE                                                 = 0x8C11;
const GL_TEXTURE_STENCIL_SIZE                                               = 0x88F1;
const GL_MAX_SHADER_STORAGE_BLOCK_SIZE                                      = 0x90DE;
const GL_COMPRESSED_SRGB8_ETC2                                              = 0x9275;
const GL_MEDIUM_FLOAT                                                       = 0x8DF1;
const GL_UNSIGNED_INT_24_8                                                  = 0x84FA;
const GL_DEPTH_STENCIL                                                      = 0x84F9;
const GL_MAX_RENDERBUFFER_SIZE                                              = 0x84E8;
const GL_FRAMEBUFFER_UNDEFINED                                              = 0x8219;
const GL_FRAMEBUFFER_DEFAULT                                                = 0x8218;
const GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE                                  = 0x8216;
const GL_GEOMETRY_SUBROUTINE                                                = 0x92EB;
const GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY                                = 0x900F;
const GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE                                  = 0x8215;
const GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE                                  = 0x8213;
const GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE                                    = 0x8212;
const GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING                              = 0x8210;
const GL_DEPTH32F_STENCIL8                                                  = 0x8CAD;
const GL_DEPTH_COMPONENT32F                                                 = 0x8CAC;
const GL_FRAGMENT_SHADER_BIT                                                = 0x00000002;
const GL_BUFFER_MAP_OFFSET                                                  = 0x9121;
const GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC                                   = 0x9279;
const GL_UNDEFINED_VERTEX                                                   = 0x8260;
const GL_BUFFER_MAP_LENGTH                                                  = 0x9120;
const GL_QUERY_BY_REGION_NO_WAIT                                            = 0x8E16;
const GL_QUERY_NO_WAIT                                                      = 0x8E14;
const GL_QUERY_WAIT                                                         = 0x8E13;
const GL_TEXTURE_2D_MULTISAMPLE_ARRAY                                       = 0x9102;
const GL_UNSIGNED_INT_SAMPLER_1D_ARRAY                                      = 0x8DD6;
const GL_MAX_RECTANGLE_TEXTURE_SIZE                                         = 0x84F8;
const GL_INT_SAMPLER_1D_ARRAY                                               = 0x8DCE;
const GL_UNSIGNED_INT_IMAGE_CUBE                                            = 0x9066;
const GL_INT_SAMPLER_CUBE                                                   = 0x8DCC;
const GL_INT_SAMPLER_3D                                                     = 0x8DCB;
const GL_UNSIGNED_INT_VEC4                                                  = 0x8DC8;
const GL_UNSIGNED_INT_VEC2                                                  = 0x8DC6;
const GL_SAMPLER_2D_ARRAY                                                   = 0x8DC1;
const GL_BGR_INTEGER                                                        = 0x8D9A;
const GL_QUERY_BY_REGION_WAIT_INVERTED                                      = 0x8E19;
const GL_BLUE_INTEGER                                                       = 0x8D96;
const GL_GREEN_INTEGER                                                      = 0x8D95;
const GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY                               = 0x9105;
const GL_RED_INTEGER                                                        = 0x8D94;
const GL_RGBA8I                                                             = 0x8D8E;
const GL_DEBUG_SOURCE_OTHER                                                 = 0x824B;
const GL_RGBA16I                                                            = 0x8D88;
const GL_VERTEX_TEXTURE                                                     = 0x829B;
const GL_RGB32I                                                             = 0x8D83;
const GL_RGBA32I                                                            = 0x8D82;
const GL_MAX_TESS_CONTROL_INPUT_COMPONENTS                                  = 0x886C;
const GL_RGB16UI                                                            = 0x8D77;
const GL_INT_IMAGE_CUBE_MAP_ARRAY                                           = 0x905F;
const GL_RGBA16UI                                                           = 0x8D76;
const GL_RGB32UI                                                            = 0x8D71;
const GL_RGBA32UI                                                           = 0x8D70;
const GL_TRANSFORM_FEEDBACK_BUFFER_BINDING                                  = 0x8C8F;
const GL_TRANSFORM_FEEDBACK_BUFFER                                          = 0x8C8E;
const GL_VIEW_CLASS_96_BITS                                                 = 0x82C5;
const GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS                      = 0x8C8A;
const GL_RASTERIZER_DISCARD                                                 = 0x8C89;
const GL_UNSIGNED_INT64_ARB                                                 = 0x140F;
const GL_UNIFORM_BARRIER_BIT                                                = 0x00000004;
const GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN                              = 0x8C88;
const GL_PRIMITIVES_GENERATED                                               = 0x8C87;
const GL_TRANSFORM_FEEDBACK_BUFFER_SIZE                                     = 0x8C85;
const GL_VERTEX_BINDING_DIVISOR                                             = 0x82D6;
const GL_TRANSFORM_FEEDBACK_BUFFER_START                                    = 0x8C84;
const GL_TRANSFORM_FEEDBACK_VARYINGS                                        = 0x8C83;
const GL_SAMPLER_BINDING                                                    = 0x8919;
const GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS                         = 0x8C80;
const GL_TRANSFORM_FEEDBACK_BUFFER_MODE                                     = 0x8C7F;
const GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH                              = 0x8C76;
const GL_UNSIGNED_INT_SAMPLER_2D_RECT                                       = 0x8DD5;
const GL_UNSIGNED_INT_5_9_9_9_REV                                           = 0x8C3E;
const GL_RGB9_E5                                                            = 0x8C3D;
const GL_UNSIGNED_INT_10F_11F_11F_REV                                       = 0x8C3B;
const GL_R11F_G11F_B10F                                                     = 0x8C3A;
const GL_TESS_CONTROL_TEXTURE                                               = 0x829C;
const GL_TEXTURE_BINDING_2D_ARRAY                                           = 0x8C1D;
const GL_READ_PIXELS_TYPE                                                   = 0x828E;
const GL_TEXTURE_BINDING_1D_ARRAY                                           = 0x8C1C;
const GL_PROXY_TEXTURE_1D_ARRAY                                             = 0x8C19;
const GL_TEXTURE_1D_ARRAY                                                   = 0x8C18;
const GL_COMPUTE_SUBROUTINE_UNIFORM                                         = 0x92F3;
const GL_TEXTURE_2D_MULTISAMPLE                                             = 0x9100;
const GL_MAX_VARYING_COMPONENTS                                             = 0x8B4B;
const MAX_VARYING_FLOATS                                                    = 0x8B4B;
const GL_CLAMP_READ_COLOR                                                   = 0x891C;
const GL_IMAGE_BINDING_LAYER                                                = 0x8F3D;
const GL_VERTEX_ATTRIB_ARRAY_DIVISOR                                        = 0x88FE;
const GL_VERTEX_ATTRIB_ARRAY_INTEGER                                        = 0x88FD;
const GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT                                = 0x00000001;
const GL_CONTEXT_FLAGS                                                      = 0x821E;
const GL_FRAMEBUFFER_COMPLETE                                               = 0x8CD5;
const GL_NUM_EXTENSIONS                                                     = 0x821D;
const GL_CLIP_DISTANCE6                                                     = 0x3006;
const GL_TEXTURE_BUFFER_SIZE                                                = 0x919E;
const GL_CLIP_DISTANCE4                                                     = 0x3004;
const GL_CLIP_PLANE4                                                        = 0x3004;
const GL_INT_SAMPLER_BUFFER                                                 = 0x8DD0;
const GL_SYNC_GPU_COMMANDS_COMPLETE                                         = 0x9117;
const GL_COMPRESSED_SRGB_ALPHA                                              = 0x8C49;
const GL_SRGB8_ALPHA8                                                       = 0x8C43;
const GL_TESS_EVALUATION_SUBROUTINE_UNIFORM                                 = 0x92F0;
const GL_INT_SAMPLER_1D                                                     = 0x8DC9;
const GL_SRGB8                                                              = 0x8C41;
const GL_FLOAT_MAT3x2                                                       = 0x8B67;
const GL_FLOAT_MAT2x4                                                       = 0x8B66;
const GL_PIXEL_UNPACK_BUFFER_BINDING                                        = 0x88EF;
const GL_UNIFORM_ARRAY_STRIDE                                               = 0x8A3C;
const GL_COMPARE_REF_TO_TEXTURE                                             = 0x884E;
const GL_COMPARE_R_TO_TEXTURE                                               = 0x884E;
const GL_PIXEL_UNPACK_BUFFER                                                = 0x88EC;
const GL_FLOAT_MAT4x2                                                       = 0x8B69;
const GL_PIXEL_PACK_BUFFER                                                  = 0x88EB;
const GL_PACK_COMPRESSED_BLOCK_DEPTH                                        = 0x912D;
const GL_STENCIL_BACK_WRITEMASK                                             = 0x8CA5;
const GL_STENCIL_BACK_VALUE_MASK                                            = 0x8CA4;
const GL_STENCIL_BACK_REF                                                   = 0x8CA3;
const GL_UPPER_LEFT                                                         = 0x8CA2;
const GL_COMPRESSED_SRGB                                                    = 0x8C48;
const GL_POINT_SPRITE_COORD_ORIGIN                                          = 0x8CA0;
const GL_FRAGMENT_SHADER_DERIVATIVE_HINT                                    = 0x8B8B;
const GL_DOUBLE_MAT4x2                                                      = 0x8F4D;
const GL_ACTIVE_ATTRIBUTE_MAX_LENGTH                                        = 0x8B8A;
const GL_MAX_GEOMETRY_ATOMIC_COUNTERS                                       = 0x92D5;
const GL_INT_SAMPLER_2D_ARRAY                                               = 0x8DCF;
const GL_FLOAT_MAT2x3                                                       = 0x8B65;
const GL_SHADER_SOURCE_LENGTH                                               = 0x8B88;
const GL_ATTACHED_SHADERS                                                   = 0x8B85;
const GL_COLOR_ATTACHMENT20                                                 = 0x8CF4;
const GL_INFO_LOG_LENGTH                                                    = 0x8B84;
const GL_VALIDATE_STATUS                                                    = 0x8B83;
const GL_DELETE_STATUS                                                      = 0x8B80;
const GL_MAX_VERTEX_ATTRIB_STRIDE                                           = 0x82E5;
const GL_CAVEAT_SUPPORT                                                     = 0x82B8;
const GL_MAX_FRAGMENT_IMAGE_UNIFORMS                                        = 0x90CE;
const GL_ALL_BARRIER_BITS                                                   = 0xFFFFFFFF;
const GL_UNIFORM_BLOCK_BINDING                                              = 0x8A3F;
const GL_SAMPLER_2D_SHADOW                                                  = 0x8B62;
const GL_SAMPLER_2D                                                         = 0x8B5E;
const GL_FLOAT_MAT3                                                         = 0x8B5B;
const GL_BOOL_VEC3                                                          = 0x8B58;
const GL_BOOL                                                               = 0x8B56;
const GL_VERTEX_SUBROUTINE_UNIFORM                                          = 0x92EE;
const GL_INT_VEC4                                                           = 0x8B55;
const GL_INT_VEC2                                                           = 0x8B53;
const GL_FLOAT_VEC3                                                         = 0x8B51;
const GL_PROGRAM_SEPARABLE                                                  = 0x8258;
const GL_FLOAT_MAT2                                                         = 0x8B5A;
const GL_FLOAT_VEC2                                                         = 0x8B50;
const GL_SHADER_TYPE                                                        = 0x8B4F;
const GL_UNSIGNED_INT_IMAGE_3D                                              = 0x9064;
const GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS                                     = 0x8B4C;
const GL_MAX_IMAGE_SAMPLES                                                  = 0x906D;
const GL_MAX_VARYING_FLOATS                                                 = 0x8B4B;
const GL_TEXTURE_SHARED_SIZE                                                = 0x8C3F;
const GL_MAX_FRAGMENT_UNIFORM_COMPONENTS                                    = 0x8B49;
const GL_TEXTURE_IMAGE_TYPE                                                 = 0x8290;
const GL_VERTEX_SHADER                                                      = 0x8B31;
const GL_MAX_TEXTURE_IMAGE_UNITS                                            = 0x8872;
const GL_MAX_VERTEX_ATTRIBS                                                 = 0x8869;
const GL_PIXEL_BUFFER_BARRIER_BIT                                           = 0x00000080;
const GL_MAX_SUBROUTINES                                                    = 0x8DE7;
const GL_BLEND_EQUATION_ALPHA                                               = 0x883D;
const GL_MAX_DEPTH                                                          = 0x8280;
const GL_DRAW_BUFFER15                                                      = 0x8834;
const GL_DRAW_BUFFER12                                                      = 0x8831;
const GL_IMAGE_2D                                                           = 0x904D;
const GL_DRAW_BUFFER10                                                      = 0x882F;
const GL_DRAW_BUFFER8                                                       = 0x882D;
const GL_DRAW_BUFFER7                                                       = 0x882C;
const GL_DRAW_BUFFER5                                                       = 0x882A;
const GL_DRAW_BUFFER2                                                       = 0x8827;
const GL_BUFFER_ACCESS_FLAGS                                                = 0x911F;
const GL_VERTEX_ATTRIB_ARRAY_TYPE                                           = 0x8625;
const GL_MAX_TEXTURE_LOD_BIAS                                               = 0x84FD;
const GL_DRAW_BUFFER9                                                       = 0x882E;
const GL_SRC1_ALPHA                                                         = 0x8589;
const GL_SOURCE1_ALPHA                                                      = 0x8589;
const GL_VERTEX_ARRAY_BINDING                                               = 0x85B5;
const GL_INCR                                                               = 0x1E02;
const GL_DYNAMIC_COPY                                                       = 0x88EA;
const GL_DYNAMIC_DRAW                                                       = 0x88E8;
const GL_MATRIX_STRIDE                                                      = 0x92FF;
const GL_STATIC_READ                                                        = 0x88E5;
const GL_STATIC_DRAW                                                        = 0x88E4;
const GL_UNPACK_LSB_FIRST                                                   = 0x0CF1;
const GL_STREAM_READ                                                        = 0x88E1;
const GL_READ_WRITE                                                         = 0x88BA;
const GL_IMAGE_CLASS_4_X_8                                                  = 0x82BF;
const GL_WRITE_ONLY                                                         = 0x88B9;
const GL_NUM_SAMPLE_COUNTS                                                  = 0x9380;
const GL_SAMPLER_1D_SHADOW                                                  = 0x8B61;
const GL_ELEMENT_ARRAY_BUFFER_BINDING                                       = 0x8895;
const GL_READ_ONLY                                                          = 0x88B8;
const GL_TEXTURE_CUBE_MAP_POSITIVE_Z                                        = 0x8519;
const GL_QUERY_RESULT                                                       = 0x8866;
const GL_CURRENT_QUERY                                                      = 0x8865;
const GL_MAX                                                                = 0x8008;
const GL_MIN                                                                = 0x8007;
const GL_TEXTURE_CUBE_MAP                                                   = 0x8513;
const GL_FUNC_SUBTRACT                                                      = 0x800A;
const GL_FUNC_REVERSE_SUBTRACT                                              = 0x800B;
const GL_CONSTANT_COLOR                                                     = 0x8001;
const GL_SHADER_STORAGE_BARRIER_BIT                                         = 0x00002000;
const GL_FRAMEBUFFER_DEFAULT_SAMPLES                                        = 0x9313;
const GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER                        = 0x8A46;
const GL_MAX_ELEMENTS_INDICES                                               = 0x80E9;
const GL_BLEND_COLOR                                                        = 0x8005;
const GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET                                  = 0x8E5F;
const GL_STENCIL_BACK_FAIL                                                  = 0x8801;
const GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS                                = 0x90C9;
const GL_UNSIGNED_INT_SAMPLER_2D_ARRAY                                      = 0x8DD7;
const GL_TEXTURE3                                                           = 0x84C3;
const GL_TEXTURE_RED_TYPE                                                   = 0x8C10;
const GL_LOW_FLOAT                                                          = 0x8DF0;
const GL_DRAW_BUFFER13                                                      = 0x8832;
const GL_DRAW_BUFFER1                                                       = 0x8826;
const GL_TEXTURE_COMPARE_MODE                                               = 0x884C;
const GL_COLOR_ATTACHMENT21                                                 = 0x8CF5;
const GL_TEXTURE_DEPTH_SIZE                                                 = 0x884A;
const GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS                                 = 0x90EB;
const GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS                            = 0x8E82;
const GL_RGBA2                                                              = 0x8055;
const GL_DECR_WRAP                                                          = 0x8508;
const GL_TEXTURE_VIEW_NUM_LEVELS                                            = 0x82DC;
const GL_MAX_DRAW_BUFFERS                                                   = 0x8824;
const GL_R8                                                                 = 0x8229;
const GL_POINT_FADE_THRESHOLD_SIZE                                          = 0x8128;
const GL_BLEND_DST_ALPHA                                                    = 0x80CA;
const GL_MAX_COMBINED_IMAGE_UNIFORMS                                        = 0x90CF;
const GL_TEXTURE_LOD_BIAS                                                   = 0x8501;
const GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE                              = 0x8211;
const GL_LINEAR_MIPMAP_LINEAR                                               = 0x2703;
const GL_ELEMENT_ARRAY_BUFFER                                               = 0x8893;
const GL_BUFFER_ACCESS                                                      = 0x88BB;
const GL_IMAGE_CLASS_11_11_10                                               = 0x82C2;
const GL_STENCIL_BACK_PASS_DEPTH_FAIL                                       = 0x8802;
const GL_FIRST_VERTEX_CONVENTION                                            = 0x8E4D;
const GL_FIXED_ONLY                                                         = 0x891D;
const GL_SHORT                                                              = 0x1402;
const GL_DEPTH_TEST                                                         = 0x0B71;
const GL_COMPUTE_SHADER_BIT                                                 = 0x00000020;
const GL_DOUBLE_VEC2                                                        = 0x8FFC;
const GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE                                = 0x8217;
const GL_R8UI                                                               = 0x8232;
const GL_CULL_FACE_MODE                                                     = 0x0B45;
const GL_CLAMP_TO_BORDER                                                    = 0x812D;
const GL_TEXTURE_CUBE_MAP_NEGATIVE_Y                                        = 0x8518;
const GL_COMPRESSED_TEXTURE_FORMATS                                         = 0x86A3;
const GL_COMPUTE_TEXTURE                                                    = 0x82A0;
const GL_BUFFER_UPDATE_BARRIER_BIT                                          = 0x00000200;
const GL_NUM_COMPRESSED_TEXTURE_FORMATS                                     = 0x86A2;
const GL_FULL_SUPPORT                                                       = 0x82B7;
const GL_SHADING_LANGUAGE_VERSION                                           = 0x8B8C;
const GL_LINK_STATUS                                                        = 0x8B82;
const GL_TEXTURE_COMPRESSED_IMAGE_SIZE                                      = 0x86A0;
const GL_COMPRESSED_RGBA                                                    = 0x84EE;
const GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE                                   = 0x8214;
const GL_BLEND_SRC_ALPHA                                                    = 0x80CB;
const GL_COMPRESSED_RGB                                                     = 0x84ED;
const GL_MAX_CUBE_MAP_TEXTURE_SIZE                                          = 0x851C;
const GL_TEXTURE_CUBE_MAP_POSITIVE_Y                                        = 0x8517;
const GL_POINT_SIZE_RANGE                                                   = 0x0B12;
const GL_TEXTURE_BINDING_CUBE_MAP                                           = 0x8514;
const GL_SAMPLE_COVERAGE_INVERT                                             = 0x80AB;
const GL_VIEW_CLASS_S3TC_DXT1_RGBA                                          = 0x82CD;
const GL_FLOAT_MAT4x3                                                       = 0x8B6A;
const GL_SAMPLE_COVERAGE                                                    = 0x80A0;
const GL_SAMPLE_ALPHA_TO_COVERAGE                                           = 0x809E;
const GL_RGBA16F                                                            = 0x881A;
const GL_TEXTURE28                                                          = 0x84DC;
const GL_MAX_FRAMEBUFFER_WIDTH                                              = 0x9315;
const GL_CONSTANT_ALPHA                                                     = 0x8003;
const GL_TEXTURE26                                                          = 0x84DA;
const GL_TEXTURE25                                                          = 0x84D9;
const GL_TEXTURE24                                                          = 0x84D8;
const GL_TEXTURE22                                                          = 0x84D6;
const GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY                                   = 0x910C;
const GL_TEXTURE18                                                          = 0x84D2;
const GL_MAX_VIEWPORT_DIMS                                                  = 0x0D3A;
const GL_TEXTURE17                                                          = 0x84D1;
const GL_SHADER_STORAGE_BUFFER_SIZE                                         = 0x90D5;
const GL_TEXTURE16                                                          = 0x84D0;
const GL_TEXTURE13                                                          = 0x84CD;
const GL_TEXTURE11                                                          = 0x84CB;
const GL_READ_FRAMEBUFFER                                                   = 0x8CA8;
const GL_TEXTURE10                                                          = 0x84CA;
const GL_TEXTURE8                                                           = 0x84C8;
const GL_UNSIGNED_INT_SAMPLER_CUBE                                          = 0x8DD4;
const GL_TEXTURE7                                                           = 0x84C7;
const GL_MAJOR_VERSION                                                      = 0x821B;
const GL_TEXTURE6                                                           = 0x84C6;
const GL_VIEW_CLASS_BPTC_UNORM                                              = 0x82D2;
const GL_PACK_COMPRESSED_BLOCK_WIDTH                                        = 0x912B;
const GL_TEXTURE2                                                           = 0x84C2;
const GL_STACK_OVERFLOW                                                     = 0x0503;
const GL_TEXTURE0                                                           = 0x84C0;
const GL_BUFFER_VARIABLE                                                    = 0x92E5;
const GL_MAX_ARRAY_TEXTURE_LAYERS                                           = 0x88FF;
const GL_LINES_ADJACENCY                                                    = 0x000A;
const GL_SMOOTH_LINE_WIDTH_RANGE                                            = 0x0B22;
const GL_LINE_WIDTH_RANGE                                                   = 0x0B22;
const GL_SMOOTH_POINT_SIZE_RANGE                                            = 0x0B12;
const GL_POINT_SIZE_RANGE                                                   = 0x0B12;
const GL_TEXTURE_MIN_LOD                                                    = 0x813A;
const GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING                                 = 0x889F;
const GL_TEXTURE19                                                          = 0x84D3;
const GL_CLAMP_TO_EDGE                                                      = 0x812F;
const GL_RGB8_SNORM                                                         = 0x8F96;
const GL_MAX_ELEMENTS_VERTICES                                              = 0x80E8;
const GL_DRAW_BUFFER4                                                       = 0x8829;
const GL_BGR                                                                = 0x80E0;
const GL_FRAMEBUFFER_BARRIER_BIT                                            = 0x00000400;
const GL_UNSIGNED_INT_8_8_8_8_REV                                           = 0x8367;
const GL_RGB16I                                                             = 0x8D89;
const GL_TEXTURE15                                                          = 0x84CF;
const GL_UNSIGNED_SHORT_5_6_5_REV                                           = 0x8364;
const GL_MAX_GEOMETRY_UNIFORM_BLOCKS                                        = 0x8A2C;
const GL_UNSIGNED_SHORT_5_6_5                                               = 0x8363;
const GL_UNSIGNED_BYTE_2_3_3_REV                                            = 0x8362;
const GL_MAX_3D_TEXTURE_SIZE                                                = 0x8073;
const GL_TEXTURE_WRAP_R                                                     = 0x8072;
const GL_MIN_MAP_BUFFER_ALIGNMENT                                           = 0x90BC;
const GL_INT_VEC3                                                           = 0x8B54;
const GL_DRAW_BUFFER11                                                      = 0x8830;
const GL_TEXTURE_DEPTH                                                      = 0x8071;
const GL_PACK_SKIP_IMAGES                                                   = 0x806B;
const GL_SAMPLER_1D_ARRAY_SHADOW                                            = 0x8DC3;
const GL_TEXTURE_BINDING_3D                                                 = 0x806A;
const GL_VERTEX_ATTRIB_ARRAY_POINTER                                        = 0x8645;
const GL_COMPUTE_WORK_GROUP_SIZE                                            = 0x8267;
const GL_MAX_VERTEX_STREAMS                                                 = 0x8E71;
const GL_UNSIGNED_INT_10_10_10_2                                            = 0x8036;
const GL_UNSIGNED_SHORT_5_5_5_1                                             = 0x8034;
const GL_MAX_PATCH_VERTICES                                                 = 0x8E7D;
const GL_PIXEL_PACK_BUFFER_BINDING                                          = 0x88ED;
const GL_NEAREST_MIPMAP_NEAREST                                             = 0x2700;
const GL_UNSIGNED_SHORT_4_4_4_4                                             = 0x8033;
const GL_FLOAT_MAT4                                                         = 0x8B5C;
const GL_INTERNALFORMAT_RED_TYPE                                            = 0x8278;
const GL_UNSIGNED_INT_VEC3                                                  = 0x8DC7;
const GL_SRC_ALPHA_SATURATE                                                 = 0x0308;
const GL_CONTEXT_LOST                                                       = 0x0507;
const GL_MAX_COMBINED_ATOMIC_COUNTERS                                       = 0x92D7;
const GL_POINT                                                              = 0x1B00;
const GL_SHADER_COMPILER                                                    = 0x8DFA;
const GL_MAX_FRAGMENT_INPUT_COMPONENTS                                      = 0x9125;
const GL_VERTEX_ATTRIB_ARRAY_ENABLED                                        = 0x8622;
const GL_UNSIGNED_INT_IMAGE_BUFFER                                          = 0x9067;
const GL_RENDERBUFFER_INTERNAL_FORMAT                                       = 0x8D44;
const GL_SAMPLE_MASK                                                        = 0x8E51;
const GL_DEPTH_STENCIL_ATTACHMENT                                           = 0x821A;
const GL_STENCIL_PASS_DEPTH_FAIL                                            = 0x0B95;
const GL_R8_SNORM                                                           = 0x8F94;
const GL_VIEW_CLASS_RGTC2_RG                                                = 0x82D1;
const GL_CURRENT_VERTEX_ATTRIB                                              = 0x8626;
const GL_TEXTURE_GATHER                                                     = 0x82A2;
const GL_TEXTURE31                                                          = 0x84DF;
const GL_INT_SAMPLER_2D_RECT                                                = 0x8DCD;
const GL_R16UI                                                              = 0x8234;
const GL_UNIFORM_NAME_LENGTH                                                = 0x8A39;
const GL_STREAM_DRAW                                                        = 0x88E0;
const GL_VIEWPORT                                                           = 0x0BA2;
const GL_VERTEX_ATTRIB_ARRAY_SIZE                                           = 0x8623;
const GL_FRONT_FACE                                                         = 0x0B46;
const GL_ONE                                                                = 1;
const GL_BLEND_EQUATION_RGB                                                 = 0x8009;
const GL_RG8                                                                = 0x822B;
const GL_DEPTH_COMPONENT24                                                  = 0x81A6;
const GL_NEAREST_MIPMAP_LINEAR                                              = 0x2702;
const GL_QUERY_RESULT_NO_WAIT                                               = 0x9194;
const GL_BGRA_INTEGER                                                       = 0x8D9B;
const GL_UNIFORM_TYPE                                                       = 0x8A37;
const GL_UNSIGNALED                                                         = 0x9118;
const GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT                                  = 0x8CD6;
const GL_MAX_GEOMETRY_OUTPUT_COMPONENTS                                     = 0x9124;
const GL_POLYGON_OFFSET_POINT                                               = 0x2A01;
const GL_ACTIVE_VARIABLES                                                   = 0x9305;
const GL_DEBUG_CALLBACK_USER_PARAM                                          = 0x8245;
const GL_OR                                                                 = 0x1507;
const GL_BUFFER_USAGE                                                       = 0x8765;
const GL_SAMPLER_2D_RECT                                                    = 0x8B63;
const GL_RGBA16                                                             = 0x805B;
const GL_TESS_CONTROL_SHADER_BIT                                            = 0x00000008;
const GL_RGBA12                                                             = 0x805A;
const GL_UNSIGNED_INT_SAMPLER_2D                                            = 0x8DD2;
const GL_RGB10_A2                                                           = 0x8059;
const GL_RGBA8                                                              = 0x8058;
const GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS                                    = 0x91BC;
const GL_VERTEX_PROGRAM_POINT_SIZE                                          = 0x8642;
const GL_COLOR_ATTACHMENT1                                                  = 0x8CE1;
const GL_RGBA4                                                              = 0x8056;
const GL_RGB8                                                               = 0x8051;
const GL_FLOAT_VEC4                                                         = 0x8B52;
const GL_PROXY_TEXTURE_2D                                                   = 0x8064;
const GL_IMAGE_PIXEL_FORMAT                                                 = 0x82A9;
const GL_QUERY_BY_REGION_WAIT                                               = 0x8E15;
const GL_PROXY_TEXTURE_1D                                                   = 0x8063;
const GL_BUFFER_MAPPED                                                      = 0x88BC;
const GL_TEXTURE_BLUE_SIZE                                                  = 0x805E;
const GL_ARRAY_BUFFER                                                       = 0x8892;
const GL_DOUBLE                                                             = 0x140A;
const GL_TEXTURE_ALPHA_SIZE                                                 = 0x805F;
const GL_MAX_GEOMETRY_OUTPUT_VERTICES                                       = 0x8DE0;
const GL_TEXTURE_GREEN_SIZE                                                 = 0x805D;
const GL_SIGNALED                                                           = 0x9119;
const GL_UNIFORM_BUFFER_START                                               = 0x8A29;
const GL_TEXTURE_INTERNAL_FORMAT                                            = 0x1003;
const GL_COLOR_ATTACHMENT13                                                 = 0x8CED;
const GL_RGB32F                                                             = 0x8815;
const GL_CLEAR                                                              = 0x1500;
const GL_SAMPLES_PASSED                                                     = 0x8914;
const GL_INVALID_OPERATION                                                  = 0x0502;
const GL_TEXTURE_BINDING_2D                                                 = 0x8069;
const GL_TEXTURE_BINDING_1D                                                 = 0x8068;
const GL_POLYGON_OFFSET_LINE                                                = 0x2A02;
const GL_STENCIL_WRITEMASK                                                  = 0x0B98;
const GL_POLYGON_OFFSET_UNITS                                               = 0x2A00;
const GL_LOWER_LEFT                                                         = 0x8CA1;
const GL_CLIP_ORIGIN                                                        = 0x935C;
const GL_TEXTURE_BINDING_2D_MULTISAMPLE                                     = 0x9104;
const GL_STENCIL                                                            = 0x1802;
const GL_COLOR_LOGIC_OP                                                     = 0x0BF2;
const GL_RGB16F                                                             = 0x881B;
const GL_CURRENT_PROGRAM                                                    = 0x8B8D;
const GL_BGRA                                                               = 0x80E1;
const GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS                         = 0x92CE;
const GL_CLIP_DISTANCE7                                                     = 0x3007;
const GL_QUERY_NO_WAIT_INVERTED                                             = 0x8E18;
const GL_MAP_INVALIDATE_BUFFER_BIT                                          = 0x0008;
const GL_SRGB                                                               = 0x8C40;
const GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY                          = 0x910D;
const GL_READ_PIXELS                                                        = 0x828C;
const GL_UNSIGNED_INT_2_10_10_10_REV                                        = 0x8368;
const GL_RGB12                                                              = 0x8053;
const GL_RG16UI                                                             = 0x823A;
const GL_UNSIGNED_SHORT_4_4_4_4_REV                                         = 0x8365;
const GL_SMOOTH_POINT_SIZE_GRANULARITY                                      = 0x0B13;
const GL_POINT_SIZE_GRANULARITY                                             = 0x0B13;
const GL_UNIFORM_BLOCK_INDEX                                                = 0x8A3A;
const GL_MAX_FRAGMENT_UNIFORM_BLOCKS                                        = 0x8A2D;
const GL_BLEND_SRC_RGB                                                      = 0x80C9;
const GL_MAX_PROGRAM_TEXEL_OFFSET                                           = 0x8905;
const GL_LINE_SMOOTH_HINT                                                   = 0x0C52;
const GL_DEPTH_RANGE                                                        = 0x0B70;
const GL_SAMPLE_BUFFERS                                                     = 0x80A8;
const GL_TEXTURE_2D                                                         = 0x0DE1;
const GL_ARRAY_BUFFER_BINDING                                               = 0x8894;
const GL_MINOR_VERSION                                                      = 0x821C;
const GL_DEPTH                                                              = 0x1801;
const GL_IMAGE_BINDING_FORMAT                                               = 0x906E;
const GL_FRONT_RIGHT                                                        = 0x0401;
const GL_RGB4                                                               = 0x804F;
const GL_FRONT                                                              = 0x0404;
const GL_BOOL_VEC2                                                          = 0x8B57;
const GL_BUFFER_MAP_POINTER                                                 = 0x88BD;
const GL_STENCIL_BUFFER_BIT                                                 = 0x00000400;
const GL_FLOAT_32_UNSIGNED_INT_24_8_REV                                     = 0x8DAD;
const GL_COMPRESSED_SIGNED_RG_RGTC2                                         = 0x8DBE;
const GL_LINE_SMOOTH                                                        = 0x0B20;
const GL_TEXTURE29                                                          = 0x84DD;
const GL_DOUBLE_MAT4x3                                                      = 0x8F4E;
const GL_TEXTURE27                                                          = 0x84DB;
const GL_COMPRESSED_RG                                                      = 0x8226;
const GL_DONT_CARE                                                          = 0x1100;
const GL_CLEAR_BUFFER                                                       = 0x82B4;
const GL_DEPTH_CLAMP                                                        = 0x864F;
const GL_MAX_TEXTURE_BUFFER_SIZE                                            = 0x8C2B;
const GL_NOR                                                                = 0x1508;
const GL_POINT_SIZE_GRANULARITY                                             = 0x0B13;
const GL_UNIFORM                                                            = 0x92E1;
const GL_POLYGON_SMOOTH                                                     = 0x0B41;
const GL_DEBUG_TYPE_MARKER                                                  = 0x8268;
const GL_COMPRESSED_RG_RGTC2                                                = 0x8DBD;
const GL_TRANSFORM_FEEDBACK_BINDING                                         = 0x8E25;
const GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES                               = 0x8A43;
const GL_PACK_LSB_FIRST                                                     = 0x0D01;
const GL_MAX_FRAMEBUFFER_LAYERS                                             = 0x9317;
const GL_TEXTURE_SWIZZLE_RGBA                                               = 0x8E46;
const GL_RGB16                                                              = 0x8054;
const GL_REPEAT                                                             = 0x2901;
const GL_LINE_WIDTH                                                         = 0x0B21;
const GL_RGB8I                                                              = 0x8D8F;
const GL_RGBA                                                               = 0x1908;
const GL_ALIASED_LINE_WIDTH_RANGE                                           = 0x846E;
const GL_TEXTURE_RED_SIZE                                                   = 0x805C;
const GL_TEXTURE_CUBE_MAP_POSITIVE_X                                        = 0x8515;
const GL_DECR                                                               = 0x1E03;
const GL_BLEND_DST_RGB                                                      = 0x80C8;
const GL_SEPARATE_ATTRIBS                                                   = 0x8C8D;
const GL_DEPTH_COMPONENT32                                                  = 0x81A7;
const GL_INT_SAMPLER_2D                                                     = 0x8DCA;
const GL_DRAW_BUFFER                                                        = 0x0C01;
const GL_R3_G3_B2                                                           = 0x2A10;
const GL_INT                                                                = 0x1404;
const GL_FRAGMENT_SHADER                                                    = 0x8B30;
const GL_LINE_WIDTH_RANGE                                                   = 0x0B22;
const GL_SAMPLER_CUBE_SHADOW                                                = 0x8DC5;
const GL_FLOAT                                                              = 0x1406;
const GL_UNIFORM_OFFSET                                                     = 0x8A3B;
const GL_STENCIL_INDEX1                                                     = 0x8D46;
const GL_TEXTURE_MAX_LOD                                                    = 0x813B;
const GL_UNPACK_ALIGNMENT                                                   = 0x0CF5;
const GL_SCISSOR_BOX                                                        = 0x0C10;
const GL_TEXTURE1                                                           = 0x84C1;
const GL_MAX_WIDTH                                                          = 0x827E;
const GL_DEPTH_COMPONENT                                                    = 0x1902;
const GL_COLOR_RENDERABLE                                                   = 0x8286;
const GL_UNPACK_SKIP_PIXELS                                                 = 0x0CF4;
const GL_COPY_READ_BUFFER                                                   = 0x8F36;
const GL_COLOR_ATTACHMENT5                                                  = 0x8CE5;
const GL_STENCIL_BACK_PASS_DEPTH_PASS                                       = 0x8803;
const GL_TIMESTAMP                                                          = 0x8E28;
const GL_LINE_STRIP_ADJACENCY                                               = 0x000B;
const GL_RG8_SNORM                                                          = 0x8F95;
const GL_PRIMITIVE_RESTART_FIXED_INDEX                                      = 0x8D69;
const GL_ONE_MINUS_DST_ALPHA                                                = 0x0305;
const GL_ARRAY_STRIDE                                                       = 0x92FE;
const GL_IMAGE_3D                                                           = 0x904E;
const GL_COLOR                                                              = 0x1800;
const GL_TEXTURE_2D_ARRAY                                                   = 0x8C1A;
const GL_TRIANGLES                                                          = 0x0004;
const GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT                                   = 0x8E8E;
const GL_DOUBLEBUFFER                                                       = 0x0C32;
const GL_ATOMIC_COUNTER_BUFFER_SIZE                                         = 0x92C3;
const GL_PROGRAM_BINARY_RETRIEVABLE_HINT                                    = 0x8257;
const GL_UNSIGNED_INT_SAMPLER_1D                                            = 0x8DD1;
const GL_LINE                                                               = 0x1B01;
const GL_BLEND_EQUATION                                                     = 0x8009;
const GL_NAND                                                               = 0x150E;
const GL_PROXY_TEXTURE_CUBE_MAP                                             = 0x851B;
const GL_COLOR_ATTACHMENT24                                                 = 0x8CF8;
const GL_AND                                                                = 0x1501;
const GL_FLOAT_MAT3x4                                                       = 0x8B68;
const GL_MAX_UNIFORM_BUFFER_BINDINGS                                        = 0x8A2F;
const GL_UNSIGNED_INT_8_8_8_8                                               = 0x8035;
const GL_CLIP_DISTANCE5                                                     = 0x3005;
const GL_CLIP_PLANE5                                                        = 0x3005;
const GL_POLYGON_OFFSET_FACTOR                                              = 0x8038;
const GL_UNSIGNED_BYTE                                                      = 0x1401;
const GL_INTERNALFORMAT_DEPTH_SIZE                                          = 0x8275;
const GL_UNIFORM_BUFFER_BINDING                                             = 0x8A28;
const GL_DEPTH_FUNC                                                         = 0x0B74;
const GL_TEXTURE_MAG_FILTER                                                 = 0x2800;
const GL_PACK_IMAGE_HEIGHT                                                  = 0x806C;
const GL_ONE_MINUS_CONSTANT_ALPHA                                           = 0x8004;
const GL_SAMPLE_ALPHA_TO_ONE                                                = 0x809F;
const GL_NONE                                                               = 0;
const GL_BUFFER_BINDING                                                     = 0x9302;
const GL_CLIP_DISTANCE1                                                     = 0x3001;
const GL_CLIP_PLANE1                                                        = 0x3001;
const GL_BACK_LEFT                                                          = 0x0402;
const GL_XOR                                                                = 0x1506;
const GL_SRC_COLOR                                                          = 0x0300;
const GL_SAMPLER_1D_ARRAY                                                   = 0x8DC0;
const GL_SAMPLER_BUFFER                                                     = 0x8DC2;
const GL_ACTIVE_UNIFORM_MAX_LENGTH                                          = 0x8B87;
const GL_BUFFER_SIZE                                                        = 0x8764;
const GL_SRGB_WRITE                                                         = 0x8298;
const GL_STREAM_COPY                                                        = 0x88E2;
const GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS                            = 0x8266;
const GL_FIXED                                                              = 0x140C;
const GL_BYTE                                                               = 0x1400;
const GL_TEXTURE_CUBE_MAP_NEGATIVE_Z                                        = 0x851A;
const GL_VERTEX_ATTRIB_ARRAY_STRIDE                                         = 0x8624;
const GL_IMAGE_TEXEL_SIZE                                                   = 0x82A7;
const GL_COLOR_CLEAR_VALUE                                                  = 0x0C22;
const GL_LINE_STRIP                                                         = 0x0003;
const GL_TEXTURE_3D                                                         = 0x806F;
const GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER                         = 0x90EC;
const GL_LOGIC_OP_MODE                                                      = 0x0BF0;
const GL_CW                                                                 = 0x0900;
const GL_ACTIVE_ATTRIBUTES                                                  = 0x8B89;
const GL_LINEAR                                                             = 0x2601;
const GL_RENDERBUFFER                                                       = 0x8D41;
const GL_PARAMETER_BUFFER_BINDING                                           = 0x80EF;
const GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER                                 = 0x8CDB;
const GL_BACK_RIGHT                                                         = 0x0403;
const GL_TEXTURE_MAX_LEVEL                                                  = 0x813D;
const GL_TEXTURE30                                                          = 0x84DE;
const GL_TEXTURE_BINDING_RECTANGLE                                          = 0x84F6;
const GL_AND_REVERSE                                                        = 0x1502;
const GL_QUERY_COUNTER_BITS                                                 = 0x8864;
const GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY                            = 0x906C;
const GL_DEPTH_CLEAR_VALUE                                                  = 0x0B73;
const GL_TEXTURE_BINDING_BUFFER                                             = 0x8C2C;
const GL_INTERNALFORMAT_ALPHA_SIZE                                          = 0x8274;
const GL_MAX_COMPUTE_ATOMIC_COUNTERS                                        = 0x8265;
const GL_MAX_VERTEX_UNIFORM_COMPONENTS                                      = 0x8B4A;
const GL_OUT_OF_MEMORY                                                      = 0x0505;
const GL_SAMPLER_CUBE                                                       = 0x8B60;
const GL_UNSIGNED_BYTE_3_3_2                                                = 0x8032;
const GL_GEQUAL                                                             = 0x0206;
const GL_MAX_GEOMETRY_UNIFORM_COMPONENTS                                    = 0x8DDF;
const GL_COLOR_BUFFER_BIT                                                   = 0x00004000;
const GL_TEXTURE_COMPRESSION_HINT                                           = 0x84EF;
const GL_SMOOTH_LINE_WIDTH_GRANULARITY                                      = 0x0B23;
const GL_LINE_WIDTH_GRANULARITY                                             = 0x0B23;
const GL_FRAMEBUFFER_DEFAULT_HEIGHT                                         = 0x9311;
const GL_PACK_COMPRESSED_BLOCK_SIZE                                         = 0x912E;
const GL_SIGNED_NORMALIZED                                                  = 0x8F9C;
const GL_INVALID_ENUM                                                       = 0x0500;
const GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX                                = 0x92DA;
const GL_GEOMETRY_INPUT_TYPE                                                = 0x8917;
const GL_RGBA32F                                                            = 0x8814;
const GL_SAMPLER_1D                                                         = 0x8B5D;
const GL_BOOL_VEC4                                                          = 0x8B59;
const GL_ANY_SAMPLES_PASSED                                                 = 0x8C2F;
const GL_CLIP_DISTANCE0                                                     = 0x3000;
const GL_CLIP_PLANE0                                                        = 0x3000;
const GL_UNPACK_SKIP_IMAGES                                                 = 0x806D;
const GL_PROXY_TEXTURE_2D_ARRAY                                             = 0x8C1B;
const GL_DYNAMIC_READ                                                       = 0x88E9;
const GL_SAMPLES                                                            = 0x80A9;
const GL_TRANSFORM_FEEDBACK_OVERFLOW                                        = 0x82EC;
const GL_COLOR_ATTACHMENT25                                                 = 0x8CF9;
const GL_TEXTURE9                                                           = 0x84C9;
const GL_SAMPLER_2D_ARRAY_SHADOW                                            = 0x8DC4;
const GL_TEXTURE                                                            = 0x1702;
const GL_AND_INVERTED                                                       = 0x1504;
const GL_INVALID_FRAMEBUFFER_OPERATION                                      = 0x0506;
const GL_ACTIVE_TEXTURE                                                     = 0x84E0;
const GL_BLEND                                                              = 0x0BE2;
const GL_SRGB_ALPHA                                                         = 0x8C42;
const GL_ONE_MINUS_SRC_ALPHA                                                = 0x0303;
const GL_MAX_VARYING_VECTORS                                                = 0x8DFC;
const GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS                            = 0x8C8B;
const GL_ONE_MINUS_CONSTANT_COLOR                                           = 0x8002;
const GL_DEBUG_LOGGED_MESSAGES                                              = 0x9145;
const GL_COLOR_WRITEMASK                                                    = 0x0C23;
const GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS                                   = 0x8C29;
const GL_MAP_FLUSH_EXPLICIT_BIT                                             = 0x0010;
const GL_MAX_CLIP_DISTANCES                                                 = 0x0D32;
const GL_MAX_CLIP_PLANES                                                    = 0x0D32;
const GL_TEXTURE_WRAP_T                                                     = 0x2803;
const GL_MIN_PROGRAM_TEXEL_OFFSET                                           = 0x8904;
const GL_RGBA_INTEGER                                                       = 0x8D99;
const GL_INVALID_VALUE                                                      = 0x0501;
const GL_TEXTURE_WRAP_S                                                     = 0x2802;
const GL_TEXTURE_MIN_FILTER                                                 = 0x2801;
const GL_LINEAR_MIPMAP_NEAREST                                              = 0x2701;
const GL_DRAW_BUFFER3                                                       = 0x8828;
const GL_EXTENSIONS                                                         = 0x1F03;
const GL_LOW_INT                                                            = 0x8DF3;
const GL_FRAMEBUFFER_UNSUPPORTED                                            = 0x8CDD;
const GL_RENDERER                                                           = 0x1F01;
const GL_TEXTURE_BUFFER_OFFSET                                              = 0x919D;
const GL_NO_ERROR                                                           = 0;
const GL_REPLACE                                                            = 0x1E01;
const GL_TESS_CONTROL_SHADER                                                = 0x8E88;
const GL_PATCH_VERTICES                                                     = 0x8E72;
const GL_STENCIL_BACK_FUNC                                                  = 0x8800;
const GL_KEEP                                                               = 0x1E00;
const GL_FILL                                                               = 0x1B02;
const GL_CCW                                                                = 0x0901;
const GL_TEXTURE_CUBE_MAP_NEGATIVE_X                                        = 0x8516;
const GL_TEXTURE14                                                          = 0x84CE;
const GL_DEPTH24_STENCIL8                                                   = 0x88F0;
const GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM                                   = 0x8E8D;
const GL_UNPACK_COMPRESSED_BLOCK_WIDTH                                      = 0x9127;
const GL_TEXTURE_WIDTH                                                      = 0x1000;
const GL_NOOP                                                               = 0x1505;
const GL_RGB                                                                = 0x1907;
const GL_COMPUTE_SHADER_INVOCATIONS                                         = 0x82F5;
const GL_ALPHA                                                              = 0x1906;
const GL_MAX_UNIFORM_BLOCK_SIZE                                             = 0x8A30;
const GL_BLUE                                                               = 0x1905;
const GL_GREEN                                                              = 0x1904;
const GL_GET_TEXTURE_IMAGE_FORMAT                                           = 0x8291;
const GL_UNPACK_IMAGE_HEIGHT                                                = 0x806E;
const GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS                                 = 0x90CC;
const GL_UNIFORM_BUFFER_SIZE                                                = 0x8A2A;
const GL_INVALID_INDEX                                                      = 0xFFFFFFFF;
const GL_RENDERBUFFER_RED_SIZE                                              = 0x8D50;
const GL_STENCIL_INDEX                                                      = 0x1901;
const GL_SET                                                                = 0x150F;
const GL_TRIANGLE_STRIP                                                     = 0x0005;
const GL_SUBPIXEL_BITS                                                      = 0x0D50;
const GL_IMAGE_BINDING_NAME                                                 = 0x8F3A;
const GL_STENCIL_FUNC                                                       = 0x0B92;
const GL_FALSE                                                              = 0;
const GL_TRANSFORM_FEEDBACK_VARYING                                         = 0x92F4;
const GL_MAX_COMPUTE_SHARED_MEMORY_SIZE                                     = 0x8262;
const GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME                                 = 0x8CD1;
const GL_COPY_INVERTED                                                      = 0x150C;
const GL_STACK_UNDERFLOW                                                    = 0x0504;
const GL_ZERO                                                               = 0;
const GL_CULL_FACE                                                          = 0x0B44;
const GL_OR_REVERSE                                                         = 0x150B;
const GL_INVERT                                                             = 0x150A;
const GL_IMAGE_BINDING_ACCESS                                               = 0x8F3E;
const GL_PACK_ALIGNMENT                                                     = 0x0D05;
const GL_EQUIV                                                              = 0x1509;
const GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED                                   = 0x8E23;
const GL_POINT_SIZE                                                         = 0x0B11;
const GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT                                   = 0x00004000;
const GL_DOUBLE_MAT2x4                                                      = 0x8F4A;
const GL_TEXTURE20                                                          = 0x84D4;
const GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS                                   = 0x8B4D;
const GL_COPY                                                               = 0x1503;
const GL_TEXTURE_COMPRESSED                                                 = 0x86A1;
const GL_PROGRAM_BINARY_LENGTH                                              = 0x8741;
const GL_UNSIGNED_INT                                                       = 0x1405;
const GL_TEXTURE4                                                           = 0x84C4;
const GL_TIME_ELAPSED                                                       = 0x88BF;
const GL_HALF_FLOAT                                                         = 0x140B;
const GL_STATIC_COPY                                                        = 0x88E6;
const GL_INT_SAMPLER_CUBE_MAP_ARRAY                                         = 0x900E;
const GL_UNSIGNED_SHORT                                                     = 0x1403;
const GL_TEXTURE_1D                                                         = 0x0DE0;
const GL_INTERNALFORMAT_GREEN_TYPE                                          = 0x8279;
const GL_MAX_TEXTURE_SIZE                                                   = 0x0D33;
const GL_CLIPPING_INPUT_PRIMITIVES                                          = 0x82F6;
const GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT                                    = 0x00000001;
const GL_PACK_SKIP_PIXELS                                                   = 0x0D04;
const GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY                                     = 0x9061;
const GL_NEAREST                                                            = 0x2600;
const GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS                      = 0x8F39;
const GL_BLEND_SRC                                                          = 0x0BE1;
const GL_SAMPLE_MASK_VALUE                                                  = 0x8E52;
const GL_MAX_GEOMETRY_INPUT_COMPONENTS                                      = 0x9123;
const GL_PACK_SKIP_ROWS                                                     = 0x0D03;
const GL_RG32I                                                              = 0x823B;
const GL_PACK_ROW_LENGTH                                                    = 0x0D02;
const GL_TEXTURE12                                                          = 0x84CC;
const GL_SHADER_IMAGE_LOAD                                                  = 0x82A4;
const GL_GEOMETRY_VERTICES_OUT                                              = 0x8916;
const GL_SCISSOR_TEST                                                       = 0x0C11;
const GL_COMPRESSED_RED                                                     = 0x8225;
const GL_LEQUAL                                                             = 0x0203;
const GL_POLYGON_MODE                                                       = 0x0B40;
const GL_BLEND_DST                                                          = 0x0BE0;
const GL_SAMPLER_3D                                                         = 0x8B5F;
const GL_STENCIL_VALUE_MASK                                                 = 0x0B93;
const GL_FRAMEBUFFER_RENDERABLE                                             = 0x8289;
const GL_COMPRESSED_RED_RGTC1                                               = 0x8DBB;
const GL_OR_INVERTED                                                        = 0x150D;
const GL_STENCIL_RENDERABLE                                                 = 0x8288;
const GL_DRAW_BUFFER0                                                       = 0x8825;
const GL_READ_BUFFER                                                        = 0x0C02;
const GL_NICEST                                                             = 0x1102;
const GL_TEXTURE_BUFFER_DATA_STORE_BINDING                                  = 0x8C2D;
const GL_STENCIL_TEST                                                       = 0x0B90;
const GL_CONTEXT_FLAG_NO_ERROR_BIT                                          = 0x00000008;
const GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2                          = 0x9277;
const GL_RENDERBUFFER_ALPHA_SIZE                                            = 0x8D53;
const GL_DITHER                                                             = 0x0BD0;
const GL_STENCIL_INDEX8                                                     = 0x8D48;
const GL_DEPTH_COMPONENT16                                                  = 0x81A5;
const GL_QUERY_WAIT_INVERTED                                                = 0x8E17;
const GL_PACK_SWAP_BYTES                                                    = 0x0D00;
const GL_UNIFORM_BLOCK_DATA_SIZE                                            = 0x8A40;
const GL_TEXTURE_BORDER_COLOR                                               = 0x1004;
const GL_PRIMITIVES_SUBMITTED                                               = 0x82EF;
const GL_READ_PIXELS_FORMAT                                                 = 0x828D;
const GL_STENCIL_REF                                                        = 0x0B97;
const GL_PROXY_TEXTURE_3D                                                   = 0x8070;
const GL_MAX_FRAMEBUFFER_SAMPLES                                            = 0x9318;
const GL_RENDERBUFFER_WIDTH                                                 = 0x8D42;
const GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2                           = 0x9276;
const GL_TEXTURE_SWIZZLE_R                                                  = 0x8E42;
const GL_STENCIL_PASS_DEPTH_PASS                                            = 0x0B96;
const GL_RG32UI                                                             = 0x823C;
const GL_EQUAL                                                              = 0x0202;
const GL_STENCIL_CLEAR_VALUE                                                = 0x0B91;
const GL_UNPACK_SWAP_BYTES                                                  = 0x0CF0;
const GL_POLYGON_SMOOTH_HINT                                                = 0x0C53;
const GL_CONTEXT_PROFILE_MASK                                               = 0x9126;
const GL_FRAMEBUFFER                                                        = 0x8D40;
const GL_TEXTURE_HEIGHT                                                     = 0x1001;
const GL_TEXTURE_BASE_LEVEL                                                 = 0x813C;
const GL_RGB5                                                               = 0x8050;
const GL_TRIANGLE_FAN                                                       = 0x0006;
const GL_UNPACK_ROW_LENGTH                                                  = 0x0CF2;
const GL_TESS_EVALUATION_SHADER_BIT                                         = 0x00000010;
const GL_TEXTURE21                                                          = 0x84D5;
const GL_LINES                                                              = 0x0001;
const GL_TEXTURE_DEPTH_TYPE                                                 = 0x8C16;
const GL_DEPTH_BUFFER_BIT                                                   = 0x00000100;
const GL_TEXTURE_COMPARE_FUNC                                               = 0x884D;
const GL_LOCATION                                                           = 0x930E;
const GL_RIGHT                                                              = 0x0407;
const GL_INT_SAMPLER_2D_MULTISAMPLE                                         = 0x9109;
const GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS                           = 0x8E85;
const GL_SRC_ALPHA                                                          = 0x0302;
const GL_INCR_WRAP                                                          = 0x8507;
const GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE                                   = 0x934C;
const GL_LESS                                                               = 0x0201;
const GL_IMAGE_CLASS_1_X_8                                                  = 0x82C1;
const GL_MAX_COMBINED_UNIFORM_BLOCKS                                        = 0x8A2E;
const GL_MULTISAMPLE                                                        = 0x809D;
const GL_DRAW_BUFFER6                                                       = 0x882B;
const GL_SYNC_FLAGS                                                         = 0x9115;
const GL_FRONT_AND_BACK                                                     = 0x0408;
const GL_LEFT                                                               = 0x0406;
const GL_TESS_CONTROL_SUBROUTINE                                            = 0x92E9;
const GL_FRAMEBUFFER_BINDING                                                = 0x8CA6;
const GL_RGB8UI                                                             = 0x8D7D;
const GL_COMPRESSED_SIGNED_R11_EAC                                          = 0x9271;
const GL_LINE_WIDTH_GRANULARITY                                             = 0x0B23;
const GL_BACK                                                               = 0x0405;
const GL_PROXY_TEXTURE_2D_MULTISAMPLE                                       = 0x9101;
const GL_RGB10                                                              = 0x8052;
const GL_CONTEXT_CORE_PROFILE_BIT                                           = 0x00000001;
const GL_CLIP_DISTANCE3                                                     = 0x3003;
const GL_CLIP_PLANE3                                                        = 0x3003;
const GL_STENCIL_FAIL                                                       = 0x0B94;
const GL_RG                                                                 = 0x8227;
const GL_SAMPLE_COVERAGE_VALUE                                              = 0x80AA;
const GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT                          = 0x8CD7;
const GL_ALWAYS                                                             = 0x0207;
const GL_COLOR_ATTACHMENT28                                                 = 0x8CFC;
const GL_FUNC_ADD                                                           = 0x8006;
const GL_CLIP_DISTANCE2                                                     = 0x3002;
const GL_CLIP_PLANE2                                                        = 0x3002;
const GL_QUERY_RESULT_AVAILABLE                                             = 0x8867;
const GL_UNSIGNED_INT_SAMPLER_3D                                            = 0x8DD3;
const GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER                 = 0x90ED;
const GL_FRONT_LEFT                                                         = 0x0400;
const GL_DEPTH_RENDERABLE                                                   = 0x8287;
const GL_DEPTH_WRITEMASK                                                    = 0x0B72;
const GL_DRAW_BUFFER14                                                      = 0x8833;
const GL_IMPLEMENTATION_COLOR_READ_FORMAT                                   = 0x8B9B;
const GL_UNSIGNED_SHORT_1_5_5_5_REV                                         = 0x8366;
const GL_ONE_MINUS_DST_COLOR                                                = 0x0307;
const GL_LINE_LOOP                                                          = 0x0002;
const GL_SHADER_STORAGE_BUFFER_START                                        = 0x90D4;
const GL_VERTEX_ATTRIB_ARRAY_NORMALIZED                                     = 0x886A;
const GL_INTERNALFORMAT_STENCIL_SIZE                                        = 0x8276;
const GL_NOTEQUAL                                                           = 0x0205;
const GL_DEBUG_SOURCE_APPLICATION                                           = 0x824A;
const GL_TEXTURE5                                                           = 0x84C5;
const GL_MAX_DEPTH_TEXTURE_SAMPLES                                          = 0x910F;
const GL_DST_COLOR                                                          = 0x0306;
const GL_COMPILE_STATUS                                                     = 0x8B81;
const GL_RED                                                                = 0x1903;
const GL_INTERNALFORMAT_STENCIL_TYPE                                        = 0x827D;
const GL_ACTIVE_UNIFORMS                                                    = 0x8B86;
const GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE                                 = 0x8CD0;
const GL_RGB_INTEGER                                                        = 0x8D98;
const GL_FASTEST                                                            = 0x1101;
const GL_COLOR_ATTACHMENT3                                                  = 0x8CE3;
const GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS                                 = 0x90D7;
const GL_DST_ALPHA                                                          = 0x0304;
const GL_STEREO                                                             = 0x0C33;
const GL_RGB5_A1                                                            = 0x8057;
const GL_UNPACK_SKIP_ROWS                                                   = 0x0CF3;
const GL_GREATER                                                            = 0x0204;
const GL_POLYGON_OFFSET_FILL                                                = 0x8037;
const GL_PRIMITIVE_RESTART                                                  = 0x8F9D;
const GL_TRUE                                                               = 1;
const GL_NEVER                                                              = 0x0200;
const GL_VENDOR                                                             = 0x1F00;
const GL_POINTS                                                             = 0x0000;
const GL_ONE_MINUS_SRC_COLOR                                                = 0x0301;
const GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS                           = 0x8A33;
const GL_MIRRORED_REPEAT                                                    = 0x8370;
const GL_RGBA8UI                                                            = 0x8D7C;
const GL_VERSION                                                            = 0x1F02;
const GL_MAX_LAYERS                                                         = 0x8281;
const GL_MAX_VERTEX_UNIFORM_BLOCKS                                          = 0x8A2B;
const GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE                                 = 0x90C8;
const GL_UNIFORM_BUFFER                                                     = 0x8A11;
const GL_TEXTURE23                                                          = 0x84D7;
const GL_UNKNOWN_CONTEXT_RESET                                              = 0x8255;
const GL_CONTEXT_FLAG_DEBUG_BIT                                             = 0x00000002;
const GL_MAX_TRANSFORM_FEEDBACK_BUFFERS                                     = 0x8E70;
const GL_INTERLEAVED_ATTRIBS                                                = 0x8C8C;


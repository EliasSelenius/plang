
OpaqueType* ot;

type OpaqueType;
type func = void(OpaqueType*);

const Foo = 0x1FFaBC09;

void take_opaque(OpaqueType* ot) {
    print("Hello, Opaque\n");
}

void reg(func f) {
    print("reg\n");
    f(null);
}

int32 main() {

    let f = Foo;
    f = 0x10;

    f = 0x;

    reg(take_opaque);


    print("Hello, Sailor!\n");

    Test t;
    t.x = 543.32;

    print("Hello ", f, 5, " ", t.x, "yes");

    {
        print("\n\n");
        for (uint32 i in 0 .. 10) {
            print(i, "\n");
        }
    }

    return 0;
}

struct Test {
    float32 x, y, z, w;
    float64 i, j, k;
    OpaqueType* o1, o2;
}
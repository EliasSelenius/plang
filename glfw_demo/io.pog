

declare int32 fopen_s(void** stream, char* filename, char* mode);
declare int32 fclose(void* stream);

declare int32 fseek(void* stream, int32 offset, int32 origin);
declare uint64 ftell(void* stream);
declare void rewind(void* stream);
declare uint64 fread(void* buffer, uint64 elementSize, uint64 elementCount, void* stream);

declare void* calloc(uint64 count, uint64 size);
declare void* malloc(uint64 size);
declare void free(void* block);
declare void* realloc(void* buffer, uint64 size);
declare void* memcpy(void* dst, void* src, uint64 size);

char* fileread(char* filename) {
    void* stream;
    if (fopen_s(*stream, filename, "r")) {
        print("Could not open file");
        return null;
    }

    fseek(stream, 0, 2); // 2 = SEEK_END
    uint64 len = ftell(stream);
    rewind(stream);

    char* res = calloc(len + 1, 1ul);
    fread(res, 1ul, len, stream);

    fclose(stream);

    return res;
}